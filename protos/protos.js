/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.irm = (function() {
    
                /**
                 * Namespace irm.
                 * @memberof google.cloud
                 * @namespace
                 */
                var irm = {};
    
                irm.v1alpha2 = (function() {
    
                    /**
                     * Namespace v1alpha2.
                     * @memberof google.cloud.irm
                     * @namespace
                     */
                    var v1alpha2 = {};
    
                    v1alpha2.IncidentService = (function() {
    
                        /**
                         * Constructs a new IncidentService service.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an IncidentService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function IncidentService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (IncidentService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = IncidentService;
    
                        /**
                         * Creates new IncidentService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {IncidentService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        IncidentService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createIncident}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateIncidentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Incident} [response] Incident
                         */
    
                        /**
                         * Calls CreateIncident.
                         * @function createIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRequest} request CreateIncidentRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateIncidentCallback} callback Node-style callback called with the error, if any, and Incident
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createIncident = function createIncident(request, callback) {
                            return this.rpcCall(createIncident, $root.google.cloud.irm.v1alpha2.CreateIncidentRequest, $root.google.cloud.irm.v1alpha2.Incident, request, callback);
                        }, "name", { value: "CreateIncident" });
    
                        /**
                         * Calls CreateIncident.
                         * @function createIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRequest} request CreateIncidentRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Incident>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#getIncident}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef GetIncidentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Incident} [response] Incident
                         */
    
                        /**
                         * Calls GetIncident.
                         * @function getIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IGetIncidentRequest} request GetIncidentRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.GetIncidentCallback} callback Node-style callback called with the error, if any, and Incident
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.getIncident = function getIncident(request, callback) {
                            return this.rpcCall(getIncident, $root.google.cloud.irm.v1alpha2.GetIncidentRequest, $root.google.cloud.irm.v1alpha2.Incident, request, callback);
                        }, "name", { value: "GetIncident" });
    
                        /**
                         * Calls GetIncident.
                         * @function getIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IGetIncidentRequest} request GetIncidentRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Incident>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#searchIncidents}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef SearchIncidentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.SearchIncidentsResponse} [response] SearchIncidentsResponse
                         */
    
                        /**
                         * Calls SearchIncidents.
                         * @function searchIncidents
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsRequest} request SearchIncidentsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.SearchIncidentsCallback} callback Node-style callback called with the error, if any, and SearchIncidentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.searchIncidents = function searchIncidents(request, callback) {
                            return this.rpcCall(searchIncidents, $root.google.cloud.irm.v1alpha2.SearchIncidentsRequest, $root.google.cloud.irm.v1alpha2.SearchIncidentsResponse, request, callback);
                        }, "name", { value: "SearchIncidents" });
    
                        /**
                         * Calls SearchIncidents.
                         * @function searchIncidents
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsRequest} request SearchIncidentsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.SearchIncidentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#updateIncident}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef UpdateIncidentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Incident} [response] Incident
                         */
    
                        /**
                         * Calls UpdateIncident.
                         * @function updateIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateIncidentRequest} request UpdateIncidentRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.UpdateIncidentCallback} callback Node-style callback called with the error, if any, and Incident
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.updateIncident = function updateIncident(request, callback) {
                            return this.rpcCall(updateIncident, $root.google.cloud.irm.v1alpha2.UpdateIncidentRequest, $root.google.cloud.irm.v1alpha2.Incident, request, callback);
                        }, "name", { value: "UpdateIncident" });
    
                        /**
                         * Calls UpdateIncident.
                         * @function updateIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateIncidentRequest} request UpdateIncidentRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Incident>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#searchSimilarIncidents}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef SearchSimilarIncidentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse} [response] SearchSimilarIncidentsResponse
                         */
    
                        /**
                         * Calls SearchSimilarIncidents.
                         * @function searchSimilarIncidents
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsRequest} request SearchSimilarIncidentsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.SearchSimilarIncidentsCallback} callback Node-style callback called with the error, if any, and SearchSimilarIncidentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.searchSimilarIncidents = function searchSimilarIncidents(request, callback) {
                            return this.rpcCall(searchSimilarIncidents, $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest, $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse, request, callback);
                        }, "name", { value: "SearchSimilarIncidents" });
    
                        /**
                         * Calls SearchSimilarIncidents.
                         * @function searchSimilarIncidents
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsRequest} request SearchSimilarIncidentsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createAnnotation}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateAnnotationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Annotation} [response] Annotation
                         */
    
                        /**
                         * Calls CreateAnnotation.
                         * @function createAnnotation
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateAnnotationRequest} request CreateAnnotationRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateAnnotationCallback} callback Node-style callback called with the error, if any, and Annotation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createAnnotation = function createAnnotation(request, callback) {
                            return this.rpcCall(createAnnotation, $root.google.cloud.irm.v1alpha2.CreateAnnotationRequest, $root.google.cloud.irm.v1alpha2.Annotation, request, callback);
                        }, "name", { value: "CreateAnnotation" });
    
                        /**
                         * Calls CreateAnnotation.
                         * @function createAnnotation
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateAnnotationRequest} request CreateAnnotationRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Annotation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#listAnnotations}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ListAnnotationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.ListAnnotationsResponse} [response] ListAnnotationsResponse
                         */
    
                        /**
                         * Calls ListAnnotations.
                         * @function listAnnotations
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsRequest} request ListAnnotationsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ListAnnotationsCallback} callback Node-style callback called with the error, if any, and ListAnnotationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.listAnnotations = function listAnnotations(request, callback) {
                            return this.rpcCall(listAnnotations, $root.google.cloud.irm.v1alpha2.ListAnnotationsRequest, $root.google.cloud.irm.v1alpha2.ListAnnotationsResponse, request, callback);
                        }, "name", { value: "ListAnnotations" });
    
                        /**
                         * Calls ListAnnotations.
                         * @function listAnnotations
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsRequest} request ListAnnotationsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.ListAnnotationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createTag}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateTagCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Tag} [response] Tag
                         */
    
                        /**
                         * Calls CreateTag.
                         * @function createTag
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateTagRequest} request CreateTagRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateTagCallback} callback Node-style callback called with the error, if any, and Tag
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createTag = function createTag(request, callback) {
                            return this.rpcCall(createTag, $root.google.cloud.irm.v1alpha2.CreateTagRequest, $root.google.cloud.irm.v1alpha2.Tag, request, callback);
                        }, "name", { value: "CreateTag" });
    
                        /**
                         * Calls CreateTag.
                         * @function createTag
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateTagRequest} request CreateTagRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Tag>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#deleteTag}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef DeleteTagCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTag.
                         * @function deleteTag
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteTagRequest} request DeleteTagRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.DeleteTagCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.deleteTag = function deleteTag(request, callback) {
                            return this.rpcCall(deleteTag, $root.google.cloud.irm.v1alpha2.DeleteTagRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTag" });
    
                        /**
                         * Calls DeleteTag.
                         * @function deleteTag
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteTagRequest} request DeleteTagRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#listTags}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ListTagsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.ListTagsResponse} [response] ListTagsResponse
                         */
    
                        /**
                         * Calls ListTags.
                         * @function listTags
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListTagsRequest} request ListTagsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ListTagsCallback} callback Node-style callback called with the error, if any, and ListTagsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.listTags = function listTags(request, callback) {
                            return this.rpcCall(listTags, $root.google.cloud.irm.v1alpha2.ListTagsRequest, $root.google.cloud.irm.v1alpha2.ListTagsResponse, request, callback);
                        }, "name", { value: "ListTags" });
    
                        /**
                         * Calls ListTags.
                         * @function listTags
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListTagsRequest} request ListTagsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.ListTagsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createSignal}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateSignalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Signal} [response] Signal
                         */
    
                        /**
                         * Calls CreateSignal.
                         * @function createSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateSignalRequest} request CreateSignalRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateSignalCallback} callback Node-style callback called with the error, if any, and Signal
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createSignal = function createSignal(request, callback) {
                            return this.rpcCall(createSignal, $root.google.cloud.irm.v1alpha2.CreateSignalRequest, $root.google.cloud.irm.v1alpha2.Signal, request, callback);
                        }, "name", { value: "CreateSignal" });
    
                        /**
                         * Calls CreateSignal.
                         * @function createSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateSignalRequest} request CreateSignalRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Signal>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#searchSignals}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef SearchSignalsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.SearchSignalsResponse} [response] SearchSignalsResponse
                         */
    
                        /**
                         * Calls SearchSignals.
                         * @function searchSignals
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsRequest} request SearchSignalsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.SearchSignalsCallback} callback Node-style callback called with the error, if any, and SearchSignalsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.searchSignals = function searchSignals(request, callback) {
                            return this.rpcCall(searchSignals, $root.google.cloud.irm.v1alpha2.SearchSignalsRequest, $root.google.cloud.irm.v1alpha2.SearchSignalsResponse, request, callback);
                        }, "name", { value: "SearchSignals" });
    
                        /**
                         * Calls SearchSignals.
                         * @function searchSignals
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsRequest} request SearchSignalsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.SearchSignalsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#lookupSignal}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef LookupSignalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Signal} [response] Signal
                         */
    
                        /**
                         * Calls LookupSignal.
                         * @function lookupSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ILookupSignalRequest} request LookupSignalRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.LookupSignalCallback} callback Node-style callback called with the error, if any, and Signal
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.lookupSignal = function lookupSignal(request, callback) {
                            return this.rpcCall(lookupSignal, $root.google.cloud.irm.v1alpha2.LookupSignalRequest, $root.google.cloud.irm.v1alpha2.Signal, request, callback);
                        }, "name", { value: "LookupSignal" });
    
                        /**
                         * Calls LookupSignal.
                         * @function lookupSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ILookupSignalRequest} request LookupSignalRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Signal>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#getSignal}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef GetSignalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Signal} [response] Signal
                         */
    
                        /**
                         * Calls GetSignal.
                         * @function getSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IGetSignalRequest} request GetSignalRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.GetSignalCallback} callback Node-style callback called with the error, if any, and Signal
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.getSignal = function getSignal(request, callback) {
                            return this.rpcCall(getSignal, $root.google.cloud.irm.v1alpha2.GetSignalRequest, $root.google.cloud.irm.v1alpha2.Signal, request, callback);
                        }, "name", { value: "GetSignal" });
    
                        /**
                         * Calls GetSignal.
                         * @function getSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IGetSignalRequest} request GetSignalRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Signal>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#updateSignal}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef UpdateSignalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Signal} [response] Signal
                         */
    
                        /**
                         * Calls UpdateSignal.
                         * @function updateSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateSignalRequest} request UpdateSignalRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.UpdateSignalCallback} callback Node-style callback called with the error, if any, and Signal
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.updateSignal = function updateSignal(request, callback) {
                            return this.rpcCall(updateSignal, $root.google.cloud.irm.v1alpha2.UpdateSignalRequest, $root.google.cloud.irm.v1alpha2.Signal, request, callback);
                        }, "name", { value: "UpdateSignal" });
    
                        /**
                         * Calls UpdateSignal.
                         * @function updateSignal
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateSignalRequest} request UpdateSignalRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Signal>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#escalateIncident}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef EscalateIncidentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.EscalateIncidentResponse} [response] EscalateIncidentResponse
                         */
    
                        /**
                         * Calls EscalateIncident.
                         * @function escalateIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentRequest} request EscalateIncidentRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.EscalateIncidentCallback} callback Node-style callback called with the error, if any, and EscalateIncidentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.escalateIncident = function escalateIncident(request, callback) {
                            return this.rpcCall(escalateIncident, $root.google.cloud.irm.v1alpha2.EscalateIncidentRequest, $root.google.cloud.irm.v1alpha2.EscalateIncidentResponse, request, callback);
                        }, "name", { value: "EscalateIncident" });
    
                        /**
                         * Calls EscalateIncident.
                         * @function escalateIncident
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentRequest} request EscalateIncidentRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.EscalateIncidentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createArtifact}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateArtifactCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Artifact} [response] Artifact
                         */
    
                        /**
                         * Calls CreateArtifact.
                         * @function createArtifact
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateArtifactRequest} request CreateArtifactRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateArtifactCallback} callback Node-style callback called with the error, if any, and Artifact
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createArtifact = function createArtifact(request, callback) {
                            return this.rpcCall(createArtifact, $root.google.cloud.irm.v1alpha2.CreateArtifactRequest, $root.google.cloud.irm.v1alpha2.Artifact, request, callback);
                        }, "name", { value: "CreateArtifact" });
    
                        /**
                         * Calls CreateArtifact.
                         * @function createArtifact
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateArtifactRequest} request CreateArtifactRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Artifact>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#listArtifacts}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ListArtifactsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.ListArtifactsResponse} [response] ListArtifactsResponse
                         */
    
                        /**
                         * Calls ListArtifacts.
                         * @function listArtifacts
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsRequest} request ListArtifactsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ListArtifactsCallback} callback Node-style callback called with the error, if any, and ListArtifactsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.listArtifacts = function listArtifacts(request, callback) {
                            return this.rpcCall(listArtifacts, $root.google.cloud.irm.v1alpha2.ListArtifactsRequest, $root.google.cloud.irm.v1alpha2.ListArtifactsResponse, request, callback);
                        }, "name", { value: "ListArtifacts" });
    
                        /**
                         * Calls ListArtifacts.
                         * @function listArtifacts
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsRequest} request ListArtifactsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.ListArtifactsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#updateArtifact}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef UpdateArtifactCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Artifact} [response] Artifact
                         */
    
                        /**
                         * Calls UpdateArtifact.
                         * @function updateArtifact
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateArtifactRequest} request UpdateArtifactRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.UpdateArtifactCallback} callback Node-style callback called with the error, if any, and Artifact
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.updateArtifact = function updateArtifact(request, callback) {
                            return this.rpcCall(updateArtifact, $root.google.cloud.irm.v1alpha2.UpdateArtifactRequest, $root.google.cloud.irm.v1alpha2.Artifact, request, callback);
                        }, "name", { value: "UpdateArtifact" });
    
                        /**
                         * Calls UpdateArtifact.
                         * @function updateArtifact
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateArtifactRequest} request UpdateArtifactRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Artifact>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#deleteArtifact}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef DeleteArtifactCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteArtifact.
                         * @function deleteArtifact
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteArtifactRequest} request DeleteArtifactRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.DeleteArtifactCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.deleteArtifact = function deleteArtifact(request, callback) {
                            return this.rpcCall(deleteArtifact, $root.google.cloud.irm.v1alpha2.DeleteArtifactRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteArtifact" });
    
                        /**
                         * Calls DeleteArtifact.
                         * @function deleteArtifact
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteArtifactRequest} request DeleteArtifactRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#sendShiftHandoff}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef SendShiftHandoffCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.SendShiftHandoffResponse} [response] SendShiftHandoffResponse
                         */
    
                        /**
                         * Calls SendShiftHandoff.
                         * @function sendShiftHandoff
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffRequest} request SendShiftHandoffRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.SendShiftHandoffCallback} callback Node-style callback called with the error, if any, and SendShiftHandoffResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.sendShiftHandoff = function sendShiftHandoff(request, callback) {
                            return this.rpcCall(sendShiftHandoff, $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest, $root.google.cloud.irm.v1alpha2.SendShiftHandoffResponse, request, callback);
                        }, "name", { value: "SendShiftHandoff" });
    
                        /**
                         * Calls SendShiftHandoff.
                         * @function sendShiftHandoff
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffRequest} request SendShiftHandoffRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.SendShiftHandoffResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createSubscription}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateSubscriptionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Subscription} [response] Subscription
                         */
    
                        /**
                         * Calls CreateSubscription.
                         * @function createSubscription
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateSubscriptionRequest} request CreateSubscriptionRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateSubscriptionCallback} callback Node-style callback called with the error, if any, and Subscription
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createSubscription = function createSubscription(request, callback) {
                            return this.rpcCall(createSubscription, $root.google.cloud.irm.v1alpha2.CreateSubscriptionRequest, $root.google.cloud.irm.v1alpha2.Subscription, request, callback);
                        }, "name", { value: "CreateSubscription" });
    
                        /**
                         * Calls CreateSubscription.
                         * @function createSubscription
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateSubscriptionRequest} request CreateSubscriptionRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Subscription>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#updateSubscription}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef UpdateSubscriptionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.Subscription} [response] Subscription
                         */
    
                        /**
                         * Calls UpdateSubscription.
                         * @function updateSubscription
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateSubscriptionRequest} request UpdateSubscriptionRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.UpdateSubscriptionCallback} callback Node-style callback called with the error, if any, and Subscription
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.updateSubscription = function updateSubscription(request, callback) {
                            return this.rpcCall(updateSubscription, $root.google.cloud.irm.v1alpha2.UpdateSubscriptionRequest, $root.google.cloud.irm.v1alpha2.Subscription, request, callback);
                        }, "name", { value: "UpdateSubscription" });
    
                        /**
                         * Calls UpdateSubscription.
                         * @function updateSubscription
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IUpdateSubscriptionRequest} request UpdateSubscriptionRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.Subscription>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#listSubscriptions}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ListSubscriptionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.ListSubscriptionsResponse} [response] ListSubscriptionsResponse
                         */
    
                        /**
                         * Calls ListSubscriptions.
                         * @function listSubscriptions
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsRequest} request ListSubscriptionsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ListSubscriptionsCallback} callback Node-style callback called with the error, if any, and ListSubscriptionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.listSubscriptions = function listSubscriptions(request, callback) {
                            return this.rpcCall(listSubscriptions, $root.google.cloud.irm.v1alpha2.ListSubscriptionsRequest, $root.google.cloud.irm.v1alpha2.ListSubscriptionsResponse, request, callback);
                        }, "name", { value: "ListSubscriptions" });
    
                        /**
                         * Calls ListSubscriptions.
                         * @function listSubscriptions
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsRequest} request ListSubscriptionsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.ListSubscriptionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#deleteSubscription}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef DeleteSubscriptionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteSubscription.
                         * @function deleteSubscription
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteSubscriptionRequest} request DeleteSubscriptionRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.DeleteSubscriptionCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.deleteSubscription = function deleteSubscription(request, callback) {
                            return this.rpcCall(deleteSubscription, $root.google.cloud.irm.v1alpha2.DeleteSubscriptionRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteSubscription" });
    
                        /**
                         * Calls DeleteSubscription.
                         * @function deleteSubscription
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteSubscriptionRequest} request DeleteSubscriptionRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#createIncidentRoleAssignment}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CreateIncidentRoleAssignmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.IncidentRoleAssignment} [response] IncidentRoleAssignment
                         */
    
                        /**
                         * Calls CreateIncidentRoleAssignment.
                         * @function createIncidentRoleAssignment
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRoleAssignmentRequest} request CreateIncidentRoleAssignmentRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CreateIncidentRoleAssignmentCallback} callback Node-style callback called with the error, if any, and IncidentRoleAssignment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.createIncidentRoleAssignment = function createIncidentRoleAssignment(request, callback) {
                            return this.rpcCall(createIncidentRoleAssignment, $root.google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest, $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment, request, callback);
                        }, "name", { value: "CreateIncidentRoleAssignment" });
    
                        /**
                         * Calls CreateIncidentRoleAssignment.
                         * @function createIncidentRoleAssignment
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRoleAssignmentRequest} request CreateIncidentRoleAssignmentRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.IncidentRoleAssignment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#deleteIncidentRoleAssignment}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef DeleteIncidentRoleAssignmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteIncidentRoleAssignment.
                         * @function deleteIncidentRoleAssignment
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteIncidentRoleAssignmentRequest} request DeleteIncidentRoleAssignmentRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.DeleteIncidentRoleAssignmentCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.deleteIncidentRoleAssignment = function deleteIncidentRoleAssignment(request, callback) {
                            return this.rpcCall(deleteIncidentRoleAssignment, $root.google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteIncidentRoleAssignment" });
    
                        /**
                         * Calls DeleteIncidentRoleAssignment.
                         * @function deleteIncidentRoleAssignment
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IDeleteIncidentRoleAssignmentRequest} request DeleteIncidentRoleAssignmentRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#listIncidentRoleAssignments}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ListIncidentRoleAssignmentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse} [response] ListIncidentRoleAssignmentsResponse
                         */
    
                        /**
                         * Calls ListIncidentRoleAssignments.
                         * @function listIncidentRoleAssignments
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsRequest} request ListIncidentRoleAssignmentsRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ListIncidentRoleAssignmentsCallback} callback Node-style callback called with the error, if any, and ListIncidentRoleAssignmentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.listIncidentRoleAssignments = function listIncidentRoleAssignments(request, callback) {
                            return this.rpcCall(listIncidentRoleAssignments, $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest, $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse, request, callback);
                        }, "name", { value: "ListIncidentRoleAssignments" });
    
                        /**
                         * Calls ListIncidentRoleAssignments.
                         * @function listIncidentRoleAssignments
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsRequest} request ListIncidentRoleAssignmentsRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#requestIncidentRoleHandover}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef RequestIncidentRoleHandoverCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.IncidentRoleAssignment} [response] IncidentRoleAssignment
                         */
    
                        /**
                         * Calls RequestIncidentRoleHandover.
                         * @function requestIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IRequestIncidentRoleHandoverRequest} request RequestIncidentRoleHandoverRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.RequestIncidentRoleHandoverCallback} callback Node-style callback called with the error, if any, and IncidentRoleAssignment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.requestIncidentRoleHandover = function requestIncidentRoleHandover(request, callback) {
                            return this.rpcCall(requestIncidentRoleHandover, $root.google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest, $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment, request, callback);
                        }, "name", { value: "RequestIncidentRoleHandover" });
    
                        /**
                         * Calls RequestIncidentRoleHandover.
                         * @function requestIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IRequestIncidentRoleHandoverRequest} request RequestIncidentRoleHandoverRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.IncidentRoleAssignment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#confirmIncidentRoleHandover}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ConfirmIncidentRoleHandoverCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.IncidentRoleAssignment} [response] IncidentRoleAssignment
                         */
    
                        /**
                         * Calls ConfirmIncidentRoleHandover.
                         * @function confirmIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IConfirmIncidentRoleHandoverRequest} request ConfirmIncidentRoleHandoverRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ConfirmIncidentRoleHandoverCallback} callback Node-style callback called with the error, if any, and IncidentRoleAssignment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.confirmIncidentRoleHandover = function confirmIncidentRoleHandover(request, callback) {
                            return this.rpcCall(confirmIncidentRoleHandover, $root.google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest, $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment, request, callback);
                        }, "name", { value: "ConfirmIncidentRoleHandover" });
    
                        /**
                         * Calls ConfirmIncidentRoleHandover.
                         * @function confirmIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IConfirmIncidentRoleHandoverRequest} request ConfirmIncidentRoleHandoverRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.IncidentRoleAssignment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#forceIncidentRoleHandover}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef ForceIncidentRoleHandoverCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.IncidentRoleAssignment} [response] IncidentRoleAssignment
                         */
    
                        /**
                         * Calls ForceIncidentRoleHandover.
                         * @function forceIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IForceIncidentRoleHandoverRequest} request ForceIncidentRoleHandoverRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.ForceIncidentRoleHandoverCallback} callback Node-style callback called with the error, if any, and IncidentRoleAssignment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.forceIncidentRoleHandover = function forceIncidentRoleHandover(request, callback) {
                            return this.rpcCall(forceIncidentRoleHandover, $root.google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest, $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment, request, callback);
                        }, "name", { value: "ForceIncidentRoleHandover" });
    
                        /**
                         * Calls ForceIncidentRoleHandover.
                         * @function forceIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.IForceIncidentRoleHandoverRequest} request ForceIncidentRoleHandoverRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.IncidentRoleAssignment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.irm.v1alpha2.IncidentService#cancelIncidentRoleHandover}.
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @typedef CancelIncidentRoleHandoverCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.irm.v1alpha2.IncidentRoleAssignment} [response] IncidentRoleAssignment
                         */
    
                        /**
                         * Calls CancelIncidentRoleHandover.
                         * @function cancelIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICancelIncidentRoleHandoverRequest} request CancelIncidentRoleHandoverRequest message or plain object
                         * @param {google.cloud.irm.v1alpha2.IncidentService.CancelIncidentRoleHandoverCallback} callback Node-style callback called with the error, if any, and IncidentRoleAssignment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(IncidentService.prototype.cancelIncidentRoleHandover = function cancelIncidentRoleHandover(request, callback) {
                            return this.rpcCall(cancelIncidentRoleHandover, $root.google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest, $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment, request, callback);
                        }, "name", { value: "CancelIncidentRoleHandover" });
    
                        /**
                         * Calls CancelIncidentRoleHandover.
                         * @function cancelIncidentRoleHandover
                         * @memberof google.cloud.irm.v1alpha2.IncidentService
                         * @instance
                         * @param {google.cloud.irm.v1alpha2.ICancelIncidentRoleHandoverRequest} request CancelIncidentRoleHandoverRequest message or plain object
                         * @returns {Promise<google.cloud.irm.v1alpha2.IncidentRoleAssignment>} Promise
                         * @variation 2
                         */
    
                        return IncidentService;
                    })();
    
                    v1alpha2.CreateIncidentRequest = (function() {
    
                        /**
                         * Properties of a CreateIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateIncidentRequest
                         * @property {google.cloud.irm.v1alpha2.IIncident|null} [incident] CreateIncidentRequest incident
                         * @property {string|null} [parent] CreateIncidentRequest parent
                         */
    
                        /**
                         * Constructs a new CreateIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateIncidentRequest.
                         * @implements ICreateIncidentRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRequest=} [properties] Properties to set
                         */
                        function CreateIncidentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateIncidentRequest incident.
                         * @member {google.cloud.irm.v1alpha2.IIncident|null|undefined} incident
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @instance
                         */
                        CreateIncidentRequest.prototype.incident = null;
    
                        /**
                         * CreateIncidentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @instance
                         */
                        CreateIncidentRequest.prototype.parent = "";
    
                        /**
                         * Creates a new CreateIncidentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRequest} CreateIncidentRequest instance
                         */
                        CreateIncidentRequest.create = function create(properties) {
                            return new CreateIncidentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateIncidentRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateIncidentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRequest} message CreateIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateIncidentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                $root.google.cloud.irm.v1alpha2.Incident.encode(message.incident, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateIncidentRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateIncidentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRequest} message CreateIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateIncidentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateIncidentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRequest} CreateIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateIncidentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateIncidentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.incident = $root.google.cloud.irm.v1alpha2.Incident.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.parent = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateIncidentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRequest} CreateIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateIncidentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateIncidentRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateIncidentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.incident != null && message.hasOwnProperty("incident")) {
                                var error = $root.google.cloud.irm.v1alpha2.Incident.verify(message.incident);
                                if (error)
                                    return "incident." + error;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateIncidentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRequest} CreateIncidentRequest
                         */
                        CreateIncidentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateIncidentRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateIncidentRequest();
                            if (object.incident != null) {
                                if (typeof object.incident !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateIncidentRequest.incident: object expected");
                                message.incident = $root.google.cloud.irm.v1alpha2.Incident.fromObject(object.incident);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateIncidentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateIncidentRequest} message CreateIncidentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateIncidentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.incident = null;
                                object.parent = "";
                            }
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                object.incident = $root.google.cloud.irm.v1alpha2.Incident.toObject(message.incident, options);
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this CreateIncidentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateIncidentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateIncidentRequest;
                    })();
    
                    v1alpha2.GetIncidentRequest = (function() {
    
                        /**
                         * Properties of a GetIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IGetIncidentRequest
                         * @property {string|null} [name] GetIncidentRequest name
                         */
    
                        /**
                         * Constructs a new GetIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a GetIncidentRequest.
                         * @implements IGetIncidentRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IGetIncidentRequest=} [properties] Properties to set
                         */
                        function GetIncidentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetIncidentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @instance
                         */
                        GetIncidentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetIncidentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IGetIncidentRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.GetIncidentRequest} GetIncidentRequest instance
                         */
                        GetIncidentRequest.create = function create(properties) {
                            return new GetIncidentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetIncidentRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.GetIncidentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IGetIncidentRequest} message GetIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetIncidentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetIncidentRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.GetIncidentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IGetIncidentRequest} message GetIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetIncidentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetIncidentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.GetIncidentRequest} GetIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetIncidentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.GetIncidentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetIncidentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.GetIncidentRequest} GetIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetIncidentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetIncidentRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetIncidentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetIncidentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.GetIncidentRequest} GetIncidentRequest
                         */
                        GetIncidentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.GetIncidentRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.GetIncidentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetIncidentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.GetIncidentRequest} message GetIncidentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetIncidentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetIncidentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.GetIncidentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetIncidentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetIncidentRequest;
                    })();
    
                    v1alpha2.UpdateIncidentRequest = (function() {
    
                        /**
                         * Properties of an UpdateIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IUpdateIncidentRequest
                         * @property {google.cloud.irm.v1alpha2.IIncident|null} [incident] UpdateIncidentRequest incident
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateIncidentRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an UpdateIncidentRequest.
                         * @implements IUpdateIncidentRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IUpdateIncidentRequest=} [properties] Properties to set
                         */
                        function UpdateIncidentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateIncidentRequest incident.
                         * @member {google.cloud.irm.v1alpha2.IIncident|null|undefined} incident
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @instance
                         */
                        UpdateIncidentRequest.prototype.incident = null;
    
                        /**
                         * UpdateIncidentRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @instance
                         */
                        UpdateIncidentRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateIncidentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateIncidentRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.UpdateIncidentRequest} UpdateIncidentRequest instance
                         */
                        UpdateIncidentRequest.create = function create(properties) {
                            return new UpdateIncidentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateIncidentRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateIncidentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateIncidentRequest} message UpdateIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateIncidentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                $root.google.cloud.irm.v1alpha2.Incident.encode(message.incident, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateIncidentRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateIncidentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateIncidentRequest} message UpdateIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateIncidentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateIncidentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.UpdateIncidentRequest} UpdateIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateIncidentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.UpdateIncidentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.incident = $root.google.cloud.irm.v1alpha2.Incident.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateIncidentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.UpdateIncidentRequest} UpdateIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateIncidentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateIncidentRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateIncidentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.incident != null && message.hasOwnProperty("incident")) {
                                var error = $root.google.cloud.irm.v1alpha2.Incident.verify(message.incident);
                                if (error)
                                    return "incident." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateIncidentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.UpdateIncidentRequest} UpdateIncidentRequest
                         */
                        UpdateIncidentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.UpdateIncidentRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.UpdateIncidentRequest();
                            if (object.incident != null) {
                                if (typeof object.incident !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateIncidentRequest.incident: object expected");
                                message.incident = $root.google.cloud.irm.v1alpha2.Incident.fromObject(object.incident);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateIncidentRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateIncidentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.UpdateIncidentRequest} message UpdateIncidentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateIncidentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.incident = null;
                                object.updateMask = null;
                            }
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                object.incident = $root.google.cloud.irm.v1alpha2.Incident.toObject(message.incident, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateIncidentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.UpdateIncidentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateIncidentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateIncidentRequest;
                    })();
    
                    v1alpha2.SearchSimilarIncidentsRequest = (function() {
    
                        /**
                         * Properties of a SearchSimilarIncidentsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISearchSimilarIncidentsRequest
                         * @property {string|null} [name] SearchSimilarIncidentsRequest name
                         * @property {number|null} [pageSize] SearchSimilarIncidentsRequest pageSize
                         * @property {string|null} [pageToken] SearchSimilarIncidentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new SearchSimilarIncidentsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SearchSimilarIncidentsRequest.
                         * @implements ISearchSimilarIncidentsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsRequest=} [properties] Properties to set
                         */
                        function SearchSimilarIncidentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchSimilarIncidentsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @instance
                         */
                        SearchSimilarIncidentsRequest.prototype.name = "";
    
                        /**
                         * SearchSimilarIncidentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @instance
                         */
                        SearchSimilarIncidentsRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchSimilarIncidentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @instance
                         */
                        SearchSimilarIncidentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new SearchSimilarIncidentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest} SearchSimilarIncidentsRequest instance
                         */
                        SearchSimilarIncidentsRequest.create = function create(properties) {
                            return new SearchSimilarIncidentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchSimilarIncidentsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsRequest} message SearchSimilarIncidentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSimilarIncidentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchSimilarIncidentsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsRequest} message SearchSimilarIncidentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSimilarIncidentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchSimilarIncidentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest} SearchSimilarIncidentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSimilarIncidentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchSimilarIncidentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest} SearchSimilarIncidentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSimilarIncidentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchSimilarIncidentsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchSimilarIncidentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchSimilarIncidentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest} SearchSimilarIncidentsRequest
                         */
                        SearchSimilarIncidentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchSimilarIncidentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest} message SearchSimilarIncidentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchSimilarIncidentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this SearchSimilarIncidentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchSimilarIncidentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchSimilarIncidentsRequest;
                    })();
    
                    v1alpha2.SearchSimilarIncidentsResponse = (function() {
    
                        /**
                         * Properties of a SearchSimilarIncidentsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISearchSimilarIncidentsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.IResult>|null} [results] SearchSimilarIncidentsResponse results
                         * @property {string|null} [nextPageToken] SearchSimilarIncidentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new SearchSimilarIncidentsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SearchSimilarIncidentsResponse.
                         * @implements ISearchSimilarIncidentsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsResponse=} [properties] Properties to set
                         */
                        function SearchSimilarIncidentsResponse(properties) {
                            this.results = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchSimilarIncidentsResponse results.
                         * @member {Array.<google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.IResult>} results
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @instance
                         */
                        SearchSimilarIncidentsResponse.prototype.results = $util.emptyArray;
    
                        /**
                         * SearchSimilarIncidentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @instance
                         */
                        SearchSimilarIncidentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new SearchSimilarIncidentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse} SearchSimilarIncidentsResponse instance
                         */
                        SearchSimilarIncidentsResponse.create = function create(properties) {
                            return new SearchSimilarIncidentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchSimilarIncidentsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsResponse} message SearchSimilarIncidentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSimilarIncidentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchSimilarIncidentsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSimilarIncidentsResponse} message SearchSimilarIncidentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSimilarIncidentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchSimilarIncidentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse} SearchSimilarIncidentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSimilarIncidentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.results && message.results.length))
                                        message.results = [];
                                    message.results.push($root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchSimilarIncidentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse} SearchSimilarIncidentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSimilarIncidentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchSimilarIncidentsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchSimilarIncidentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchSimilarIncidentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse} SearchSimilarIncidentsResponse
                         */
                        SearchSimilarIncidentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.results: object expected");
                                    message.results[i] = $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.fromObject(object.results[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchSimilarIncidentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse} message SearchSimilarIncidentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchSimilarIncidentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.results = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.toObject(message.results[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this SearchSimilarIncidentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchSimilarIncidentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        SearchSimilarIncidentsResponse.Result = (function() {
    
                            /**
                             * Properties of a Result.
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                             * @interface IResult
                             * @property {google.cloud.irm.v1alpha2.IIncident|null} [incident] Result incident
                             */
    
                            /**
                             * Constructs a new Result.
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse
                             * @classdesc Represents a Result.
                             * @implements IResult
                             * @constructor
                             * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.IResult=} [properties] Properties to set
                             */
                            function Result(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Result incident.
                             * @member {google.cloud.irm.v1alpha2.IIncident|null|undefined} incident
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @instance
                             */
                            Result.prototype.incident = null;
    
                            /**
                             * Creates a new Result instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.IResult=} [properties] Properties to set
                             * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result} Result instance
                             */
                            Result.create = function create(properties) {
                                return new Result(properties);
                            };
    
                            /**
                             * Encodes the specified Result message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.IResult} message Result message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Result.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.incident != null && message.hasOwnProperty("incident"))
                                    $root.google.cloud.irm.v1alpha2.Incident.encode(message.incident, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Result message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.IResult} message Result message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Result.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Result message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result} Result
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Result.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.incident = $root.google.cloud.irm.v1alpha2.Incident.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Result message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result} Result
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Result.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Result message.
                             * @function verify
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Result.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.incident != null && message.hasOwnProperty("incident")) {
                                    var error = $root.google.cloud.irm.v1alpha2.Incident.verify(message.incident);
                                    if (error)
                                        return "incident." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Result message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result} Result
                             */
                            Result.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result)
                                    return object;
                                var message = new $root.google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result();
                                if (object.incident != null) {
                                    if (typeof object.incident !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result.incident: object expected");
                                    message.incident = $root.google.cloud.irm.v1alpha2.Incident.fromObject(object.incident);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Result message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result} message Result
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Result.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.incident = null;
                                if (message.incident != null && message.hasOwnProperty("incident"))
                                    object.incident = $root.google.cloud.irm.v1alpha2.Incident.toObject(message.incident, options);
                                return object;
                            };
    
                            /**
                             * Converts this Result to JSON.
                             * @function toJSON
                             * @memberof google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Result.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return Result;
                        })();
    
                        return SearchSimilarIncidentsResponse;
                    })();
    
                    v1alpha2.CreateAnnotationRequest = (function() {
    
                        /**
                         * Properties of a CreateAnnotationRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateAnnotationRequest
                         * @property {string|null} [parent] CreateAnnotationRequest parent
                         * @property {google.cloud.irm.v1alpha2.IAnnotation|null} [annotation] CreateAnnotationRequest annotation
                         */
    
                        /**
                         * Constructs a new CreateAnnotationRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateAnnotationRequest.
                         * @implements ICreateAnnotationRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateAnnotationRequest=} [properties] Properties to set
                         */
                        function CreateAnnotationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateAnnotationRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @instance
                         */
                        CreateAnnotationRequest.prototype.parent = "";
    
                        /**
                         * CreateAnnotationRequest annotation.
                         * @member {google.cloud.irm.v1alpha2.IAnnotation|null|undefined} annotation
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @instance
                         */
                        CreateAnnotationRequest.prototype.annotation = null;
    
                        /**
                         * Creates a new CreateAnnotationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateAnnotationRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateAnnotationRequest} CreateAnnotationRequest instance
                         */
                        CreateAnnotationRequest.create = function create(properties) {
                            return new CreateAnnotationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateAnnotationRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateAnnotationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateAnnotationRequest} message CreateAnnotationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAnnotationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.annotation != null && message.hasOwnProperty("annotation"))
                                $root.google.cloud.irm.v1alpha2.Annotation.encode(message.annotation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateAnnotationRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateAnnotationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateAnnotationRequest} message CreateAnnotationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAnnotationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateAnnotationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateAnnotationRequest} CreateAnnotationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAnnotationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateAnnotationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.annotation = $root.google.cloud.irm.v1alpha2.Annotation.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateAnnotationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateAnnotationRequest} CreateAnnotationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAnnotationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateAnnotationRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateAnnotationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.annotation != null && message.hasOwnProperty("annotation")) {
                                var error = $root.google.cloud.irm.v1alpha2.Annotation.verify(message.annotation);
                                if (error)
                                    return "annotation." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateAnnotationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateAnnotationRequest} CreateAnnotationRequest
                         */
                        CreateAnnotationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateAnnotationRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateAnnotationRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.annotation != null) {
                                if (typeof object.annotation !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateAnnotationRequest.annotation: object expected");
                                message.annotation = $root.google.cloud.irm.v1alpha2.Annotation.fromObject(object.annotation);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateAnnotationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateAnnotationRequest} message CreateAnnotationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateAnnotationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.annotation = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.annotation != null && message.hasOwnProperty("annotation"))
                                object.annotation = $root.google.cloud.irm.v1alpha2.Annotation.toObject(message.annotation, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateAnnotationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateAnnotationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateAnnotationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateAnnotationRequest;
                    })();
    
                    v1alpha2.ListAnnotationsRequest = (function() {
    
                        /**
                         * Properties of a ListAnnotationsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListAnnotationsRequest
                         * @property {string|null} [parent] ListAnnotationsRequest parent
                         * @property {number|null} [pageSize] ListAnnotationsRequest pageSize
                         * @property {string|null} [pageToken] ListAnnotationsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListAnnotationsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListAnnotationsRequest.
                         * @implements IListAnnotationsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsRequest=} [properties] Properties to set
                         */
                        function ListAnnotationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAnnotationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @instance
                         */
                        ListAnnotationsRequest.prototype.parent = "";
    
                        /**
                         * ListAnnotationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @instance
                         */
                        ListAnnotationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListAnnotationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @instance
                         */
                        ListAnnotationsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListAnnotationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsRequest} ListAnnotationsRequest instance
                         */
                        ListAnnotationsRequest.create = function create(properties) {
                            return new ListAnnotationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListAnnotationsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListAnnotationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsRequest} message ListAnnotationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAnnotationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAnnotationsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListAnnotationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsRequest} message ListAnnotationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAnnotationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAnnotationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsRequest} ListAnnotationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAnnotationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListAnnotationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAnnotationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsRequest} ListAnnotationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAnnotationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAnnotationsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAnnotationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAnnotationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsRequest} ListAnnotationsRequest
                         */
                        ListAnnotationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListAnnotationsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListAnnotationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAnnotationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListAnnotationsRequest} message ListAnnotationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAnnotationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAnnotationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAnnotationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListAnnotationsRequest;
                    })();
    
                    v1alpha2.ListAnnotationsResponse = (function() {
    
                        /**
                         * Properties of a ListAnnotationsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListAnnotationsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.IAnnotation>|null} [annotations] ListAnnotationsResponse annotations
                         * @property {string|null} [nextPageToken] ListAnnotationsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListAnnotationsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListAnnotationsResponse.
                         * @implements IListAnnotationsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsResponse=} [properties] Properties to set
                         */
                        function ListAnnotationsResponse(properties) {
                            this.annotations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAnnotationsResponse annotations.
                         * @member {Array.<google.cloud.irm.v1alpha2.IAnnotation>} annotations
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @instance
                         */
                        ListAnnotationsResponse.prototype.annotations = $util.emptyArray;
    
                        /**
                         * ListAnnotationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @instance
                         */
                        ListAnnotationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListAnnotationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsResponse} ListAnnotationsResponse instance
                         */
                        ListAnnotationsResponse.create = function create(properties) {
                            return new ListAnnotationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListAnnotationsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListAnnotationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsResponse} message ListAnnotationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAnnotationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.annotations != null && message.annotations.length)
                                for (var i = 0; i < message.annotations.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Annotation.encode(message.annotations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAnnotationsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListAnnotationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListAnnotationsResponse} message ListAnnotationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAnnotationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAnnotationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsResponse} ListAnnotationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAnnotationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListAnnotationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.annotations && message.annotations.length))
                                        message.annotations = [];
                                    message.annotations.push($root.google.cloud.irm.v1alpha2.Annotation.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAnnotationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsResponse} ListAnnotationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAnnotationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAnnotationsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAnnotationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!Array.isArray(message.annotations))
                                    return "annotations: array expected";
                                for (var i = 0; i < message.annotations.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Annotation.verify(message.annotations[i]);
                                    if (error)
                                        return "annotations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAnnotationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListAnnotationsResponse} ListAnnotationsResponse
                         */
                        ListAnnotationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListAnnotationsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListAnnotationsResponse();
                            if (object.annotations) {
                                if (!Array.isArray(object.annotations))
                                    throw TypeError(".google.cloud.irm.v1alpha2.ListAnnotationsResponse.annotations: array expected");
                                message.annotations = [];
                                for (var i = 0; i < object.annotations.length; ++i) {
                                    if (typeof object.annotations[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.ListAnnotationsResponse.annotations: object expected");
                                    message.annotations[i] = $root.google.cloud.irm.v1alpha2.Annotation.fromObject(object.annotations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAnnotationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListAnnotationsResponse} message ListAnnotationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAnnotationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.annotations = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.annotations && message.annotations.length) {
                                object.annotations = [];
                                for (var j = 0; j < message.annotations.length; ++j)
                                    object.annotations[j] = $root.google.cloud.irm.v1alpha2.Annotation.toObject(message.annotations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAnnotationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListAnnotationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAnnotationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListAnnotationsResponse;
                    })();
    
                    v1alpha2.CreateTagRequest = (function() {
    
                        /**
                         * Properties of a CreateTagRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateTagRequest
                         * @property {string|null} [parent] CreateTagRequest parent
                         * @property {google.cloud.irm.v1alpha2.ITag|null} [tag] CreateTagRequest tag
                         */
    
                        /**
                         * Constructs a new CreateTagRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateTagRequest.
                         * @implements ICreateTagRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateTagRequest=} [properties] Properties to set
                         */
                        function CreateTagRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTagRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @instance
                         */
                        CreateTagRequest.prototype.parent = "";
    
                        /**
                         * CreateTagRequest tag.
                         * @member {google.cloud.irm.v1alpha2.ITag|null|undefined} tag
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @instance
                         */
                        CreateTagRequest.prototype.tag = null;
    
                        /**
                         * Creates a new CreateTagRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateTagRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateTagRequest} CreateTagRequest instance
                         */
                        CreateTagRequest.create = function create(properties) {
                            return new CreateTagRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTagRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateTagRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateTagRequest} message CreateTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTagRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                $root.google.cloud.irm.v1alpha2.Tag.encode(message.tag, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTagRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateTagRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateTagRequest} message CreateTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTagRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTagRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateTagRequest} CreateTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTagRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateTagRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.tag = $root.google.cloud.irm.v1alpha2.Tag.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTagRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateTagRequest} CreateTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTagRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTagRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTagRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.tag != null && message.hasOwnProperty("tag")) {
                                var error = $root.google.cloud.irm.v1alpha2.Tag.verify(message.tag);
                                if (error)
                                    return "tag." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTagRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateTagRequest} CreateTagRequest
                         */
                        CreateTagRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateTagRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateTagRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.tag != null) {
                                if (typeof object.tag !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateTagRequest.tag: object expected");
                                message.tag = $root.google.cloud.irm.v1alpha2.Tag.fromObject(object.tag);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTagRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateTagRequest} message CreateTagRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTagRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.tag = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = $root.google.cloud.irm.v1alpha2.Tag.toObject(message.tag, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateTagRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateTagRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTagRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateTagRequest;
                    })();
    
                    v1alpha2.DeleteTagRequest = (function() {
    
                        /**
                         * Properties of a DeleteTagRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IDeleteTagRequest
                         * @property {string|null} [name] DeleteTagRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTagRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a DeleteTagRequest.
                         * @implements IDeleteTagRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IDeleteTagRequest=} [properties] Properties to set
                         */
                        function DeleteTagRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTagRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @instance
                         */
                        DeleteTagRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTagRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteTagRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.DeleteTagRequest} DeleteTagRequest instance
                         */
                        DeleteTagRequest.create = function create(properties) {
                            return new DeleteTagRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTagRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteTagRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteTagRequest} message DeleteTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTagRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTagRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteTagRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteTagRequest} message DeleteTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTagRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTagRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.DeleteTagRequest} DeleteTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTagRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.DeleteTagRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTagRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.DeleteTagRequest} DeleteTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTagRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTagRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTagRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTagRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.DeleteTagRequest} DeleteTagRequest
                         */
                        DeleteTagRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.DeleteTagRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.DeleteTagRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTagRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.DeleteTagRequest} message DeleteTagRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTagRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTagRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.DeleteTagRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTagRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteTagRequest;
                    })();
    
                    v1alpha2.ListTagsRequest = (function() {
    
                        /**
                         * Properties of a ListTagsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListTagsRequest
                         * @property {string|null} [parent] ListTagsRequest parent
                         * @property {number|null} [pageSize] ListTagsRequest pageSize
                         * @property {string|null} [pageToken] ListTagsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTagsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListTagsRequest.
                         * @implements IListTagsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListTagsRequest=} [properties] Properties to set
                         */
                        function ListTagsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTagsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.parent = "";
    
                        /**
                         * ListTagsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTagsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTagsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListTagsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListTagsRequest} ListTagsRequest instance
                         */
                        ListTagsRequest.create = function create(properties) {
                            return new ListTagsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTagsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListTagsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListTagsRequest} message ListTagsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTagsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListTagsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListTagsRequest} message ListTagsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTagsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListTagsRequest} ListTagsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListTagsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTagsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListTagsRequest} ListTagsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTagsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTagsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTagsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListTagsRequest} ListTagsRequest
                         */
                        ListTagsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListTagsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListTagsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTagsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListTagsRequest} message ListTagsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTagsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTagsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListTagsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTagsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListTagsRequest;
                    })();
    
                    v1alpha2.ListTagsResponse = (function() {
    
                        /**
                         * Properties of a ListTagsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListTagsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.ITag>|null} [tags] ListTagsResponse tags
                         * @property {string|null} [nextPageToken] ListTagsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTagsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListTagsResponse.
                         * @implements IListTagsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListTagsResponse=} [properties] Properties to set
                         */
                        function ListTagsResponse(properties) {
                            this.tags = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTagsResponse tags.
                         * @member {Array.<google.cloud.irm.v1alpha2.ITag>} tags
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @instance
                         */
                        ListTagsResponse.prototype.tags = $util.emptyArray;
    
                        /**
                         * ListTagsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @instance
                         */
                        ListTagsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTagsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListTagsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListTagsResponse} ListTagsResponse instance
                         */
                        ListTagsResponse.create = function create(properties) {
                            return new ListTagsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTagsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListTagsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListTagsResponse} message ListTagsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Tag.encode(message.tags[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTagsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListTagsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListTagsResponse} message ListTagsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTagsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListTagsResponse} ListTagsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListTagsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.tags && message.tags.length))
                                        message.tags = [];
                                    message.tags.push($root.google.cloud.irm.v1alpha2.Tag.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTagsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListTagsResponse} ListTagsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTagsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTagsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Tag.verify(message.tags[i]);
                                    if (error)
                                        return "tags." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTagsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListTagsResponse} ListTagsResponse
                         */
                        ListTagsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListTagsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListTagsResponse();
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.irm.v1alpha2.ListTagsResponse.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i) {
                                    if (typeof object.tags[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.ListTagsResponse.tags: object expected");
                                    message.tags[i] = $root.google.cloud.irm.v1alpha2.Tag.fromObject(object.tags[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTagsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListTagsResponse} message ListTagsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTagsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tags = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = $root.google.cloud.irm.v1alpha2.Tag.toObject(message.tags[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTagsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListTagsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTagsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListTagsResponse;
                    })();
    
                    v1alpha2.CreateSignalRequest = (function() {
    
                        /**
                         * Properties of a CreateSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateSignalRequest
                         * @property {string|null} [parent] CreateSignalRequest parent
                         * @property {google.cloud.irm.v1alpha2.ISignal|null} [signal] CreateSignalRequest signal
                         */
    
                        /**
                         * Constructs a new CreateSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateSignalRequest.
                         * @implements ICreateSignalRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateSignalRequest=} [properties] Properties to set
                         */
                        function CreateSignalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSignalRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @instance
                         */
                        CreateSignalRequest.prototype.parent = "";
    
                        /**
                         * CreateSignalRequest signal.
                         * @member {google.cloud.irm.v1alpha2.ISignal|null|undefined} signal
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @instance
                         */
                        CreateSignalRequest.prototype.signal = null;
    
                        /**
                         * Creates a new CreateSignalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateSignalRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateSignalRequest} CreateSignalRequest instance
                         */
                        CreateSignalRequest.create = function create(properties) {
                            return new CreateSignalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSignalRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateSignalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateSignalRequest} message CreateSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSignalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.signal != null && message.hasOwnProperty("signal"))
                                $root.google.cloud.irm.v1alpha2.Signal.encode(message.signal, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSignalRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateSignalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateSignalRequest} message CreateSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSignalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSignalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateSignalRequest} CreateSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSignalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateSignalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.signal = $root.google.cloud.irm.v1alpha2.Signal.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSignalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateSignalRequest} CreateSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSignalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSignalRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSignalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.signal != null && message.hasOwnProperty("signal")) {
                                var error = $root.google.cloud.irm.v1alpha2.Signal.verify(message.signal);
                                if (error)
                                    return "signal." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateSignalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateSignalRequest} CreateSignalRequest
                         */
                        CreateSignalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateSignalRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateSignalRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.signal != null) {
                                if (typeof object.signal !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateSignalRequest.signal: object expected");
                                message.signal = $root.google.cloud.irm.v1alpha2.Signal.fromObject(object.signal);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSignalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateSignalRequest} message CreateSignalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSignalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.signal = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.signal != null && message.hasOwnProperty("signal"))
                                object.signal = $root.google.cloud.irm.v1alpha2.Signal.toObject(message.signal, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateSignalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateSignalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSignalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateSignalRequest;
                    })();
    
                    v1alpha2.SearchSignalsRequest = (function() {
    
                        /**
                         * Properties of a SearchSignalsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISearchSignalsRequest
                         * @property {string|null} [parent] SearchSignalsRequest parent
                         * @property {string|null} [query] SearchSignalsRequest query
                         * @property {number|null} [pageSize] SearchSignalsRequest pageSize
                         * @property {string|null} [pageToken] SearchSignalsRequest pageToken
                         */
    
                        /**
                         * Constructs a new SearchSignalsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SearchSignalsRequest.
                         * @implements ISearchSignalsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsRequest=} [properties] Properties to set
                         */
                        function SearchSignalsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchSignalsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @instance
                         */
                        SearchSignalsRequest.prototype.parent = "";
    
                        /**
                         * SearchSignalsRequest query.
                         * @member {string} query
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @instance
                         */
                        SearchSignalsRequest.prototype.query = "";
    
                        /**
                         * SearchSignalsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @instance
                         */
                        SearchSignalsRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchSignalsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @instance
                         */
                        SearchSignalsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new SearchSignalsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsRequest} SearchSignalsRequest instance
                         */
                        SearchSignalsRequest.create = function create(properties) {
                            return new SearchSignalsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchSignalsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSignalsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsRequest} message SearchSignalsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSignalsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.query != null && message.hasOwnProperty("query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchSignalsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSignalsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsRequest} message SearchSignalsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSignalsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchSignalsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsRequest} SearchSignalsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSignalsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchSignalsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.query = reader.string();
                                    break;
                                case 3:
                                    message.pageSize = reader.int32();
                                    break;
                                case 4:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchSignalsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsRequest} SearchSignalsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSignalsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchSignalsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchSignalsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchSignalsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsRequest} SearchSignalsRequest
                         */
                        SearchSignalsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SearchSignalsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SearchSignalsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchSignalsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SearchSignalsRequest} message SearchSignalsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchSignalsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.query = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this SearchSignalsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchSignalsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchSignalsRequest;
                    })();
    
                    v1alpha2.SearchSignalsResponse = (function() {
    
                        /**
                         * Properties of a SearchSignalsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISearchSignalsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.ISignal>|null} [signals] SearchSignalsResponse signals
                         * @property {string|null} [nextPageToken] SearchSignalsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new SearchSignalsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SearchSignalsResponse.
                         * @implements ISearchSignalsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsResponse=} [properties] Properties to set
                         */
                        function SearchSignalsResponse(properties) {
                            this.signals = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchSignalsResponse signals.
                         * @member {Array.<google.cloud.irm.v1alpha2.ISignal>} signals
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @instance
                         */
                        SearchSignalsResponse.prototype.signals = $util.emptyArray;
    
                        /**
                         * SearchSignalsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @instance
                         */
                        SearchSignalsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new SearchSignalsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsResponse} SearchSignalsResponse instance
                         */
                        SearchSignalsResponse.create = function create(properties) {
                            return new SearchSignalsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchSignalsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSignalsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsResponse} message SearchSignalsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSignalsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.signals != null && message.signals.length)
                                for (var i = 0; i < message.signals.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Signal.encode(message.signals[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchSignalsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchSignalsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchSignalsResponse} message SearchSignalsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchSignalsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchSignalsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsResponse} SearchSignalsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSignalsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchSignalsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.signals && message.signals.length))
                                        message.signals = [];
                                    message.signals.push($root.google.cloud.irm.v1alpha2.Signal.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchSignalsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsResponse} SearchSignalsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchSignalsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchSignalsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchSignalsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.signals != null && message.hasOwnProperty("signals")) {
                                if (!Array.isArray(message.signals))
                                    return "signals: array expected";
                                for (var i = 0; i < message.signals.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Signal.verify(message.signals[i]);
                                    if (error)
                                        return "signals." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchSignalsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SearchSignalsResponse} SearchSignalsResponse
                         */
                        SearchSignalsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SearchSignalsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SearchSignalsResponse();
                            if (object.signals) {
                                if (!Array.isArray(object.signals))
                                    throw TypeError(".google.cloud.irm.v1alpha2.SearchSignalsResponse.signals: array expected");
                                message.signals = [];
                                for (var i = 0; i < object.signals.length; ++i) {
                                    if (typeof object.signals[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.SearchSignalsResponse.signals: object expected");
                                    message.signals[i] = $root.google.cloud.irm.v1alpha2.Signal.fromObject(object.signals[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchSignalsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SearchSignalsResponse} message SearchSignalsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchSignalsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.signals = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.signals && message.signals.length) {
                                object.signals = [];
                                for (var j = 0; j < message.signals.length; ++j)
                                    object.signals[j] = $root.google.cloud.irm.v1alpha2.Signal.toObject(message.signals[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this SearchSignalsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SearchSignalsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchSignalsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchSignalsResponse;
                    })();
    
                    v1alpha2.GetSignalRequest = (function() {
    
                        /**
                         * Properties of a GetSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IGetSignalRequest
                         * @property {string|null} [name] GetSignalRequest name
                         */
    
                        /**
                         * Constructs a new GetSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a GetSignalRequest.
                         * @implements IGetSignalRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IGetSignalRequest=} [properties] Properties to set
                         */
                        function GetSignalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSignalRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @instance
                         */
                        GetSignalRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSignalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IGetSignalRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.GetSignalRequest} GetSignalRequest instance
                         */
                        GetSignalRequest.create = function create(properties) {
                            return new GetSignalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSignalRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.GetSignalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IGetSignalRequest} message GetSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSignalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSignalRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.GetSignalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IGetSignalRequest} message GetSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSignalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSignalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.GetSignalRequest} GetSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSignalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.GetSignalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSignalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.GetSignalRequest} GetSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSignalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSignalRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSignalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSignalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.GetSignalRequest} GetSignalRequest
                         */
                        GetSignalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.GetSignalRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.GetSignalRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSignalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.GetSignalRequest} message GetSignalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSignalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSignalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.GetSignalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSignalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetSignalRequest;
                    })();
    
                    v1alpha2.LookupSignalRequest = (function() {
    
                        /**
                         * Properties of a LookupSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ILookupSignalRequest
                         * @property {string|null} [csccFinding] LookupSignalRequest csccFinding
                         * @property {string|null} [stackdriverNotificationId] LookupSignalRequest stackdriverNotificationId
                         */
    
                        /**
                         * Constructs a new LookupSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a LookupSignalRequest.
                         * @implements ILookupSignalRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ILookupSignalRequest=} [properties] Properties to set
                         */
                        function LookupSignalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LookupSignalRequest csccFinding.
                         * @member {string} csccFinding
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @instance
                         */
                        LookupSignalRequest.prototype.csccFinding = "";
    
                        /**
                         * LookupSignalRequest stackdriverNotificationId.
                         * @member {string} stackdriverNotificationId
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @instance
                         */
                        LookupSignalRequest.prototype.stackdriverNotificationId = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * LookupSignalRequest alternateId.
                         * @member {"csccFinding"|"stackdriverNotificationId"|undefined} alternateId
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @instance
                         */
                        Object.defineProperty(LookupSignalRequest.prototype, "alternateId", {
                            get: $util.oneOfGetter($oneOfFields = ["csccFinding", "stackdriverNotificationId"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new LookupSignalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ILookupSignalRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.LookupSignalRequest} LookupSignalRequest instance
                         */
                        LookupSignalRequest.create = function create(properties) {
                            return new LookupSignalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified LookupSignalRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.LookupSignalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ILookupSignalRequest} message LookupSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LookupSignalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.csccFinding != null && message.hasOwnProperty("csccFinding"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.csccFinding);
                            if (message.stackdriverNotificationId != null && message.hasOwnProperty("stackdriverNotificationId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.stackdriverNotificationId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LookupSignalRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.LookupSignalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ILookupSignalRequest} message LookupSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LookupSignalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LookupSignalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.LookupSignalRequest} LookupSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LookupSignalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.LookupSignalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2:
                                    message.csccFinding = reader.string();
                                    break;
                                case 3:
                                    message.stackdriverNotificationId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LookupSignalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.LookupSignalRequest} LookupSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LookupSignalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LookupSignalRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LookupSignalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.csccFinding != null && message.hasOwnProperty("csccFinding")) {
                                properties.alternateId = 1;
                                if (!$util.isString(message.csccFinding))
                                    return "csccFinding: string expected";
                            }
                            if (message.stackdriverNotificationId != null && message.hasOwnProperty("stackdriverNotificationId")) {
                                if (properties.alternateId === 1)
                                    return "alternateId: multiple values";
                                properties.alternateId = 1;
                                if (!$util.isString(message.stackdriverNotificationId))
                                    return "stackdriverNotificationId: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LookupSignalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.LookupSignalRequest} LookupSignalRequest
                         */
                        LookupSignalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.LookupSignalRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.LookupSignalRequest();
                            if (object.csccFinding != null)
                                message.csccFinding = String(object.csccFinding);
                            if (object.stackdriverNotificationId != null)
                                message.stackdriverNotificationId = String(object.stackdriverNotificationId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LookupSignalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.LookupSignalRequest} message LookupSignalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LookupSignalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.csccFinding != null && message.hasOwnProperty("csccFinding")) {
                                object.csccFinding = message.csccFinding;
                                if (options.oneofs)
                                    object.alternateId = "csccFinding";
                            }
                            if (message.stackdriverNotificationId != null && message.hasOwnProperty("stackdriverNotificationId")) {
                                object.stackdriverNotificationId = message.stackdriverNotificationId;
                                if (options.oneofs)
                                    object.alternateId = "stackdriverNotificationId";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LookupSignalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.LookupSignalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LookupSignalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return LookupSignalRequest;
                    })();
    
                    v1alpha2.UpdateSignalRequest = (function() {
    
                        /**
                         * Properties of an UpdateSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IUpdateSignalRequest
                         * @property {google.cloud.irm.v1alpha2.ISignal|null} [signal] UpdateSignalRequest signal
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateSignalRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateSignalRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an UpdateSignalRequest.
                         * @implements IUpdateSignalRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IUpdateSignalRequest=} [properties] Properties to set
                         */
                        function UpdateSignalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSignalRequest signal.
                         * @member {google.cloud.irm.v1alpha2.ISignal|null|undefined} signal
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @instance
                         */
                        UpdateSignalRequest.prototype.signal = null;
    
                        /**
                         * UpdateSignalRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @instance
                         */
                        UpdateSignalRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateSignalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateSignalRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.UpdateSignalRequest} UpdateSignalRequest instance
                         */
                        UpdateSignalRequest.create = function create(properties) {
                            return new UpdateSignalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSignalRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateSignalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateSignalRequest} message UpdateSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSignalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.signal != null && message.hasOwnProperty("signal"))
                                $root.google.cloud.irm.v1alpha2.Signal.encode(message.signal, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSignalRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateSignalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateSignalRequest} message UpdateSignalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSignalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSignalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.UpdateSignalRequest} UpdateSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSignalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.UpdateSignalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.signal = $root.google.cloud.irm.v1alpha2.Signal.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSignalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.UpdateSignalRequest} UpdateSignalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSignalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSignalRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSignalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.signal != null && message.hasOwnProperty("signal")) {
                                var error = $root.google.cloud.irm.v1alpha2.Signal.verify(message.signal);
                                if (error)
                                    return "signal." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSignalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.UpdateSignalRequest} UpdateSignalRequest
                         */
                        UpdateSignalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.UpdateSignalRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.UpdateSignalRequest();
                            if (object.signal != null) {
                                if (typeof object.signal !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateSignalRequest.signal: object expected");
                                message.signal = $root.google.cloud.irm.v1alpha2.Signal.fromObject(object.signal);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateSignalRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSignalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.UpdateSignalRequest} message UpdateSignalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSignalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.signal = null;
                                object.updateMask = null;
                            }
                            if (message.signal != null && message.hasOwnProperty("signal"))
                                object.signal = $root.google.cloud.irm.v1alpha2.Signal.toObject(message.signal, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSignalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.UpdateSignalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSignalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateSignalRequest;
                    })();
    
                    v1alpha2.SearchIncidentsRequest = (function() {
    
                        /**
                         * Properties of a SearchIncidentsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISearchIncidentsRequest
                         * @property {string|null} [parent] SearchIncidentsRequest parent
                         * @property {string|null} [query] SearchIncidentsRequest query
                         * @property {number|null} [pageSize] SearchIncidentsRequest pageSize
                         * @property {string|null} [pageToken] SearchIncidentsRequest pageToken
                         * @property {string|null} [timeZone] SearchIncidentsRequest timeZone
                         */
    
                        /**
                         * Constructs a new SearchIncidentsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SearchIncidentsRequest.
                         * @implements ISearchIncidentsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsRequest=} [properties] Properties to set
                         */
                        function SearchIncidentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchIncidentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @instance
                         */
                        SearchIncidentsRequest.prototype.parent = "";
    
                        /**
                         * SearchIncidentsRequest query.
                         * @member {string} query
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @instance
                         */
                        SearchIncidentsRequest.prototype.query = "";
    
                        /**
                         * SearchIncidentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @instance
                         */
                        SearchIncidentsRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchIncidentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @instance
                         */
                        SearchIncidentsRequest.prototype.pageToken = "";
    
                        /**
                         * SearchIncidentsRequest timeZone.
                         * @member {string} timeZone
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @instance
                         */
                        SearchIncidentsRequest.prototype.timeZone = "";
    
                        /**
                         * Creates a new SearchIncidentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsRequest} SearchIncidentsRequest instance
                         */
                        SearchIncidentsRequest.create = function create(properties) {
                            return new SearchIncidentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchIncidentsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchIncidentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsRequest} message SearchIncidentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchIncidentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.query != null && message.hasOwnProperty("query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.timeZone);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchIncidentsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchIncidentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsRequest} message SearchIncidentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchIncidentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchIncidentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsRequest} SearchIncidentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchIncidentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchIncidentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.query = reader.string();
                                    break;
                                case 3:
                                    message.pageSize = reader.int32();
                                    break;
                                case 4:
                                    message.pageToken = reader.string();
                                    break;
                                case 5:
                                    message.timeZone = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchIncidentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsRequest} SearchIncidentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchIncidentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchIncidentsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchIncidentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                if (!$util.isString(message.timeZone))
                                    return "timeZone: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchIncidentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsRequest} SearchIncidentsRequest
                         */
                        SearchIncidentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SearchIncidentsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SearchIncidentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.timeZone != null)
                                message.timeZone = String(object.timeZone);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchIncidentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SearchIncidentsRequest} message SearchIncidentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchIncidentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.query = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.timeZone = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                object.timeZone = message.timeZone;
                            return object;
                        };
    
                        /**
                         * Converts this SearchIncidentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchIncidentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchIncidentsRequest;
                    })();
    
                    v1alpha2.SearchIncidentsResponse = (function() {
    
                        /**
                         * Properties of a SearchIncidentsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISearchIncidentsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.IIncident>|null} [incidents] SearchIncidentsResponse incidents
                         * @property {string|null} [nextPageToken] SearchIncidentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new SearchIncidentsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SearchIncidentsResponse.
                         * @implements ISearchIncidentsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsResponse=} [properties] Properties to set
                         */
                        function SearchIncidentsResponse(properties) {
                            this.incidents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchIncidentsResponse incidents.
                         * @member {Array.<google.cloud.irm.v1alpha2.IIncident>} incidents
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @instance
                         */
                        SearchIncidentsResponse.prototype.incidents = $util.emptyArray;
    
                        /**
                         * SearchIncidentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @instance
                         */
                        SearchIncidentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new SearchIncidentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsResponse} SearchIncidentsResponse instance
                         */
                        SearchIncidentsResponse.create = function create(properties) {
                            return new SearchIncidentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchIncidentsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchIncidentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsResponse} message SearchIncidentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchIncidentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.incidents != null && message.incidents.length)
                                for (var i = 0; i < message.incidents.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Incident.encode(message.incidents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchIncidentsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SearchIncidentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISearchIncidentsResponse} message SearchIncidentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchIncidentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchIncidentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsResponse} SearchIncidentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchIncidentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SearchIncidentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.incidents && message.incidents.length))
                                        message.incidents = [];
                                    message.incidents.push($root.google.cloud.irm.v1alpha2.Incident.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchIncidentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsResponse} SearchIncidentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchIncidentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchIncidentsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchIncidentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.incidents != null && message.hasOwnProperty("incidents")) {
                                if (!Array.isArray(message.incidents))
                                    return "incidents: array expected";
                                for (var i = 0; i < message.incidents.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Incident.verify(message.incidents[i]);
                                    if (error)
                                        return "incidents." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchIncidentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SearchIncidentsResponse} SearchIncidentsResponse
                         */
                        SearchIncidentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SearchIncidentsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SearchIncidentsResponse();
                            if (object.incidents) {
                                if (!Array.isArray(object.incidents))
                                    throw TypeError(".google.cloud.irm.v1alpha2.SearchIncidentsResponse.incidents: array expected");
                                message.incidents = [];
                                for (var i = 0; i < object.incidents.length; ++i) {
                                    if (typeof object.incidents[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.SearchIncidentsResponse.incidents: object expected");
                                    message.incidents[i] = $root.google.cloud.irm.v1alpha2.Incident.fromObject(object.incidents[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchIncidentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SearchIncidentsResponse} message SearchIncidentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchIncidentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.incidents = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.incidents && message.incidents.length) {
                                object.incidents = [];
                                for (var j = 0; j < message.incidents.length; ++j)
                                    object.incidents[j] = $root.google.cloud.irm.v1alpha2.Incident.toObject(message.incidents[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this SearchIncidentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SearchIncidentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchIncidentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchIncidentsResponse;
                    })();
    
                    v1alpha2.EscalateIncidentRequest = (function() {
    
                        /**
                         * Properties of an EscalateIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IEscalateIncidentRequest
                         * @property {google.cloud.irm.v1alpha2.IIncident|null} [incident] EscalateIncidentRequest incident
                         * @property {google.protobuf.IFieldMask|null} [updateMask] EscalateIncidentRequest updateMask
                         * @property {Array.<google.cloud.irm.v1alpha2.ISubscription>|null} [subscriptions] EscalateIncidentRequest subscriptions
                         * @property {Array.<google.cloud.irm.v1alpha2.ITag>|null} [tags] EscalateIncidentRequest tags
                         * @property {Array.<google.cloud.irm.v1alpha2.IIncidentRoleAssignment>|null} [roles] EscalateIncidentRequest roles
                         * @property {Array.<google.cloud.irm.v1alpha2.IArtifact>|null} [artifacts] EscalateIncidentRequest artifacts
                         */
    
                        /**
                         * Constructs a new EscalateIncidentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an EscalateIncidentRequest.
                         * @implements IEscalateIncidentRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentRequest=} [properties] Properties to set
                         */
                        function EscalateIncidentRequest(properties) {
                            this.subscriptions = [];
                            this.tags = [];
                            this.roles = [];
                            this.artifacts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EscalateIncidentRequest incident.
                         * @member {google.cloud.irm.v1alpha2.IIncident|null|undefined} incident
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         */
                        EscalateIncidentRequest.prototype.incident = null;
    
                        /**
                         * EscalateIncidentRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         */
                        EscalateIncidentRequest.prototype.updateMask = null;
    
                        /**
                         * EscalateIncidentRequest subscriptions.
                         * @member {Array.<google.cloud.irm.v1alpha2.ISubscription>} subscriptions
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         */
                        EscalateIncidentRequest.prototype.subscriptions = $util.emptyArray;
    
                        /**
                         * EscalateIncidentRequest tags.
                         * @member {Array.<google.cloud.irm.v1alpha2.ITag>} tags
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         */
                        EscalateIncidentRequest.prototype.tags = $util.emptyArray;
    
                        /**
                         * EscalateIncidentRequest roles.
                         * @member {Array.<google.cloud.irm.v1alpha2.IIncidentRoleAssignment>} roles
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         */
                        EscalateIncidentRequest.prototype.roles = $util.emptyArray;
    
                        /**
                         * EscalateIncidentRequest artifacts.
                         * @member {Array.<google.cloud.irm.v1alpha2.IArtifact>} artifacts
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         */
                        EscalateIncidentRequest.prototype.artifacts = $util.emptyArray;
    
                        /**
                         * Creates a new EscalateIncidentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentRequest} EscalateIncidentRequest instance
                         */
                        EscalateIncidentRequest.create = function create(properties) {
                            return new EscalateIncidentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified EscalateIncidentRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.EscalateIncidentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentRequest} message EscalateIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EscalateIncidentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                $root.google.cloud.irm.v1alpha2.Incident.encode(message.incident, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.subscriptions != null && message.subscriptions.length)
                                for (var i = 0; i < message.subscriptions.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Subscription.encode(message.subscriptions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Tag.encode(message.tags[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.roles != null && message.roles.length)
                                for (var i = 0; i < message.roles.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.encode(message.roles[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.artifacts != null && message.artifacts.length)
                                for (var i = 0; i < message.artifacts.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Artifact.encode(message.artifacts[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EscalateIncidentRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.EscalateIncidentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentRequest} message EscalateIncidentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EscalateIncidentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EscalateIncidentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentRequest} EscalateIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EscalateIncidentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.EscalateIncidentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.incident = $root.google.cloud.irm.v1alpha2.Incident.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    if (!(message.subscriptions && message.subscriptions.length))
                                        message.subscriptions = [];
                                    message.subscriptions.push($root.google.cloud.irm.v1alpha2.Subscription.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    if (!(message.tags && message.tags.length))
                                        message.tags = [];
                                    message.tags.push($root.google.cloud.irm.v1alpha2.Tag.decode(reader, reader.uint32()));
                                    break;
                                case 5:
                                    if (!(message.roles && message.roles.length))
                                        message.roles = [];
                                    message.roles.push($root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.decode(reader, reader.uint32()));
                                    break;
                                case 6:
                                    if (!(message.artifacts && message.artifacts.length))
                                        message.artifacts = [];
                                    message.artifacts.push($root.google.cloud.irm.v1alpha2.Artifact.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EscalateIncidentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentRequest} EscalateIncidentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EscalateIncidentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EscalateIncidentRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EscalateIncidentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.incident != null && message.hasOwnProperty("incident")) {
                                var error = $root.google.cloud.irm.v1alpha2.Incident.verify(message.incident);
                                if (error)
                                    return "incident." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.subscriptions != null && message.hasOwnProperty("subscriptions")) {
                                if (!Array.isArray(message.subscriptions))
                                    return "subscriptions: array expected";
                                for (var i = 0; i < message.subscriptions.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Subscription.verify(message.subscriptions[i]);
                                    if (error)
                                        return "subscriptions." + error;
                                }
                            }
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Tag.verify(message.tags[i]);
                                    if (error)
                                        return "tags." + error;
                                }
                            }
                            if (message.roles != null && message.hasOwnProperty("roles")) {
                                if (!Array.isArray(message.roles))
                                    return "roles: array expected";
                                for (var i = 0; i < message.roles.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.verify(message.roles[i]);
                                    if (error)
                                        return "roles." + error;
                                }
                            }
                            if (message.artifacts != null && message.hasOwnProperty("artifacts")) {
                                if (!Array.isArray(message.artifacts))
                                    return "artifacts: array expected";
                                for (var i = 0; i < message.artifacts.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Artifact.verify(message.artifacts[i]);
                                    if (error)
                                        return "artifacts." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EscalateIncidentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentRequest} EscalateIncidentRequest
                         */
                        EscalateIncidentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.EscalateIncidentRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.EscalateIncidentRequest();
                            if (object.incident != null) {
                                if (typeof object.incident !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.incident: object expected");
                                message.incident = $root.google.cloud.irm.v1alpha2.Incident.fromObject(object.incident);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.subscriptions) {
                                if (!Array.isArray(object.subscriptions))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.subscriptions: array expected");
                                message.subscriptions = [];
                                for (var i = 0; i < object.subscriptions.length; ++i) {
                                    if (typeof object.subscriptions[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.subscriptions: object expected");
                                    message.subscriptions[i] = $root.google.cloud.irm.v1alpha2.Subscription.fromObject(object.subscriptions[i]);
                                }
                            }
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i) {
                                    if (typeof object.tags[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.tags: object expected");
                                    message.tags[i] = $root.google.cloud.irm.v1alpha2.Tag.fromObject(object.tags[i]);
                                }
                            }
                            if (object.roles) {
                                if (!Array.isArray(object.roles))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.roles: array expected");
                                message.roles = [];
                                for (var i = 0; i < object.roles.length; ++i) {
                                    if (typeof object.roles[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.roles: object expected");
                                    message.roles[i] = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.fromObject(object.roles[i]);
                                }
                            }
                            if (object.artifacts) {
                                if (!Array.isArray(object.artifacts))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.artifacts: array expected");
                                message.artifacts = [];
                                for (var i = 0; i < object.artifacts.length; ++i) {
                                    if (typeof object.artifacts[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentRequest.artifacts: object expected");
                                    message.artifacts[i] = $root.google.cloud.irm.v1alpha2.Artifact.fromObject(object.artifacts[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EscalateIncidentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.EscalateIncidentRequest} message EscalateIncidentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EscalateIncidentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.subscriptions = [];
                                object.tags = [];
                                object.roles = [];
                                object.artifacts = [];
                            }
                            if (options.defaults) {
                                object.incident = null;
                                object.updateMask = null;
                            }
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                object.incident = $root.google.cloud.irm.v1alpha2.Incident.toObject(message.incident, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.subscriptions && message.subscriptions.length) {
                                object.subscriptions = [];
                                for (var j = 0; j < message.subscriptions.length; ++j)
                                    object.subscriptions[j] = $root.google.cloud.irm.v1alpha2.Subscription.toObject(message.subscriptions[j], options);
                            }
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = $root.google.cloud.irm.v1alpha2.Tag.toObject(message.tags[j], options);
                            }
                            if (message.roles && message.roles.length) {
                                object.roles = [];
                                for (var j = 0; j < message.roles.length; ++j)
                                    object.roles[j] = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.toObject(message.roles[j], options);
                            }
                            if (message.artifacts && message.artifacts.length) {
                                object.artifacts = [];
                                for (var j = 0; j < message.artifacts.length; ++j)
                                    object.artifacts[j] = $root.google.cloud.irm.v1alpha2.Artifact.toObject(message.artifacts[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this EscalateIncidentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EscalateIncidentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return EscalateIncidentRequest;
                    })();
    
                    v1alpha2.EscalateIncidentResponse = (function() {
    
                        /**
                         * Properties of an EscalateIncidentResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IEscalateIncidentResponse
                         * @property {google.cloud.irm.v1alpha2.IIncident|null} [incident] EscalateIncidentResponse incident
                         * @property {Array.<google.cloud.irm.v1alpha2.ISubscription>|null} [subscriptions] EscalateIncidentResponse subscriptions
                         * @property {Array.<google.cloud.irm.v1alpha2.ITag>|null} [tags] EscalateIncidentResponse tags
                         * @property {Array.<google.cloud.irm.v1alpha2.IIncidentRole>|null} [roles] EscalateIncidentResponse roles
                         * @property {Array.<google.cloud.irm.v1alpha2.IArtifact>|null} [artifacts] EscalateIncidentResponse artifacts
                         */
    
                        /**
                         * Constructs a new EscalateIncidentResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an EscalateIncidentResponse.
                         * @implements IEscalateIncidentResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentResponse=} [properties] Properties to set
                         */
                        function EscalateIncidentResponse(properties) {
                            this.subscriptions = [];
                            this.tags = [];
                            this.roles = [];
                            this.artifacts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EscalateIncidentResponse incident.
                         * @member {google.cloud.irm.v1alpha2.IIncident|null|undefined} incident
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @instance
                         */
                        EscalateIncidentResponse.prototype.incident = null;
    
                        /**
                         * EscalateIncidentResponse subscriptions.
                         * @member {Array.<google.cloud.irm.v1alpha2.ISubscription>} subscriptions
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @instance
                         */
                        EscalateIncidentResponse.prototype.subscriptions = $util.emptyArray;
    
                        /**
                         * EscalateIncidentResponse tags.
                         * @member {Array.<google.cloud.irm.v1alpha2.ITag>} tags
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @instance
                         */
                        EscalateIncidentResponse.prototype.tags = $util.emptyArray;
    
                        /**
                         * EscalateIncidentResponse roles.
                         * @member {Array.<google.cloud.irm.v1alpha2.IIncidentRole>} roles
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @instance
                         */
                        EscalateIncidentResponse.prototype.roles = $util.emptyArray;
    
                        /**
                         * EscalateIncidentResponse artifacts.
                         * @member {Array.<google.cloud.irm.v1alpha2.IArtifact>} artifacts
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @instance
                         */
                        EscalateIncidentResponse.prototype.artifacts = $util.emptyArray;
    
                        /**
                         * Creates a new EscalateIncidentResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentResponse} EscalateIncidentResponse instance
                         */
                        EscalateIncidentResponse.create = function create(properties) {
                            return new EscalateIncidentResponse(properties);
                        };
    
                        /**
                         * Encodes the specified EscalateIncidentResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.EscalateIncidentResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentResponse} message EscalateIncidentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EscalateIncidentResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                $root.google.cloud.irm.v1alpha2.Incident.encode(message.incident, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.subscriptions != null && message.subscriptions.length)
                                for (var i = 0; i < message.subscriptions.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Subscription.encode(message.subscriptions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Tag.encode(message.tags[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.roles != null && message.roles.length)
                                for (var i = 0; i < message.roles.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.IncidentRole.encode(message.roles[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.artifacts != null && message.artifacts.length)
                                for (var i = 0; i < message.artifacts.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Artifact.encode(message.artifacts[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EscalateIncidentResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.EscalateIncidentResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IEscalateIncidentResponse} message EscalateIncidentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EscalateIncidentResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EscalateIncidentResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentResponse} EscalateIncidentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EscalateIncidentResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.EscalateIncidentResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.incident = $root.google.cloud.irm.v1alpha2.Incident.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    if (!(message.subscriptions && message.subscriptions.length))
                                        message.subscriptions = [];
                                    message.subscriptions.push($root.google.cloud.irm.v1alpha2.Subscription.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    if (!(message.tags && message.tags.length))
                                        message.tags = [];
                                    message.tags.push($root.google.cloud.irm.v1alpha2.Tag.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    if (!(message.roles && message.roles.length))
                                        message.roles = [];
                                    message.roles.push($root.google.cloud.irm.v1alpha2.IncidentRole.decode(reader, reader.uint32()));
                                    break;
                                case 5:
                                    if (!(message.artifacts && message.artifacts.length))
                                        message.artifacts = [];
                                    message.artifacts.push($root.google.cloud.irm.v1alpha2.Artifact.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EscalateIncidentResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentResponse} EscalateIncidentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EscalateIncidentResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EscalateIncidentResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EscalateIncidentResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.incident != null && message.hasOwnProperty("incident")) {
                                var error = $root.google.cloud.irm.v1alpha2.Incident.verify(message.incident);
                                if (error)
                                    return "incident." + error;
                            }
                            if (message.subscriptions != null && message.hasOwnProperty("subscriptions")) {
                                if (!Array.isArray(message.subscriptions))
                                    return "subscriptions: array expected";
                                for (var i = 0; i < message.subscriptions.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Subscription.verify(message.subscriptions[i]);
                                    if (error)
                                        return "subscriptions." + error;
                                }
                            }
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Tag.verify(message.tags[i]);
                                    if (error)
                                        return "tags." + error;
                                }
                            }
                            if (message.roles != null && message.hasOwnProperty("roles")) {
                                if (!Array.isArray(message.roles))
                                    return "roles: array expected";
                                for (var i = 0; i < message.roles.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.IncidentRole.verify(message.roles[i]);
                                    if (error)
                                        return "roles." + error;
                                }
                            }
                            if (message.artifacts != null && message.hasOwnProperty("artifacts")) {
                                if (!Array.isArray(message.artifacts))
                                    return "artifacts: array expected";
                                for (var i = 0; i < message.artifacts.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Artifact.verify(message.artifacts[i]);
                                    if (error)
                                        return "artifacts." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EscalateIncidentResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.EscalateIncidentResponse} EscalateIncidentResponse
                         */
                        EscalateIncidentResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.EscalateIncidentResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.EscalateIncidentResponse();
                            if (object.incident != null) {
                                if (typeof object.incident !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.incident: object expected");
                                message.incident = $root.google.cloud.irm.v1alpha2.Incident.fromObject(object.incident);
                            }
                            if (object.subscriptions) {
                                if (!Array.isArray(object.subscriptions))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.subscriptions: array expected");
                                message.subscriptions = [];
                                for (var i = 0; i < object.subscriptions.length; ++i) {
                                    if (typeof object.subscriptions[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.subscriptions: object expected");
                                    message.subscriptions[i] = $root.google.cloud.irm.v1alpha2.Subscription.fromObject(object.subscriptions[i]);
                                }
                            }
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i) {
                                    if (typeof object.tags[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.tags: object expected");
                                    message.tags[i] = $root.google.cloud.irm.v1alpha2.Tag.fromObject(object.tags[i]);
                                }
                            }
                            if (object.roles) {
                                if (!Array.isArray(object.roles))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.roles: array expected");
                                message.roles = [];
                                for (var i = 0; i < object.roles.length; ++i) {
                                    if (typeof object.roles[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.roles: object expected");
                                    message.roles[i] = $root.google.cloud.irm.v1alpha2.IncidentRole.fromObject(object.roles[i]);
                                }
                            }
                            if (object.artifacts) {
                                if (!Array.isArray(object.artifacts))
                                    throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.artifacts: array expected");
                                message.artifacts = [];
                                for (var i = 0; i < object.artifacts.length; ++i) {
                                    if (typeof object.artifacts[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.EscalateIncidentResponse.artifacts: object expected");
                                    message.artifacts[i] = $root.google.cloud.irm.v1alpha2.Artifact.fromObject(object.artifacts[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EscalateIncidentResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.EscalateIncidentResponse} message EscalateIncidentResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EscalateIncidentResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.subscriptions = [];
                                object.tags = [];
                                object.roles = [];
                                object.artifacts = [];
                            }
                            if (options.defaults)
                                object.incident = null;
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                object.incident = $root.google.cloud.irm.v1alpha2.Incident.toObject(message.incident, options);
                            if (message.subscriptions && message.subscriptions.length) {
                                object.subscriptions = [];
                                for (var j = 0; j < message.subscriptions.length; ++j)
                                    object.subscriptions[j] = $root.google.cloud.irm.v1alpha2.Subscription.toObject(message.subscriptions[j], options);
                            }
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = $root.google.cloud.irm.v1alpha2.Tag.toObject(message.tags[j], options);
                            }
                            if (message.roles && message.roles.length) {
                                object.roles = [];
                                for (var j = 0; j < message.roles.length; ++j)
                                    object.roles[j] = $root.google.cloud.irm.v1alpha2.IncidentRole.toObject(message.roles[j], options);
                            }
                            if (message.artifacts && message.artifacts.length) {
                                object.artifacts = [];
                                for (var j = 0; j < message.artifacts.length; ++j)
                                    object.artifacts[j] = $root.google.cloud.irm.v1alpha2.Artifact.toObject(message.artifacts[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this EscalateIncidentResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.EscalateIncidentResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EscalateIncidentResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return EscalateIncidentResponse;
                    })();
    
                    v1alpha2.CreateArtifactRequest = (function() {
    
                        /**
                         * Properties of a CreateArtifactRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateArtifactRequest
                         * @property {string|null} [parent] CreateArtifactRequest parent
                         * @property {google.cloud.irm.v1alpha2.IArtifact|null} [artifact] CreateArtifactRequest artifact
                         */
    
                        /**
                         * Constructs a new CreateArtifactRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateArtifactRequest.
                         * @implements ICreateArtifactRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateArtifactRequest=} [properties] Properties to set
                         */
                        function CreateArtifactRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateArtifactRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @instance
                         */
                        CreateArtifactRequest.prototype.parent = "";
    
                        /**
                         * CreateArtifactRequest artifact.
                         * @member {google.cloud.irm.v1alpha2.IArtifact|null|undefined} artifact
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @instance
                         */
                        CreateArtifactRequest.prototype.artifact = null;
    
                        /**
                         * Creates a new CreateArtifactRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateArtifactRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateArtifactRequest} CreateArtifactRequest instance
                         */
                        CreateArtifactRequest.create = function create(properties) {
                            return new CreateArtifactRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateArtifactRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateArtifactRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateArtifactRequest} message CreateArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateArtifactRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.artifact != null && message.hasOwnProperty("artifact"))
                                $root.google.cloud.irm.v1alpha2.Artifact.encode(message.artifact, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateArtifactRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateArtifactRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateArtifactRequest} message CreateArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateArtifactRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateArtifactRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateArtifactRequest} CreateArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateArtifactRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateArtifactRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.artifact = $root.google.cloud.irm.v1alpha2.Artifact.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateArtifactRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateArtifactRequest} CreateArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateArtifactRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateArtifactRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateArtifactRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.artifact != null && message.hasOwnProperty("artifact")) {
                                var error = $root.google.cloud.irm.v1alpha2.Artifact.verify(message.artifact);
                                if (error)
                                    return "artifact." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateArtifactRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateArtifactRequest} CreateArtifactRequest
                         */
                        CreateArtifactRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateArtifactRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateArtifactRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.artifact != null) {
                                if (typeof object.artifact !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateArtifactRequest.artifact: object expected");
                                message.artifact = $root.google.cloud.irm.v1alpha2.Artifact.fromObject(object.artifact);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateArtifactRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateArtifactRequest} message CreateArtifactRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateArtifactRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.artifact = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.artifact != null && message.hasOwnProperty("artifact"))
                                object.artifact = $root.google.cloud.irm.v1alpha2.Artifact.toObject(message.artifact, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateArtifactRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateArtifactRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateArtifactRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateArtifactRequest;
                    })();
    
                    v1alpha2.ListArtifactsRequest = (function() {
    
                        /**
                         * Properties of a ListArtifactsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListArtifactsRequest
                         * @property {string|null} [parent] ListArtifactsRequest parent
                         * @property {number|null} [pageSize] ListArtifactsRequest pageSize
                         * @property {string|null} [pageToken] ListArtifactsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListArtifactsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListArtifactsRequest.
                         * @implements IListArtifactsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsRequest=} [properties] Properties to set
                         */
                        function ListArtifactsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListArtifactsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @instance
                         */
                        ListArtifactsRequest.prototype.parent = "";
    
                        /**
                         * ListArtifactsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @instance
                         */
                        ListArtifactsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListArtifactsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @instance
                         */
                        ListArtifactsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListArtifactsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsRequest} ListArtifactsRequest instance
                         */
                        ListArtifactsRequest.create = function create(properties) {
                            return new ListArtifactsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListArtifactsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListArtifactsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsRequest} message ListArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListArtifactsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListArtifactsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListArtifactsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsRequest} message ListArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListArtifactsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListArtifactsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsRequest} ListArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListArtifactsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListArtifactsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListArtifactsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsRequest} ListArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListArtifactsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListArtifactsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListArtifactsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListArtifactsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsRequest} ListArtifactsRequest
                         */
                        ListArtifactsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListArtifactsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListArtifactsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListArtifactsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListArtifactsRequest} message ListArtifactsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListArtifactsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListArtifactsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListArtifactsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListArtifactsRequest;
                    })();
    
                    v1alpha2.ListArtifactsResponse = (function() {
    
                        /**
                         * Properties of a ListArtifactsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListArtifactsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.IArtifact>|null} [artifacts] ListArtifactsResponse artifacts
                         * @property {string|null} [nextPageToken] ListArtifactsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListArtifactsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListArtifactsResponse.
                         * @implements IListArtifactsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsResponse=} [properties] Properties to set
                         */
                        function ListArtifactsResponse(properties) {
                            this.artifacts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListArtifactsResponse artifacts.
                         * @member {Array.<google.cloud.irm.v1alpha2.IArtifact>} artifacts
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @instance
                         */
                        ListArtifactsResponse.prototype.artifacts = $util.emptyArray;
    
                        /**
                         * ListArtifactsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @instance
                         */
                        ListArtifactsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListArtifactsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsResponse} ListArtifactsResponse instance
                         */
                        ListArtifactsResponse.create = function create(properties) {
                            return new ListArtifactsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListArtifactsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListArtifactsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsResponse} message ListArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListArtifactsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.artifacts != null && message.artifacts.length)
                                for (var i = 0; i < message.artifacts.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Artifact.encode(message.artifacts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListArtifactsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListArtifactsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListArtifactsResponse} message ListArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListArtifactsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListArtifactsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsResponse} ListArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListArtifactsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListArtifactsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.artifacts && message.artifacts.length))
                                        message.artifacts = [];
                                    message.artifacts.push($root.google.cloud.irm.v1alpha2.Artifact.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListArtifactsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsResponse} ListArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListArtifactsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListArtifactsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListArtifactsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.artifacts != null && message.hasOwnProperty("artifacts")) {
                                if (!Array.isArray(message.artifacts))
                                    return "artifacts: array expected";
                                for (var i = 0; i < message.artifacts.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Artifact.verify(message.artifacts[i]);
                                    if (error)
                                        return "artifacts." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListArtifactsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListArtifactsResponse} ListArtifactsResponse
                         */
                        ListArtifactsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListArtifactsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListArtifactsResponse();
                            if (object.artifacts) {
                                if (!Array.isArray(object.artifacts))
                                    throw TypeError(".google.cloud.irm.v1alpha2.ListArtifactsResponse.artifacts: array expected");
                                message.artifacts = [];
                                for (var i = 0; i < object.artifacts.length; ++i) {
                                    if (typeof object.artifacts[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.ListArtifactsResponse.artifacts: object expected");
                                    message.artifacts[i] = $root.google.cloud.irm.v1alpha2.Artifact.fromObject(object.artifacts[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListArtifactsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListArtifactsResponse} message ListArtifactsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListArtifactsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.artifacts = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.artifacts && message.artifacts.length) {
                                object.artifacts = [];
                                for (var j = 0; j < message.artifacts.length; ++j)
                                    object.artifacts[j] = $root.google.cloud.irm.v1alpha2.Artifact.toObject(message.artifacts[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListArtifactsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListArtifactsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListArtifactsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListArtifactsResponse;
                    })();
    
                    v1alpha2.UpdateArtifactRequest = (function() {
    
                        /**
                         * Properties of an UpdateArtifactRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IUpdateArtifactRequest
                         * @property {google.cloud.irm.v1alpha2.IArtifact|null} [artifact] UpdateArtifactRequest artifact
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateArtifactRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateArtifactRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an UpdateArtifactRequest.
                         * @implements IUpdateArtifactRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IUpdateArtifactRequest=} [properties] Properties to set
                         */
                        function UpdateArtifactRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateArtifactRequest artifact.
                         * @member {google.cloud.irm.v1alpha2.IArtifact|null|undefined} artifact
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @instance
                         */
                        UpdateArtifactRequest.prototype.artifact = null;
    
                        /**
                         * UpdateArtifactRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @instance
                         */
                        UpdateArtifactRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateArtifactRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateArtifactRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.UpdateArtifactRequest} UpdateArtifactRequest instance
                         */
                        UpdateArtifactRequest.create = function create(properties) {
                            return new UpdateArtifactRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateArtifactRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateArtifactRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateArtifactRequest} message UpdateArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateArtifactRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.artifact != null && message.hasOwnProperty("artifact"))
                                $root.google.cloud.irm.v1alpha2.Artifact.encode(message.artifact, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateArtifactRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateArtifactRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateArtifactRequest} message UpdateArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateArtifactRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateArtifactRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.UpdateArtifactRequest} UpdateArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateArtifactRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.UpdateArtifactRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.artifact = $root.google.cloud.irm.v1alpha2.Artifact.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateArtifactRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.UpdateArtifactRequest} UpdateArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateArtifactRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateArtifactRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateArtifactRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.artifact != null && message.hasOwnProperty("artifact")) {
                                var error = $root.google.cloud.irm.v1alpha2.Artifact.verify(message.artifact);
                                if (error)
                                    return "artifact." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateArtifactRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.UpdateArtifactRequest} UpdateArtifactRequest
                         */
                        UpdateArtifactRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.UpdateArtifactRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.UpdateArtifactRequest();
                            if (object.artifact != null) {
                                if (typeof object.artifact !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateArtifactRequest.artifact: object expected");
                                message.artifact = $root.google.cloud.irm.v1alpha2.Artifact.fromObject(object.artifact);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateArtifactRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateArtifactRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.UpdateArtifactRequest} message UpdateArtifactRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateArtifactRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.artifact = null;
                                object.updateMask = null;
                            }
                            if (message.artifact != null && message.hasOwnProperty("artifact"))
                                object.artifact = $root.google.cloud.irm.v1alpha2.Artifact.toObject(message.artifact, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateArtifactRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.UpdateArtifactRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateArtifactRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateArtifactRequest;
                    })();
    
                    v1alpha2.DeleteArtifactRequest = (function() {
    
                        /**
                         * Properties of a DeleteArtifactRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IDeleteArtifactRequest
                         * @property {string|null} [name] DeleteArtifactRequest name
                         */
    
                        /**
                         * Constructs a new DeleteArtifactRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a DeleteArtifactRequest.
                         * @implements IDeleteArtifactRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IDeleteArtifactRequest=} [properties] Properties to set
                         */
                        function DeleteArtifactRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteArtifactRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @instance
                         */
                        DeleteArtifactRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteArtifactRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteArtifactRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.DeleteArtifactRequest} DeleteArtifactRequest instance
                         */
                        DeleteArtifactRequest.create = function create(properties) {
                            return new DeleteArtifactRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteArtifactRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteArtifactRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteArtifactRequest} message DeleteArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteArtifactRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteArtifactRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteArtifactRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteArtifactRequest} message DeleteArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteArtifactRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteArtifactRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.DeleteArtifactRequest} DeleteArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteArtifactRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.DeleteArtifactRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteArtifactRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.DeleteArtifactRequest} DeleteArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteArtifactRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteArtifactRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteArtifactRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteArtifactRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.DeleteArtifactRequest} DeleteArtifactRequest
                         */
                        DeleteArtifactRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.DeleteArtifactRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.DeleteArtifactRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteArtifactRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.DeleteArtifactRequest} message DeleteArtifactRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteArtifactRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteArtifactRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.DeleteArtifactRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteArtifactRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteArtifactRequest;
                    })();
    
                    v1alpha2.SendShiftHandoffRequest = (function() {
    
                        /**
                         * Properties of a SendShiftHandoffRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISendShiftHandoffRequest
                         * @property {string|null} [parent] SendShiftHandoffRequest parent
                         * @property {Array.<string>|null} [recipients] SendShiftHandoffRequest recipients
                         * @property {Array.<string>|null} [cc] SendShiftHandoffRequest cc
                         * @property {string|null} [subject] SendShiftHandoffRequest subject
                         * @property {string|null} [notesContentType] SendShiftHandoffRequest notesContentType
                         * @property {string|null} [notesContent] SendShiftHandoffRequest notesContent
                         * @property {Array.<google.cloud.irm.v1alpha2.SendShiftHandoffRequest.IIncident>|null} [incidents] SendShiftHandoffRequest incidents
                         * @property {boolean|null} [previewOnly] SendShiftHandoffRequest previewOnly
                         */
    
                        /**
                         * Constructs a new SendShiftHandoffRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SendShiftHandoffRequest.
                         * @implements ISendShiftHandoffRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffRequest=} [properties] Properties to set
                         */
                        function SendShiftHandoffRequest(properties) {
                            this.recipients = [];
                            this.cc = [];
                            this.incidents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SendShiftHandoffRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.parent = "";
    
                        /**
                         * SendShiftHandoffRequest recipients.
                         * @member {Array.<string>} recipients
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.recipients = $util.emptyArray;
    
                        /**
                         * SendShiftHandoffRequest cc.
                         * @member {Array.<string>} cc
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.cc = $util.emptyArray;
    
                        /**
                         * SendShiftHandoffRequest subject.
                         * @member {string} subject
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.subject = "";
    
                        /**
                         * SendShiftHandoffRequest notesContentType.
                         * @member {string} notesContentType
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.notesContentType = "";
    
                        /**
                         * SendShiftHandoffRequest notesContent.
                         * @member {string} notesContent
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.notesContent = "";
    
                        /**
                         * SendShiftHandoffRequest incidents.
                         * @member {Array.<google.cloud.irm.v1alpha2.SendShiftHandoffRequest.IIncident>} incidents
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.incidents = $util.emptyArray;
    
                        /**
                         * SendShiftHandoffRequest previewOnly.
                         * @member {boolean} previewOnly
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         */
                        SendShiftHandoffRequest.prototype.previewOnly = false;
    
                        /**
                         * Creates a new SendShiftHandoffRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest} SendShiftHandoffRequest instance
                         */
                        SendShiftHandoffRequest.create = function create(properties) {
                            return new SendShiftHandoffRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SendShiftHandoffRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.SendShiftHandoffRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffRequest} message SendShiftHandoffRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SendShiftHandoffRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.recipients != null && message.recipients.length)
                                for (var i = 0; i < message.recipients.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.recipients[i]);
                            if (message.cc != null && message.cc.length)
                                for (var i = 0; i < message.cc.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cc[i]);
                            if (message.subject != null && message.hasOwnProperty("subject"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.subject);
                            if (message.notesContentType != null && message.hasOwnProperty("notesContentType"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.notesContentType);
                            if (message.notesContent != null && message.hasOwnProperty("notesContent"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.notesContent);
                            if (message.incidents != null && message.incidents.length)
                                for (var i = 0; i < message.incidents.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.encode(message.incidents[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.previewOnly != null && message.hasOwnProperty("previewOnly"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.previewOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SendShiftHandoffRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SendShiftHandoffRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffRequest} message SendShiftHandoffRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SendShiftHandoffRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SendShiftHandoffRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest} SendShiftHandoffRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SendShiftHandoffRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    if (!(message.recipients && message.recipients.length))
                                        message.recipients = [];
                                    message.recipients.push(reader.string());
                                    break;
                                case 3:
                                    if (!(message.cc && message.cc.length))
                                        message.cc = [];
                                    message.cc.push(reader.string());
                                    break;
                                case 4:
                                    message.subject = reader.string();
                                    break;
                                case 5:
                                    message.notesContentType = reader.string();
                                    break;
                                case 6:
                                    message.notesContent = reader.string();
                                    break;
                                case 7:
                                    if (!(message.incidents && message.incidents.length))
                                        message.incidents = [];
                                    message.incidents.push($root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.decode(reader, reader.uint32()));
                                    break;
                                case 8:
                                    message.previewOnly = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SendShiftHandoffRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest} SendShiftHandoffRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SendShiftHandoffRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SendShiftHandoffRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SendShiftHandoffRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.recipients != null && message.hasOwnProperty("recipients")) {
                                if (!Array.isArray(message.recipients))
                                    return "recipients: array expected";
                                for (var i = 0; i < message.recipients.length; ++i)
                                    if (!$util.isString(message.recipients[i]))
                                        return "recipients: string[] expected";
                            }
                            if (message.cc != null && message.hasOwnProperty("cc")) {
                                if (!Array.isArray(message.cc))
                                    return "cc: array expected";
                                for (var i = 0; i < message.cc.length; ++i)
                                    if (!$util.isString(message.cc[i]))
                                        return "cc: string[] expected";
                            }
                            if (message.subject != null && message.hasOwnProperty("subject"))
                                if (!$util.isString(message.subject))
                                    return "subject: string expected";
                            if (message.notesContentType != null && message.hasOwnProperty("notesContentType"))
                                if (!$util.isString(message.notesContentType))
                                    return "notesContentType: string expected";
                            if (message.notesContent != null && message.hasOwnProperty("notesContent"))
                                if (!$util.isString(message.notesContent))
                                    return "notesContent: string expected";
                            if (message.incidents != null && message.hasOwnProperty("incidents")) {
                                if (!Array.isArray(message.incidents))
                                    return "incidents: array expected";
                                for (var i = 0; i < message.incidents.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.verify(message.incidents[i]);
                                    if (error)
                                        return "incidents." + error;
                                }
                            }
                            if (message.previewOnly != null && message.hasOwnProperty("previewOnly"))
                                if (typeof message.previewOnly !== "boolean")
                                    return "previewOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SendShiftHandoffRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest} SendShiftHandoffRequest
                         */
                        SendShiftHandoffRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.recipients) {
                                if (!Array.isArray(object.recipients))
                                    throw TypeError(".google.cloud.irm.v1alpha2.SendShiftHandoffRequest.recipients: array expected");
                                message.recipients = [];
                                for (var i = 0; i < object.recipients.length; ++i)
                                    message.recipients[i] = String(object.recipients[i]);
                            }
                            if (object.cc) {
                                if (!Array.isArray(object.cc))
                                    throw TypeError(".google.cloud.irm.v1alpha2.SendShiftHandoffRequest.cc: array expected");
                                message.cc = [];
                                for (var i = 0; i < object.cc.length; ++i)
                                    message.cc[i] = String(object.cc[i]);
                            }
                            if (object.subject != null)
                                message.subject = String(object.subject);
                            if (object.notesContentType != null)
                                message.notesContentType = String(object.notesContentType);
                            if (object.notesContent != null)
                                message.notesContent = String(object.notesContent);
                            if (object.incidents) {
                                if (!Array.isArray(object.incidents))
                                    throw TypeError(".google.cloud.irm.v1alpha2.SendShiftHandoffRequest.incidents: array expected");
                                message.incidents = [];
                                for (var i = 0; i < object.incidents.length; ++i) {
                                    if (typeof object.incidents[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.SendShiftHandoffRequest.incidents: object expected");
                                    message.incidents[i] = $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.fromObject(object.incidents[i]);
                                }
                            }
                            if (object.previewOnly != null)
                                message.previewOnly = Boolean(object.previewOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SendShiftHandoffRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SendShiftHandoffRequest} message SendShiftHandoffRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SendShiftHandoffRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.recipients = [];
                                object.cc = [];
                                object.incidents = [];
                            }
                            if (options.defaults) {
                                object.parent = "";
                                object.subject = "";
                                object.notesContentType = "";
                                object.notesContent = "";
                                object.previewOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.recipients && message.recipients.length) {
                                object.recipients = [];
                                for (var j = 0; j < message.recipients.length; ++j)
                                    object.recipients[j] = message.recipients[j];
                            }
                            if (message.cc && message.cc.length) {
                                object.cc = [];
                                for (var j = 0; j < message.cc.length; ++j)
                                    object.cc[j] = message.cc[j];
                            }
                            if (message.subject != null && message.hasOwnProperty("subject"))
                                object.subject = message.subject;
                            if (message.notesContentType != null && message.hasOwnProperty("notesContentType"))
                                object.notesContentType = message.notesContentType;
                            if (message.notesContent != null && message.hasOwnProperty("notesContent"))
                                object.notesContent = message.notesContent;
                            if (message.incidents && message.incidents.length) {
                                object.incidents = [];
                                for (var j = 0; j < message.incidents.length; ++j)
                                    object.incidents[j] = $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.toObject(message.incidents[j], options);
                            }
                            if (message.previewOnly != null && message.hasOwnProperty("previewOnly"))
                                object.previewOnly = message.previewOnly;
                            return object;
                        };
    
                        /**
                         * Converts this SendShiftHandoffRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SendShiftHandoffRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        SendShiftHandoffRequest.Incident = (function() {
    
                            /**
                             * Properties of an Incident.
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                             * @interface IIncident
                             * @property {string|null} [name] Incident name
                             */
    
                            /**
                             * Constructs a new Incident.
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest
                             * @classdesc Represents an Incident.
                             * @implements IIncident
                             * @constructor
                             * @param {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.IIncident=} [properties] Properties to set
                             */
                            function Incident(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Incident name.
                             * @member {string} name
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @instance
                             */
                            Incident.prototype.name = "";
    
                            /**
                             * Creates a new Incident instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.IIncident=} [properties] Properties to set
                             * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident} Incident instance
                             */
                            Incident.create = function create(properties) {
                                return new Incident(properties);
                            };
    
                            /**
                             * Encodes the specified Incident message. Does not implicitly {@link google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.IIncident} message Incident message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Incident.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && message.hasOwnProperty("name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Incident message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.IIncident} message Incident message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Incident.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an Incident message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident} Incident
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Incident.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.name = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an Incident message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident} Incident
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Incident.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an Incident message.
                             * @function verify
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Incident.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an Incident message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident} Incident
                             */
                            Incident.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident)
                                    return object;
                                var message = new $root.google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an Incident message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @static
                             * @param {google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident} message Incident
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Incident.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this Incident to JSON.
                             * @function toJSON
                             * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Incident.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return Incident;
                        })();
    
                        return SendShiftHandoffRequest;
                    })();
    
                    v1alpha2.SendShiftHandoffResponse = (function() {
    
                        /**
                         * Properties of a SendShiftHandoffResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISendShiftHandoffResponse
                         * @property {string|null} [contentType] SendShiftHandoffResponse contentType
                         * @property {string|null} [content] SendShiftHandoffResponse content
                         */
    
                        /**
                         * Constructs a new SendShiftHandoffResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a SendShiftHandoffResponse.
                         * @implements ISendShiftHandoffResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffResponse=} [properties] Properties to set
                         */
                        function SendShiftHandoffResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SendShiftHandoffResponse contentType.
                         * @member {string} contentType
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @instance
                         */
                        SendShiftHandoffResponse.prototype.contentType = "";
    
                        /**
                         * SendShiftHandoffResponse content.
                         * @member {string} content
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @instance
                         */
                        SendShiftHandoffResponse.prototype.content = "";
    
                        /**
                         * Creates a new SendShiftHandoffResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffResponse} SendShiftHandoffResponse instance
                         */
                        SendShiftHandoffResponse.create = function create(properties) {
                            return new SendShiftHandoffResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SendShiftHandoffResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.SendShiftHandoffResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffResponse} message SendShiftHandoffResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SendShiftHandoffResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.contentType);
                            if (message.content != null && message.hasOwnProperty("content"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SendShiftHandoffResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.SendShiftHandoffResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISendShiftHandoffResponse} message SendShiftHandoffResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SendShiftHandoffResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SendShiftHandoffResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffResponse} SendShiftHandoffResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SendShiftHandoffResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.SendShiftHandoffResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.contentType = reader.string();
                                    break;
                                case 2:
                                    message.content = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SendShiftHandoffResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffResponse} SendShiftHandoffResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SendShiftHandoffResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SendShiftHandoffResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SendShiftHandoffResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                if (!$util.isString(message.contentType))
                                    return "contentType: string expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SendShiftHandoffResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.SendShiftHandoffResponse} SendShiftHandoffResponse
                         */
                        SendShiftHandoffResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.SendShiftHandoffResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.SendShiftHandoffResponse();
                            if (object.contentType != null)
                                message.contentType = String(object.contentType);
                            if (object.content != null)
                                message.content = String(object.content);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SendShiftHandoffResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.SendShiftHandoffResponse} message SendShiftHandoffResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SendShiftHandoffResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.contentType = "";
                                object.content = "";
                            }
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                object.contentType = message.contentType;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            return object;
                        };
    
                        /**
                         * Converts this SendShiftHandoffResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.SendShiftHandoffResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SendShiftHandoffResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SendShiftHandoffResponse;
                    })();
    
                    v1alpha2.CreateSubscriptionRequest = (function() {
    
                        /**
                         * Properties of a CreateSubscriptionRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateSubscriptionRequest
                         * @property {string|null} [parent] CreateSubscriptionRequest parent
                         * @property {google.cloud.irm.v1alpha2.ISubscription|null} [subscription] CreateSubscriptionRequest subscription
                         */
    
                        /**
                         * Constructs a new CreateSubscriptionRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateSubscriptionRequest.
                         * @implements ICreateSubscriptionRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateSubscriptionRequest=} [properties] Properties to set
                         */
                        function CreateSubscriptionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSubscriptionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @instance
                         */
                        CreateSubscriptionRequest.prototype.parent = "";
    
                        /**
                         * CreateSubscriptionRequest subscription.
                         * @member {google.cloud.irm.v1alpha2.ISubscription|null|undefined} subscription
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @instance
                         */
                        CreateSubscriptionRequest.prototype.subscription = null;
    
                        /**
                         * Creates a new CreateSubscriptionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateSubscriptionRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateSubscriptionRequest} CreateSubscriptionRequest instance
                         */
                        CreateSubscriptionRequest.create = function create(properties) {
                            return new CreateSubscriptionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSubscriptionRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateSubscriptionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateSubscriptionRequest} message CreateSubscriptionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSubscriptionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.subscription != null && message.hasOwnProperty("subscription"))
                                $root.google.cloud.irm.v1alpha2.Subscription.encode(message.subscription, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSubscriptionRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateSubscriptionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateSubscriptionRequest} message CreateSubscriptionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSubscriptionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSubscriptionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateSubscriptionRequest} CreateSubscriptionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSubscriptionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateSubscriptionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.subscription = $root.google.cloud.irm.v1alpha2.Subscription.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSubscriptionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateSubscriptionRequest} CreateSubscriptionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSubscriptionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSubscriptionRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSubscriptionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.subscription != null && message.hasOwnProperty("subscription")) {
                                var error = $root.google.cloud.irm.v1alpha2.Subscription.verify(message.subscription);
                                if (error)
                                    return "subscription." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateSubscriptionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateSubscriptionRequest} CreateSubscriptionRequest
                         */
                        CreateSubscriptionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateSubscriptionRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateSubscriptionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.subscription != null) {
                                if (typeof object.subscription !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateSubscriptionRequest.subscription: object expected");
                                message.subscription = $root.google.cloud.irm.v1alpha2.Subscription.fromObject(object.subscription);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSubscriptionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateSubscriptionRequest} message CreateSubscriptionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSubscriptionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.subscription = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.subscription != null && message.hasOwnProperty("subscription"))
                                object.subscription = $root.google.cloud.irm.v1alpha2.Subscription.toObject(message.subscription, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateSubscriptionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateSubscriptionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSubscriptionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateSubscriptionRequest;
                    })();
    
                    v1alpha2.UpdateSubscriptionRequest = (function() {
    
                        /**
                         * Properties of an UpdateSubscriptionRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IUpdateSubscriptionRequest
                         * @property {google.cloud.irm.v1alpha2.ISubscription|null} [subscription] UpdateSubscriptionRequest subscription
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateSubscriptionRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateSubscriptionRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an UpdateSubscriptionRequest.
                         * @implements IUpdateSubscriptionRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IUpdateSubscriptionRequest=} [properties] Properties to set
                         */
                        function UpdateSubscriptionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSubscriptionRequest subscription.
                         * @member {google.cloud.irm.v1alpha2.ISubscription|null|undefined} subscription
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @instance
                         */
                        UpdateSubscriptionRequest.prototype.subscription = null;
    
                        /**
                         * UpdateSubscriptionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @instance
                         */
                        UpdateSubscriptionRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateSubscriptionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateSubscriptionRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.UpdateSubscriptionRequest} UpdateSubscriptionRequest instance
                         */
                        UpdateSubscriptionRequest.create = function create(properties) {
                            return new UpdateSubscriptionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSubscriptionRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateSubscriptionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateSubscriptionRequest} message UpdateSubscriptionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSubscriptionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.subscription != null && message.hasOwnProperty("subscription"))
                                $root.google.cloud.irm.v1alpha2.Subscription.encode(message.subscription, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSubscriptionRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.UpdateSubscriptionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUpdateSubscriptionRequest} message UpdateSubscriptionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSubscriptionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSubscriptionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.UpdateSubscriptionRequest} UpdateSubscriptionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSubscriptionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.UpdateSubscriptionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.subscription = $root.google.cloud.irm.v1alpha2.Subscription.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSubscriptionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.UpdateSubscriptionRequest} UpdateSubscriptionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSubscriptionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSubscriptionRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSubscriptionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.subscription != null && message.hasOwnProperty("subscription")) {
                                var error = $root.google.cloud.irm.v1alpha2.Subscription.verify(message.subscription);
                                if (error)
                                    return "subscription." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSubscriptionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.UpdateSubscriptionRequest} UpdateSubscriptionRequest
                         */
                        UpdateSubscriptionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.UpdateSubscriptionRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.UpdateSubscriptionRequest();
                            if (object.subscription != null) {
                                if (typeof object.subscription !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateSubscriptionRequest.subscription: object expected");
                                message.subscription = $root.google.cloud.irm.v1alpha2.Subscription.fromObject(object.subscription);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.UpdateSubscriptionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSubscriptionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.UpdateSubscriptionRequest} message UpdateSubscriptionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSubscriptionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.subscription = null;
                                object.updateMask = null;
                            }
                            if (message.subscription != null && message.hasOwnProperty("subscription"))
                                object.subscription = $root.google.cloud.irm.v1alpha2.Subscription.toObject(message.subscription, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSubscriptionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.UpdateSubscriptionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSubscriptionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateSubscriptionRequest;
                    })();
    
                    v1alpha2.ListSubscriptionsRequest = (function() {
    
                        /**
                         * Properties of a ListSubscriptionsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListSubscriptionsRequest
                         * @property {string|null} [parent] ListSubscriptionsRequest parent
                         * @property {number|null} [pageSize] ListSubscriptionsRequest pageSize
                         * @property {string|null} [pageToken] ListSubscriptionsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListSubscriptionsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListSubscriptionsRequest.
                         * @implements IListSubscriptionsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsRequest=} [properties] Properties to set
                         */
                        function ListSubscriptionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSubscriptionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @instance
                         */
                        ListSubscriptionsRequest.prototype.parent = "";
    
                        /**
                         * ListSubscriptionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @instance
                         */
                        ListSubscriptionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSubscriptionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @instance
                         */
                        ListSubscriptionsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListSubscriptionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsRequest} ListSubscriptionsRequest instance
                         */
                        ListSubscriptionsRequest.create = function create(properties) {
                            return new ListSubscriptionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSubscriptionsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListSubscriptionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsRequest} message ListSubscriptionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscriptionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSubscriptionsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListSubscriptionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsRequest} message ListSubscriptionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscriptionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSubscriptionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsRequest} ListSubscriptionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscriptionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListSubscriptionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSubscriptionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsRequest} ListSubscriptionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscriptionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSubscriptionsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSubscriptionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSubscriptionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsRequest} ListSubscriptionsRequest
                         */
                        ListSubscriptionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListSubscriptionsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListSubscriptionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSubscriptionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListSubscriptionsRequest} message ListSubscriptionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSubscriptionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSubscriptionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSubscriptionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListSubscriptionsRequest;
                    })();
    
                    v1alpha2.ListSubscriptionsResponse = (function() {
    
                        /**
                         * Properties of a ListSubscriptionsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListSubscriptionsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.ISubscription>|null} [subscriptions] ListSubscriptionsResponse subscriptions
                         * @property {string|null} [nextPageToken] ListSubscriptionsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListSubscriptionsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListSubscriptionsResponse.
                         * @implements IListSubscriptionsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsResponse=} [properties] Properties to set
                         */
                        function ListSubscriptionsResponse(properties) {
                            this.subscriptions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSubscriptionsResponse subscriptions.
                         * @member {Array.<google.cloud.irm.v1alpha2.ISubscription>} subscriptions
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @instance
                         */
                        ListSubscriptionsResponse.prototype.subscriptions = $util.emptyArray;
    
                        /**
                         * ListSubscriptionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @instance
                         */
                        ListSubscriptionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListSubscriptionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsResponse} ListSubscriptionsResponse instance
                         */
                        ListSubscriptionsResponse.create = function create(properties) {
                            return new ListSubscriptionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSubscriptionsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListSubscriptionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsResponse} message ListSubscriptionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscriptionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.subscriptions != null && message.subscriptions.length)
                                for (var i = 0; i < message.subscriptions.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Subscription.encode(message.subscriptions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSubscriptionsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListSubscriptionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListSubscriptionsResponse} message ListSubscriptionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscriptionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSubscriptionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsResponse} ListSubscriptionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscriptionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListSubscriptionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.subscriptions && message.subscriptions.length))
                                        message.subscriptions = [];
                                    message.subscriptions.push($root.google.cloud.irm.v1alpha2.Subscription.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSubscriptionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsResponse} ListSubscriptionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscriptionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSubscriptionsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSubscriptionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.subscriptions != null && message.hasOwnProperty("subscriptions")) {
                                if (!Array.isArray(message.subscriptions))
                                    return "subscriptions: array expected";
                                for (var i = 0; i < message.subscriptions.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Subscription.verify(message.subscriptions[i]);
                                    if (error)
                                        return "subscriptions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSubscriptionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListSubscriptionsResponse} ListSubscriptionsResponse
                         */
                        ListSubscriptionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListSubscriptionsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListSubscriptionsResponse();
                            if (object.subscriptions) {
                                if (!Array.isArray(object.subscriptions))
                                    throw TypeError(".google.cloud.irm.v1alpha2.ListSubscriptionsResponse.subscriptions: array expected");
                                message.subscriptions = [];
                                for (var i = 0; i < object.subscriptions.length; ++i) {
                                    if (typeof object.subscriptions[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.ListSubscriptionsResponse.subscriptions: object expected");
                                    message.subscriptions[i] = $root.google.cloud.irm.v1alpha2.Subscription.fromObject(object.subscriptions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSubscriptionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListSubscriptionsResponse} message ListSubscriptionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSubscriptionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.subscriptions = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.subscriptions && message.subscriptions.length) {
                                object.subscriptions = [];
                                for (var j = 0; j < message.subscriptions.length; ++j)
                                    object.subscriptions[j] = $root.google.cloud.irm.v1alpha2.Subscription.toObject(message.subscriptions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSubscriptionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListSubscriptionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSubscriptionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListSubscriptionsResponse;
                    })();
    
                    v1alpha2.DeleteSubscriptionRequest = (function() {
    
                        /**
                         * Properties of a DeleteSubscriptionRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IDeleteSubscriptionRequest
                         * @property {string|null} [name] DeleteSubscriptionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteSubscriptionRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a DeleteSubscriptionRequest.
                         * @implements IDeleteSubscriptionRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IDeleteSubscriptionRequest=} [properties] Properties to set
                         */
                        function DeleteSubscriptionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteSubscriptionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @instance
                         */
                        DeleteSubscriptionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteSubscriptionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteSubscriptionRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.DeleteSubscriptionRequest} DeleteSubscriptionRequest instance
                         */
                        DeleteSubscriptionRequest.create = function create(properties) {
                            return new DeleteSubscriptionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteSubscriptionRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteSubscriptionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteSubscriptionRequest} message DeleteSubscriptionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSubscriptionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteSubscriptionRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteSubscriptionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteSubscriptionRequest} message DeleteSubscriptionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSubscriptionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteSubscriptionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.DeleteSubscriptionRequest} DeleteSubscriptionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSubscriptionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.DeleteSubscriptionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteSubscriptionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.DeleteSubscriptionRequest} DeleteSubscriptionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSubscriptionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteSubscriptionRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteSubscriptionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteSubscriptionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.DeleteSubscriptionRequest} DeleteSubscriptionRequest
                         */
                        DeleteSubscriptionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.DeleteSubscriptionRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.DeleteSubscriptionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteSubscriptionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.DeleteSubscriptionRequest} message DeleteSubscriptionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteSubscriptionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteSubscriptionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.DeleteSubscriptionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteSubscriptionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteSubscriptionRequest;
                    })();
    
                    v1alpha2.CreateIncidentRoleAssignmentRequest = (function() {
    
                        /**
                         * Properties of a CreateIncidentRoleAssignmentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICreateIncidentRoleAssignmentRequest
                         * @property {string|null} [parent] CreateIncidentRoleAssignmentRequest parent
                         * @property {google.cloud.irm.v1alpha2.IIncidentRoleAssignment|null} [incidentRoleAssignment] CreateIncidentRoleAssignmentRequest incidentRoleAssignment
                         */
    
                        /**
                         * Constructs a new CreateIncidentRoleAssignmentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CreateIncidentRoleAssignmentRequest.
                         * @implements ICreateIncidentRoleAssignmentRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRoleAssignmentRequest=} [properties] Properties to set
                         */
                        function CreateIncidentRoleAssignmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateIncidentRoleAssignmentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @instance
                         */
                        CreateIncidentRoleAssignmentRequest.prototype.parent = "";
    
                        /**
                         * CreateIncidentRoleAssignmentRequest incidentRoleAssignment.
                         * @member {google.cloud.irm.v1alpha2.IIncidentRoleAssignment|null|undefined} incidentRoleAssignment
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @instance
                         */
                        CreateIncidentRoleAssignmentRequest.prototype.incidentRoleAssignment = null;
    
                        /**
                         * Creates a new CreateIncidentRoleAssignmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRoleAssignmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest} CreateIncidentRoleAssignmentRequest instance
                         */
                        CreateIncidentRoleAssignmentRequest.create = function create(properties) {
                            return new CreateIncidentRoleAssignmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateIncidentRoleAssignmentRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRoleAssignmentRequest} message CreateIncidentRoleAssignmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateIncidentRoleAssignmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.incidentRoleAssignment != null && message.hasOwnProperty("incidentRoleAssignment"))
                                $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.encode(message.incidentRoleAssignment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateIncidentRoleAssignmentRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICreateIncidentRoleAssignmentRequest} message CreateIncidentRoleAssignmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateIncidentRoleAssignmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateIncidentRoleAssignmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest} CreateIncidentRoleAssignmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateIncidentRoleAssignmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.incidentRoleAssignment = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateIncidentRoleAssignmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest} CreateIncidentRoleAssignmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateIncidentRoleAssignmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateIncidentRoleAssignmentRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateIncidentRoleAssignmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.incidentRoleAssignment != null && message.hasOwnProperty("incidentRoleAssignment")) {
                                var error = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.verify(message.incidentRoleAssignment);
                                if (error)
                                    return "incidentRoleAssignment." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateIncidentRoleAssignmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest} CreateIncidentRoleAssignmentRequest
                         */
                        CreateIncidentRoleAssignmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.incidentRoleAssignment != null) {
                                if (typeof object.incidentRoleAssignment !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest.incidentRoleAssignment: object expected");
                                message.incidentRoleAssignment = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.fromObject(object.incidentRoleAssignment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateIncidentRoleAssignmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest} message CreateIncidentRoleAssignmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateIncidentRoleAssignmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.incidentRoleAssignment = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.incidentRoleAssignment != null && message.hasOwnProperty("incidentRoleAssignment"))
                                object.incidentRoleAssignment = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.toObject(message.incidentRoleAssignment, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateIncidentRoleAssignmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateIncidentRoleAssignmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateIncidentRoleAssignmentRequest;
                    })();
    
                    v1alpha2.DeleteIncidentRoleAssignmentRequest = (function() {
    
                        /**
                         * Properties of a DeleteIncidentRoleAssignmentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IDeleteIncidentRoleAssignmentRequest
                         * @property {string|null} [name] DeleteIncidentRoleAssignmentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteIncidentRoleAssignmentRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a DeleteIncidentRoleAssignmentRequest.
                         * @implements IDeleteIncidentRoleAssignmentRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IDeleteIncidentRoleAssignmentRequest=} [properties] Properties to set
                         */
                        function DeleteIncidentRoleAssignmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteIncidentRoleAssignmentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @instance
                         */
                        DeleteIncidentRoleAssignmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteIncidentRoleAssignmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteIncidentRoleAssignmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest} DeleteIncidentRoleAssignmentRequest instance
                         */
                        DeleteIncidentRoleAssignmentRequest.create = function create(properties) {
                            return new DeleteIncidentRoleAssignmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteIncidentRoleAssignmentRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteIncidentRoleAssignmentRequest} message DeleteIncidentRoleAssignmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteIncidentRoleAssignmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteIncidentRoleAssignmentRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IDeleteIncidentRoleAssignmentRequest} message DeleteIncidentRoleAssignmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteIncidentRoleAssignmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteIncidentRoleAssignmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest} DeleteIncidentRoleAssignmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteIncidentRoleAssignmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteIncidentRoleAssignmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest} DeleteIncidentRoleAssignmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteIncidentRoleAssignmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteIncidentRoleAssignmentRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteIncidentRoleAssignmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteIncidentRoleAssignmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest} DeleteIncidentRoleAssignmentRequest
                         */
                        DeleteIncidentRoleAssignmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteIncidentRoleAssignmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest} message DeleteIncidentRoleAssignmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteIncidentRoleAssignmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteIncidentRoleAssignmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteIncidentRoleAssignmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteIncidentRoleAssignmentRequest;
                    })();
    
                    v1alpha2.ListIncidentRoleAssignmentsRequest = (function() {
    
                        /**
                         * Properties of a ListIncidentRoleAssignmentsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListIncidentRoleAssignmentsRequest
                         * @property {string|null} [parent] ListIncidentRoleAssignmentsRequest parent
                         * @property {number|null} [pageSize] ListIncidentRoleAssignmentsRequest pageSize
                         * @property {string|null} [pageToken] ListIncidentRoleAssignmentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListIncidentRoleAssignmentsRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListIncidentRoleAssignmentsRequest.
                         * @implements IListIncidentRoleAssignmentsRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsRequest=} [properties] Properties to set
                         */
                        function ListIncidentRoleAssignmentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListIncidentRoleAssignmentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @instance
                         */
                        ListIncidentRoleAssignmentsRequest.prototype.parent = "";
    
                        /**
                         * ListIncidentRoleAssignmentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @instance
                         */
                        ListIncidentRoleAssignmentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListIncidentRoleAssignmentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @instance
                         */
                        ListIncidentRoleAssignmentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListIncidentRoleAssignmentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest} ListIncidentRoleAssignmentsRequest instance
                         */
                        ListIncidentRoleAssignmentsRequest.create = function create(properties) {
                            return new ListIncidentRoleAssignmentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListIncidentRoleAssignmentsRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsRequest} message ListIncidentRoleAssignmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListIncidentRoleAssignmentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListIncidentRoleAssignmentsRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsRequest} message ListIncidentRoleAssignmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListIncidentRoleAssignmentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListIncidentRoleAssignmentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest} ListIncidentRoleAssignmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListIncidentRoleAssignmentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListIncidentRoleAssignmentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest} ListIncidentRoleAssignmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListIncidentRoleAssignmentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListIncidentRoleAssignmentsRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListIncidentRoleAssignmentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListIncidentRoleAssignmentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest} ListIncidentRoleAssignmentsRequest
                         */
                        ListIncidentRoleAssignmentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListIncidentRoleAssignmentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest} message ListIncidentRoleAssignmentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListIncidentRoleAssignmentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListIncidentRoleAssignmentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListIncidentRoleAssignmentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListIncidentRoleAssignmentsRequest;
                    })();
    
                    v1alpha2.ListIncidentRoleAssignmentsResponse = (function() {
    
                        /**
                         * Properties of a ListIncidentRoleAssignmentsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IListIncidentRoleAssignmentsResponse
                         * @property {Array.<google.cloud.irm.v1alpha2.IIncidentRoleAssignment>|null} [incidentRoleAssignments] ListIncidentRoleAssignmentsResponse incidentRoleAssignments
                         * @property {string|null} [nextPageToken] ListIncidentRoleAssignmentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListIncidentRoleAssignmentsResponse.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ListIncidentRoleAssignmentsResponse.
                         * @implements IListIncidentRoleAssignmentsResponse
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsResponse=} [properties] Properties to set
                         */
                        function ListIncidentRoleAssignmentsResponse(properties) {
                            this.incidentRoleAssignments = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListIncidentRoleAssignmentsResponse incidentRoleAssignments.
                         * @member {Array.<google.cloud.irm.v1alpha2.IIncidentRoleAssignment>} incidentRoleAssignments
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @instance
                         */
                        ListIncidentRoleAssignmentsResponse.prototype.incidentRoleAssignments = $util.emptyArray;
    
                        /**
                         * ListIncidentRoleAssignmentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @instance
                         */
                        ListIncidentRoleAssignmentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListIncidentRoleAssignmentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse} ListIncidentRoleAssignmentsResponse instance
                         */
                        ListIncidentRoleAssignmentsResponse.create = function create(properties) {
                            return new ListIncidentRoleAssignmentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListIncidentRoleAssignmentsResponse message. Does not implicitly {@link google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsResponse} message ListIncidentRoleAssignmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListIncidentRoleAssignmentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.incidentRoleAssignments != null && message.incidentRoleAssignments.length)
                                for (var i = 0; i < message.incidentRoleAssignments.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.encode(message.incidentRoleAssignments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListIncidentRoleAssignmentsResponse message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IListIncidentRoleAssignmentsResponse} message ListIncidentRoleAssignmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListIncidentRoleAssignmentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListIncidentRoleAssignmentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse} ListIncidentRoleAssignmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListIncidentRoleAssignmentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.incidentRoleAssignments && message.incidentRoleAssignments.length))
                                        message.incidentRoleAssignments = [];
                                    message.incidentRoleAssignments.push($root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListIncidentRoleAssignmentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse} ListIncidentRoleAssignmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListIncidentRoleAssignmentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListIncidentRoleAssignmentsResponse message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListIncidentRoleAssignmentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.incidentRoleAssignments != null && message.hasOwnProperty("incidentRoleAssignments")) {
                                if (!Array.isArray(message.incidentRoleAssignments))
                                    return "incidentRoleAssignments: array expected";
                                for (var i = 0; i < message.incidentRoleAssignments.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.verify(message.incidentRoleAssignments[i]);
                                    if (error)
                                        return "incidentRoleAssignments." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListIncidentRoleAssignmentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse} ListIncidentRoleAssignmentsResponse
                         */
                        ListIncidentRoleAssignmentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse();
                            if (object.incidentRoleAssignments) {
                                if (!Array.isArray(object.incidentRoleAssignments))
                                    throw TypeError(".google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse.incidentRoleAssignments: array expected");
                                message.incidentRoleAssignments = [];
                                for (var i = 0; i < object.incidentRoleAssignments.length; ++i) {
                                    if (typeof object.incidentRoleAssignments[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse.incidentRoleAssignments: object expected");
                                    message.incidentRoleAssignments[i] = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.fromObject(object.incidentRoleAssignments[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListIncidentRoleAssignmentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse} message ListIncidentRoleAssignmentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListIncidentRoleAssignmentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.incidentRoleAssignments = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.incidentRoleAssignments && message.incidentRoleAssignments.length) {
                                object.incidentRoleAssignments = [];
                                for (var j = 0; j < message.incidentRoleAssignments.length; ++j)
                                    object.incidentRoleAssignments[j] = $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment.toObject(message.incidentRoleAssignments[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListIncidentRoleAssignmentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListIncidentRoleAssignmentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListIncidentRoleAssignmentsResponse;
                    })();
    
                    v1alpha2.RequestIncidentRoleHandoverRequest = (function() {
    
                        /**
                         * Properties of a RequestIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IRequestIncidentRoleHandoverRequest
                         * @property {string|null} [name] RequestIncidentRoleHandoverRequest name
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [newAssignee] RequestIncidentRoleHandoverRequest newAssignee
                         */
    
                        /**
                         * Constructs a new RequestIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a RequestIncidentRoleHandoverRequest.
                         * @implements IRequestIncidentRoleHandoverRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IRequestIncidentRoleHandoverRequest=} [properties] Properties to set
                         */
                        function RequestIncidentRoleHandoverRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RequestIncidentRoleHandoverRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @instance
                         */
                        RequestIncidentRoleHandoverRequest.prototype.name = "";
    
                        /**
                         * RequestIncidentRoleHandoverRequest newAssignee.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} newAssignee
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @instance
                         */
                        RequestIncidentRoleHandoverRequest.prototype.newAssignee = null;
    
                        /**
                         * Creates a new RequestIncidentRoleHandoverRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IRequestIncidentRoleHandoverRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest} RequestIncidentRoleHandoverRequest instance
                         */
                        RequestIncidentRoleHandoverRequest.create = function create(properties) {
                            return new RequestIncidentRoleHandoverRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RequestIncidentRoleHandoverRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IRequestIncidentRoleHandoverRequest} message RequestIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RequestIncidentRoleHandoverRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.newAssignee, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RequestIncidentRoleHandoverRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IRequestIncidentRoleHandoverRequest} message RequestIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RequestIncidentRoleHandoverRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RequestIncidentRoleHandoverRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest} RequestIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RequestIncidentRoleHandoverRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.newAssignee = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RequestIncidentRoleHandoverRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest} RequestIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RequestIncidentRoleHandoverRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RequestIncidentRoleHandoverRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RequestIncidentRoleHandoverRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.newAssignee);
                                if (error)
                                    return "newAssignee." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RequestIncidentRoleHandoverRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest} RequestIncidentRoleHandoverRequest
                         */
                        RequestIncidentRoleHandoverRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.newAssignee != null) {
                                if (typeof object.newAssignee !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest.newAssignee: object expected");
                                message.newAssignee = $root.google.cloud.irm.v1alpha2.User.fromObject(object.newAssignee);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RequestIncidentRoleHandoverRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest} message RequestIncidentRoleHandoverRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RequestIncidentRoleHandoverRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.newAssignee = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                object.newAssignee = $root.google.cloud.irm.v1alpha2.User.toObject(message.newAssignee, options);
                            return object;
                        };
    
                        /**
                         * Converts this RequestIncidentRoleHandoverRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RequestIncidentRoleHandoverRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return RequestIncidentRoleHandoverRequest;
                    })();
    
                    v1alpha2.ConfirmIncidentRoleHandoverRequest = (function() {
    
                        /**
                         * Properties of a ConfirmIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IConfirmIncidentRoleHandoverRequest
                         * @property {string|null} [name] ConfirmIncidentRoleHandoverRequest name
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [newAssignee] ConfirmIncidentRoleHandoverRequest newAssignee
                         */
    
                        /**
                         * Constructs a new ConfirmIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ConfirmIncidentRoleHandoverRequest.
                         * @implements IConfirmIncidentRoleHandoverRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IConfirmIncidentRoleHandoverRequest=} [properties] Properties to set
                         */
                        function ConfirmIncidentRoleHandoverRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfirmIncidentRoleHandoverRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @instance
                         */
                        ConfirmIncidentRoleHandoverRequest.prototype.name = "";
    
                        /**
                         * ConfirmIncidentRoleHandoverRequest newAssignee.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} newAssignee
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @instance
                         */
                        ConfirmIncidentRoleHandoverRequest.prototype.newAssignee = null;
    
                        /**
                         * Creates a new ConfirmIncidentRoleHandoverRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IConfirmIncidentRoleHandoverRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest} ConfirmIncidentRoleHandoverRequest instance
                         */
                        ConfirmIncidentRoleHandoverRequest.create = function create(properties) {
                            return new ConfirmIncidentRoleHandoverRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfirmIncidentRoleHandoverRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IConfirmIncidentRoleHandoverRequest} message ConfirmIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfirmIncidentRoleHandoverRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.newAssignee, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfirmIncidentRoleHandoverRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IConfirmIncidentRoleHandoverRequest} message ConfirmIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfirmIncidentRoleHandoverRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfirmIncidentRoleHandoverRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest} ConfirmIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfirmIncidentRoleHandoverRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.newAssignee = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfirmIncidentRoleHandoverRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest} ConfirmIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfirmIncidentRoleHandoverRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfirmIncidentRoleHandoverRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfirmIncidentRoleHandoverRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.newAssignee);
                                if (error)
                                    return "newAssignee." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConfirmIncidentRoleHandoverRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest} ConfirmIncidentRoleHandoverRequest
                         */
                        ConfirmIncidentRoleHandoverRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.newAssignee != null) {
                                if (typeof object.newAssignee !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest.newAssignee: object expected");
                                message.newAssignee = $root.google.cloud.irm.v1alpha2.User.fromObject(object.newAssignee);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfirmIncidentRoleHandoverRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest} message ConfirmIncidentRoleHandoverRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfirmIncidentRoleHandoverRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.newAssignee = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                object.newAssignee = $root.google.cloud.irm.v1alpha2.User.toObject(message.newAssignee, options);
                            return object;
                        };
    
                        /**
                         * Converts this ConfirmIncidentRoleHandoverRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfirmIncidentRoleHandoverRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ConfirmIncidentRoleHandoverRequest;
                    })();
    
                    v1alpha2.ForceIncidentRoleHandoverRequest = (function() {
    
                        /**
                         * Properties of a ForceIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IForceIncidentRoleHandoverRequest
                         * @property {string|null} [name] ForceIncidentRoleHandoverRequest name
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [newAssignee] ForceIncidentRoleHandoverRequest newAssignee
                         */
    
                        /**
                         * Constructs a new ForceIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a ForceIncidentRoleHandoverRequest.
                         * @implements IForceIncidentRoleHandoverRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IForceIncidentRoleHandoverRequest=} [properties] Properties to set
                         */
                        function ForceIncidentRoleHandoverRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ForceIncidentRoleHandoverRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @instance
                         */
                        ForceIncidentRoleHandoverRequest.prototype.name = "";
    
                        /**
                         * ForceIncidentRoleHandoverRequest newAssignee.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} newAssignee
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @instance
                         */
                        ForceIncidentRoleHandoverRequest.prototype.newAssignee = null;
    
                        /**
                         * Creates a new ForceIncidentRoleHandoverRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IForceIncidentRoleHandoverRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest} ForceIncidentRoleHandoverRequest instance
                         */
                        ForceIncidentRoleHandoverRequest.create = function create(properties) {
                            return new ForceIncidentRoleHandoverRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ForceIncidentRoleHandoverRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IForceIncidentRoleHandoverRequest} message ForceIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ForceIncidentRoleHandoverRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.newAssignee, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ForceIncidentRoleHandoverRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IForceIncidentRoleHandoverRequest} message ForceIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ForceIncidentRoleHandoverRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ForceIncidentRoleHandoverRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest} ForceIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ForceIncidentRoleHandoverRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.newAssignee = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ForceIncidentRoleHandoverRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest} ForceIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ForceIncidentRoleHandoverRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ForceIncidentRoleHandoverRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ForceIncidentRoleHandoverRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.newAssignee);
                                if (error)
                                    return "newAssignee." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ForceIncidentRoleHandoverRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest} ForceIncidentRoleHandoverRequest
                         */
                        ForceIncidentRoleHandoverRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.newAssignee != null) {
                                if (typeof object.newAssignee !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest.newAssignee: object expected");
                                message.newAssignee = $root.google.cloud.irm.v1alpha2.User.fromObject(object.newAssignee);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ForceIncidentRoleHandoverRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest} message ForceIncidentRoleHandoverRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ForceIncidentRoleHandoverRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.newAssignee = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                object.newAssignee = $root.google.cloud.irm.v1alpha2.User.toObject(message.newAssignee, options);
                            return object;
                        };
    
                        /**
                         * Converts this ForceIncidentRoleHandoverRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ForceIncidentRoleHandoverRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ForceIncidentRoleHandoverRequest;
                    })();
    
                    v1alpha2.CancelIncidentRoleHandoverRequest = (function() {
    
                        /**
                         * Properties of a CancelIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICancelIncidentRoleHandoverRequest
                         * @property {string|null} [name] CancelIncidentRoleHandoverRequest name
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [newAssignee] CancelIncidentRoleHandoverRequest newAssignee
                         */
    
                        /**
                         * Constructs a new CancelIncidentRoleHandoverRequest.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CancelIncidentRoleHandoverRequest.
                         * @implements ICancelIncidentRoleHandoverRequest
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICancelIncidentRoleHandoverRequest=} [properties] Properties to set
                         */
                        function CancelIncidentRoleHandoverRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelIncidentRoleHandoverRequest name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @instance
                         */
                        CancelIncidentRoleHandoverRequest.prototype.name = "";
    
                        /**
                         * CancelIncidentRoleHandoverRequest newAssignee.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} newAssignee
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @instance
                         */
                        CancelIncidentRoleHandoverRequest.prototype.newAssignee = null;
    
                        /**
                         * Creates a new CancelIncidentRoleHandoverRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICancelIncidentRoleHandoverRequest=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest} CancelIncidentRoleHandoverRequest instance
                         */
                        CancelIncidentRoleHandoverRequest.create = function create(properties) {
                            return new CancelIncidentRoleHandoverRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelIncidentRoleHandoverRequest message. Does not implicitly {@link google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICancelIncidentRoleHandoverRequest} message CancelIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelIncidentRoleHandoverRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.newAssignee, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelIncidentRoleHandoverRequest message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICancelIncidentRoleHandoverRequest} message CancelIncidentRoleHandoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelIncidentRoleHandoverRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelIncidentRoleHandoverRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest} CancelIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelIncidentRoleHandoverRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.newAssignee = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelIncidentRoleHandoverRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest} CancelIncidentRoleHandoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelIncidentRoleHandoverRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelIncidentRoleHandoverRequest message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelIncidentRoleHandoverRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.newAssignee);
                                if (error)
                                    return "newAssignee." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CancelIncidentRoleHandoverRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest} CancelIncidentRoleHandoverRequest
                         */
                        CancelIncidentRoleHandoverRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.newAssignee != null) {
                                if (typeof object.newAssignee !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest.newAssignee: object expected");
                                message.newAssignee = $root.google.cloud.irm.v1alpha2.User.fromObject(object.newAssignee);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelIncidentRoleHandoverRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest} message CancelIncidentRoleHandoverRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelIncidentRoleHandoverRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.newAssignee = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.newAssignee != null && message.hasOwnProperty("newAssignee"))
                                object.newAssignee = $root.google.cloud.irm.v1alpha2.User.toObject(message.newAssignee, options);
                            return object;
                        };
    
                        /**
                         * Converts this CancelIncidentRoleHandoverRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelIncidentRoleHandoverRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CancelIncidentRoleHandoverRequest;
                    })();
    
                    v1alpha2.User = (function() {
    
                        /**
                         * Properties of a User.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IUser
                         * @property {string|null} [userId] User userId
                         * @property {string|null} [email] User email
                         */
    
                        /**
                         * Constructs a new User.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a User.
                         * @implements IUser
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IUser=} [properties] Properties to set
                         */
                        function User(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * User userId.
                         * @member {string} userId
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @instance
                         */
                        User.prototype.userId = "";
    
                        /**
                         * User email.
                         * @member {string} email
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @instance
                         */
                        User.prototype.email = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * User user.
                         * @member {"userId"|"email"|undefined} user
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @instance
                         */
                        Object.defineProperty(User.prototype, "user", {
                            get: $util.oneOfGetter($oneOfFields = ["userId", "email"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new User instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUser=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.User} User instance
                         */
                        User.create = function create(properties) {
                            return new User(properties);
                        };
    
                        /**
                         * Encodes the specified User message. Does not implicitly {@link google.cloud.irm.v1alpha2.User.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUser} message User message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        User.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);
                            if (message.email != null && message.hasOwnProperty("email"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.email);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified User message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.User.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IUser} message User message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        User.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a User message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.User} User
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        User.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.User();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.userId = reader.string();
                                    break;
                                case 2:
                                    message.email = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a User message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.User} User
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        User.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a User message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        User.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.userId != null && message.hasOwnProperty("userId")) {
                                properties.user = 1;
                                if (!$util.isString(message.userId))
                                    return "userId: string expected";
                            }
                            if (message.email != null && message.hasOwnProperty("email")) {
                                if (properties.user === 1)
                                    return "user: multiple values";
                                properties.user = 1;
                                if (!$util.isString(message.email))
                                    return "email: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a User message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.User} User
                         */
                        User.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.User)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.User();
                            if (object.userId != null)
                                message.userId = String(object.userId);
                            if (object.email != null)
                                message.email = String(object.email);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a User message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @static
                         * @param {google.cloud.irm.v1alpha2.User} message User
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        User.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.userId != null && message.hasOwnProperty("userId")) {
                                object.userId = message.userId;
                                if (options.oneofs)
                                    object.user = "userId";
                            }
                            if (message.email != null && message.hasOwnProperty("email")) {
                                object.email = message.email;
                                if (options.oneofs)
                                    object.user = "email";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this User to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.User
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        User.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return User;
                    })();
    
                    v1alpha2.Signal = (function() {
    
                        /**
                         * Properties of a Signal.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISignal
                         * @property {string|null} [name] Signal name
                         * @property {string|null} [etag] Signal etag
                         * @property {string|null} [incident] Signal incident
                         * @property {google.protobuf.ITimestamp|null} [createTime] Signal createTime
                         * @property {google.protobuf.ITimestamp|null} [closeTime] Signal closeTime
                         * @property {google.protobuf.ITimestamp|null} [detectTime] Signal detectTime
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [creator] Signal creator
                         * @property {string|null} [title] Signal title
                         * @property {string|null} [contentType] Signal contentType
                         * @property {string|null} [content] Signal content
                         * @property {google.cloud.irm.v1alpha2.Signal.State|null} [signalState] Signal signalState
                         * @property {Array.<google.cloud.irm.v1alpha2.Signal.ISignalArtifact>|null} [signalArtifacts] Signal signalArtifacts
                         */
    
                        /**
                         * Constructs a new Signal.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a Signal.
                         * @implements ISignal
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISignal=} [properties] Properties to set
                         */
                        function Signal(properties) {
                            this.signalArtifacts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Signal name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.name = "";
    
                        /**
                         * Signal etag.
                         * @member {string} etag
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.etag = "";
    
                        /**
                         * Signal incident.
                         * @member {string} incident
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.incident = "";
    
                        /**
                         * Signal createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.createTime = null;
    
                        /**
                         * Signal closeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} closeTime
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.closeTime = null;
    
                        /**
                         * Signal detectTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} detectTime
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.detectTime = null;
    
                        /**
                         * Signal creator.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} creator
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.creator = null;
    
                        /**
                         * Signal title.
                         * @member {string} title
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.title = "";
    
                        /**
                         * Signal contentType.
                         * @member {string} contentType
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.contentType = "";
    
                        /**
                         * Signal content.
                         * @member {string} content
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.content = "";
    
                        /**
                         * Signal signalState.
                         * @member {google.cloud.irm.v1alpha2.Signal.State} signalState
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.signalState = 0;
    
                        /**
                         * Signal signalArtifacts.
                         * @member {Array.<google.cloud.irm.v1alpha2.Signal.ISignalArtifact>} signalArtifacts
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         */
                        Signal.prototype.signalArtifacts = $util.emptyArray;
    
                        /**
                         * Creates a new Signal instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISignal=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Signal} Signal instance
                         */
                        Signal.create = function create(properties) {
                            return new Signal(properties);
                        };
    
                        /**
                         * Encodes the specified Signal message. Does not implicitly {@link google.cloud.irm.v1alpha2.Signal.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISignal} message Signal message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Signal.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.etag);
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.incident);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.creator, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.title != null && message.hasOwnProperty("title"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.title);
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.contentType);
                            if (message.content != null && message.hasOwnProperty("content"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.content);
                            if (message.signalState != null && message.hasOwnProperty("signalState"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.signalState);
                            if (message.closeTime != null && message.hasOwnProperty("closeTime"))
                                $root.google.protobuf.Timestamp.encode(message.closeTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.detectTime != null && message.hasOwnProperty("detectTime"))
                                $root.google.protobuf.Timestamp.encode(message.detectTime, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.signalArtifacts != null && message.signalArtifacts.length)
                                for (var i = 0; i < message.signalArtifacts.length; ++i)
                                    $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact.encode(message.signalArtifacts[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Signal message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Signal.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISignal} message Signal message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Signal.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Signal message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Signal} Signal
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Signal.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Signal();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.etag = reader.string();
                                    break;
                                case 3:
                                    message.incident = reader.string();
                                    break;
                                case 4:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.closeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 15:
                                    message.detectTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.creator = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.title = reader.string();
                                    break;
                                case 7:
                                    message.contentType = reader.string();
                                    break;
                                case 8:
                                    message.content = reader.string();
                                    break;
                                case 9:
                                    message.signalState = reader.int32();
                                    break;
                                case 16:
                                    if (!(message.signalArtifacts && message.signalArtifacts.length))
                                        message.signalArtifacts = [];
                                    message.signalArtifacts.push($root.google.cloud.irm.v1alpha2.Signal.SignalArtifact.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Signal message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Signal} Signal
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Signal.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Signal message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Signal.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                if (!$util.isString(message.incident))
                                    return "incident: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.closeTime != null && message.hasOwnProperty("closeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.closeTime);
                                if (error)
                                    return "closeTime." + error;
                            }
                            if (message.detectTime != null && message.hasOwnProperty("detectTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.detectTime);
                                if (error)
                                    return "detectTime." + error;
                            }
                            if (message.creator != null && message.hasOwnProperty("creator")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.creator);
                                if (error)
                                    return "creator." + error;
                            }
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                if (!$util.isString(message.contentType))
                                    return "contentType: string expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.signalState != null && message.hasOwnProperty("signalState"))
                                switch (message.signalState) {
                                default:
                                    return "signalState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.signalArtifacts != null && message.hasOwnProperty("signalArtifacts")) {
                                if (!Array.isArray(message.signalArtifacts))
                                    return "signalArtifacts: array expected";
                                for (var i = 0; i < message.signalArtifacts.length; ++i) {
                                    var error = $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact.verify(message.signalArtifacts[i]);
                                    if (error)
                                        return "signalArtifacts." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Signal message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Signal} Signal
                         */
                        Signal.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Signal)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Signal();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.incident != null)
                                message.incident = String(object.incident);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Signal.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.closeTime != null) {
                                if (typeof object.closeTime !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Signal.closeTime: object expected");
                                message.closeTime = $root.google.protobuf.Timestamp.fromObject(object.closeTime);
                            }
                            if (object.detectTime != null) {
                                if (typeof object.detectTime !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Signal.detectTime: object expected");
                                message.detectTime = $root.google.protobuf.Timestamp.fromObject(object.detectTime);
                            }
                            if (object.creator != null) {
                                if (typeof object.creator !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Signal.creator: object expected");
                                message.creator = $root.google.cloud.irm.v1alpha2.User.fromObject(object.creator);
                            }
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.contentType != null)
                                message.contentType = String(object.contentType);
                            if (object.content != null)
                                message.content = String(object.content);
                            switch (object.signalState) {
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.signalState = 0;
                                break;
                            case "STATE_OPEN":
                            case 1:
                                message.signalState = 1;
                                break;
                            case "STATE_CLOSED":
                            case 2:
                                message.signalState = 2;
                                break;
                            }
                            if (object.signalArtifacts) {
                                if (!Array.isArray(object.signalArtifacts))
                                    throw TypeError(".google.cloud.irm.v1alpha2.Signal.signalArtifacts: array expected");
                                message.signalArtifacts = [];
                                for (var i = 0; i < object.signalArtifacts.length; ++i) {
                                    if (typeof object.signalArtifacts[i] !== "object")
                                        throw TypeError(".google.cloud.irm.v1alpha2.Signal.signalArtifacts: object expected");
                                    message.signalArtifacts[i] = $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact.fromObject(object.signalArtifacts[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Signal message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Signal} message Signal
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Signal.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.signalArtifacts = [];
                            if (options.defaults) {
                                object.name = "";
                                object.etag = "";
                                object.incident = "";
                                object.createTime = null;
                                object.creator = null;
                                object.title = "";
                                object.contentType = "";
                                object.content = "";
                                object.signalState = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.closeTime = null;
                                object.detectTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.incident != null && message.hasOwnProperty("incident"))
                                object.incident = message.incident;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = $root.google.cloud.irm.v1alpha2.User.toObject(message.creator, options);
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                object.contentType = message.contentType;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.signalState != null && message.hasOwnProperty("signalState"))
                                object.signalState = options.enums === String ? $root.google.cloud.irm.v1alpha2.Signal.State[message.signalState] : message.signalState;
                            if (message.closeTime != null && message.hasOwnProperty("closeTime"))
                                object.closeTime = $root.google.protobuf.Timestamp.toObject(message.closeTime, options);
                            if (message.detectTime != null && message.hasOwnProperty("detectTime"))
                                object.detectTime = $root.google.protobuf.Timestamp.toObject(message.detectTime, options);
                            if (message.signalArtifacts && message.signalArtifacts.length) {
                                object.signalArtifacts = [];
                                for (var j = 0; j < message.signalArtifacts.length; ++j)
                                    object.signalArtifacts[j] = $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact.toObject(message.signalArtifacts[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Signal to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Signal
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Signal.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        Signal.SignalArtifact = (function() {
    
                            /**
                             * Properties of a SignalArtifact.
                             * @memberof google.cloud.irm.v1alpha2.Signal
                             * @interface ISignalArtifact
                             * @property {string|null} [userType] SignalArtifact userType
                             * @property {string|null} [uri] SignalArtifact uri
                             */
    
                            /**
                             * Constructs a new SignalArtifact.
                             * @memberof google.cloud.irm.v1alpha2.Signal
                             * @classdesc Represents a SignalArtifact.
                             * @implements ISignalArtifact
                             * @constructor
                             * @param {google.cloud.irm.v1alpha2.Signal.ISignalArtifact=} [properties] Properties to set
                             */
                            function SignalArtifact(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SignalArtifact userType.
                             * @member {string} userType
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @instance
                             */
                            SignalArtifact.prototype.userType = "";
    
                            /**
                             * SignalArtifact uri.
                             * @member {string} uri
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @instance
                             */
                            SignalArtifact.prototype.uri = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * SignalArtifact artifactType.
                             * @member {"userType"|undefined} artifactType
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @instance
                             */
                            Object.defineProperty(SignalArtifact.prototype, "artifactType", {
                                get: $util.oneOfGetter($oneOfFields = ["userType"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new SignalArtifact instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Signal.ISignalArtifact=} [properties] Properties to set
                             * @returns {google.cloud.irm.v1alpha2.Signal.SignalArtifact} SignalArtifact instance
                             */
                            SignalArtifact.create = function create(properties) {
                                return new SignalArtifact(properties);
                            };
    
                            /**
                             * Encodes the specified SignalArtifact message. Does not implicitly {@link google.cloud.irm.v1alpha2.Signal.SignalArtifact.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Signal.ISignalArtifact} message SignalArtifact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SignalArtifact.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.userType != null && message.hasOwnProperty("userType"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.userType);
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SignalArtifact message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Signal.SignalArtifact.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Signal.ISignalArtifact} message SignalArtifact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SignalArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SignalArtifact message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.irm.v1alpha2.Signal.SignalArtifact} SignalArtifact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SignalArtifact.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2:
                                        message.userType = reader.string();
                                        break;
                                    case 3:
                                        message.uri = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SignalArtifact message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.irm.v1alpha2.Signal.SignalArtifact} SignalArtifact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SignalArtifact.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SignalArtifact message.
                             * @function verify
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SignalArtifact.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.userType != null && message.hasOwnProperty("userType")) {
                                    properties.artifactType = 1;
                                    if (!$util.isString(message.userType))
                                        return "userType: string expected";
                                }
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    if (!$util.isString(message.uri))
                                        return "uri: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SignalArtifact message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.irm.v1alpha2.Signal.SignalArtifact} SignalArtifact
                             */
                            SignalArtifact.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact)
                                    return object;
                                var message = new $root.google.cloud.irm.v1alpha2.Signal.SignalArtifact();
                                if (object.userType != null)
                                    message.userType = String(object.userType);
                                if (object.uri != null)
                                    message.uri = String(object.uri);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SignalArtifact message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Signal.SignalArtifact} message SignalArtifact
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SignalArtifact.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.uri = "";
                                if (message.userType != null && message.hasOwnProperty("userType")) {
                                    object.userType = message.userType;
                                    if (options.oneofs)
                                        object.artifactType = "userType";
                                }
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    object.uri = message.uri;
                                return object;
                            };
    
                            /**
                             * Converts this SignalArtifact to JSON.
                             * @function toJSON
                             * @memberof google.cloud.irm.v1alpha2.Signal.SignalArtifact
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SignalArtifact.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SignalArtifact;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.irm.v1alpha2.Signal.State
                         * @enum {string}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} STATE_OPEN=1 STATE_OPEN value
                         * @property {number} STATE_CLOSED=2 STATE_CLOSED value
                         */
                        Signal.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STATE_OPEN"] = 1;
                            values[valuesById[2] = "STATE_CLOSED"] = 2;
                            return values;
                        })();
    
                        return Signal;
                    })();
    
                    v1alpha2.Annotation = (function() {
    
                        /**
                         * Properties of an Annotation.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IAnnotation
                         * @property {string|null} [name] Annotation name
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [author] Annotation author
                         * @property {google.protobuf.ITimestamp|null} [createTime] Annotation createTime
                         * @property {string|null} [content] Annotation content
                         * @property {string|null} [contentType] Annotation contentType
                         */
    
                        /**
                         * Constructs a new Annotation.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an Annotation.
                         * @implements IAnnotation
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IAnnotation=} [properties] Properties to set
                         */
                        function Annotation(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Annotation name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @instance
                         */
                        Annotation.prototype.name = "";
    
                        /**
                         * Annotation author.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} author
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @instance
                         */
                        Annotation.prototype.author = null;
    
                        /**
                         * Annotation createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @instance
                         */
                        Annotation.prototype.createTime = null;
    
                        /**
                         * Annotation content.
                         * @member {string} content
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @instance
                         */
                        Annotation.prototype.content = "";
    
                        /**
                         * Annotation contentType.
                         * @member {string} contentType
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @instance
                         */
                        Annotation.prototype.contentType = "";
    
                        /**
                         * Creates a new Annotation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IAnnotation=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Annotation} Annotation instance
                         */
                        Annotation.create = function create(properties) {
                            return new Annotation(properties);
                        };
    
                        /**
                         * Encodes the specified Annotation message. Does not implicitly {@link google.cloud.irm.v1alpha2.Annotation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IAnnotation} message Annotation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Annotation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.author != null && message.hasOwnProperty("author"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.author, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.content != null && message.hasOwnProperty("content"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.content);
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.contentType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Annotation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IAnnotation} message Annotation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Annotation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Annotation} Annotation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Annotation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Annotation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.author = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.content = reader.string();
                                    break;
                                case 5:
                                    message.contentType = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Annotation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Annotation} Annotation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Annotation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Annotation message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Annotation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.author != null && message.hasOwnProperty("author")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.author);
                                if (error)
                                    return "author." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                if (!$util.isString(message.contentType))
                                    return "contentType: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Annotation} Annotation
                         */
                        Annotation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Annotation)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Annotation();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.author != null) {
                                if (typeof object.author !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Annotation.author: object expected");
                                message.author = $root.google.cloud.irm.v1alpha2.User.fromObject(object.author);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Annotation.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.content != null)
                                message.content = String(object.content);
                            if (object.contentType != null)
                                message.contentType = String(object.contentType);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Annotation} message Annotation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Annotation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.author = null;
                                object.createTime = null;
                                object.content = "";
                                object.contentType = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.author != null && message.hasOwnProperty("author"))
                                object.author = $root.google.cloud.irm.v1alpha2.User.toObject(message.author, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                object.contentType = message.contentType;
                            return object;
                        };
    
                        /**
                         * Converts this Annotation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Annotation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Annotation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Annotation;
                    })();
    
                    v1alpha2.Tag = (function() {
    
                        /**
                         * Properties of a Tag.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ITag
                         * @property {string|null} [name] Tag name
                         * @property {string|null} [displayName] Tag displayName
                         */
    
                        /**
                         * Constructs a new Tag.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a Tag.
                         * @implements ITag
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ITag=} [properties] Properties to set
                         */
                        function Tag(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Tag name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @instance
                         */
                        Tag.prototype.name = "";
    
                        /**
                         * Tag displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @instance
                         */
                        Tag.prototype.displayName = "";
    
                        /**
                         * Creates a new Tag instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ITag=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Tag} Tag instance
                         */
                        Tag.create = function create(properties) {
                            return new Tag(properties);
                        };
    
                        /**
                         * Encodes the specified Tag message. Does not implicitly {@link google.cloud.irm.v1alpha2.Tag.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ITag} message Tag message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tag.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Tag message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Tag.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ITag} message Tag message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tag.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Tag message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Tag} Tag
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tag.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Tag();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.displayName = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Tag message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Tag} Tag
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tag.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Tag message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Tag.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Tag message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Tag} Tag
                         */
                        Tag.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Tag)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Tag();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Tag message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Tag} message Tag
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Tag.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            return object;
                        };
    
                        /**
                         * Converts this Tag to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Tag
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Tag.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Tag;
                    })();
    
                    v1alpha2.Synopsis = (function() {
    
                        /**
                         * Properties of a Synopsis.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISynopsis
                         * @property {string|null} [contentType] Synopsis contentType
                         * @property {string|null} [content] Synopsis content
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Synopsis updateTime
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [author] Synopsis author
                         */
    
                        /**
                         * Constructs a new Synopsis.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a Synopsis.
                         * @implements ISynopsis
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISynopsis=} [properties] Properties to set
                         */
                        function Synopsis(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Synopsis contentType.
                         * @member {string} contentType
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @instance
                         */
                        Synopsis.prototype.contentType = "";
    
                        /**
                         * Synopsis content.
                         * @member {string} content
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @instance
                         */
                        Synopsis.prototype.content = "";
    
                        /**
                         * Synopsis updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @instance
                         */
                        Synopsis.prototype.updateTime = null;
    
                        /**
                         * Synopsis author.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} author
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @instance
                         */
                        Synopsis.prototype.author = null;
    
                        /**
                         * Creates a new Synopsis instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISynopsis=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Synopsis} Synopsis instance
                         */
                        Synopsis.create = function create(properties) {
                            return new Synopsis(properties);
                        };
    
                        /**
                         * Encodes the specified Synopsis message. Does not implicitly {@link google.cloud.irm.v1alpha2.Synopsis.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISynopsis} message Synopsis message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Synopsis.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.contentType);
                            if (message.content != null && message.hasOwnProperty("content"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.author != null && message.hasOwnProperty("author"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.author, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Synopsis message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Synopsis.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISynopsis} message Synopsis message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Synopsis.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Synopsis message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Synopsis} Synopsis
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Synopsis.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Synopsis();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.contentType = reader.string();
                                    break;
                                case 2:
                                    message.content = reader.string();
                                    break;
                                case 3:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.author = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Synopsis message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Synopsis} Synopsis
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Synopsis.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Synopsis message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Synopsis.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                if (!$util.isString(message.contentType))
                                    return "contentType: string expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.author != null && message.hasOwnProperty("author")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.author);
                                if (error)
                                    return "author." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Synopsis message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Synopsis} Synopsis
                         */
                        Synopsis.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Synopsis)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Synopsis();
                            if (object.contentType != null)
                                message.contentType = String(object.contentType);
                            if (object.content != null)
                                message.content = String(object.content);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Synopsis.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.author != null) {
                                if (typeof object.author !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Synopsis.author: object expected");
                                message.author = $root.google.cloud.irm.v1alpha2.User.fromObject(object.author);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Synopsis message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Synopsis} message Synopsis
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Synopsis.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.contentType = "";
                                object.content = "";
                                object.updateTime = null;
                                object.author = null;
                            }
                            if (message.contentType != null && message.hasOwnProperty("contentType"))
                                object.contentType = message.contentType;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.author != null && message.hasOwnProperty("author"))
                                object.author = $root.google.cloud.irm.v1alpha2.User.toObject(message.author, options);
                            return object;
                        };
    
                        /**
                         * Converts this Synopsis to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Synopsis
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Synopsis.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Synopsis;
                    })();
    
                    v1alpha2.Incident = (function() {
    
                        /**
                         * Properties of an Incident.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IIncident
                         * @property {string|null} [name] Incident name
                         * @property {string|null} [title] Incident title
                         * @property {google.cloud.irm.v1alpha2.Incident.EscalationLevel|null} [escalationLevel] Incident escalationLevel
                         * @property {string|null} [etag] Incident etag
                         * @property {google.cloud.irm.v1alpha2.Incident.Severity|null} [severity] Incident severity
                         * @property {google.cloud.irm.v1alpha2.Incident.Stage|null} [stage] Incident stage
                         * @property {string|null} [duplicateIncident] Incident duplicateIncident
                         * @property {google.protobuf.ITimestamp|null} [startTime] Incident startTime
                         * @property {google.cloud.irm.v1alpha2.ISynopsis|null} [synopsis] Incident synopsis
                         * @property {google.cloud.irm.v1alpha2.Incident.ICommunicationVenue|null} [communicationVenue] Incident communicationVenue
                         */
    
                        /**
                         * Constructs a new Incident.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an Incident.
                         * @implements IIncident
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IIncident=} [properties] Properties to set
                         */
                        function Incident(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Incident name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.name = "";
    
                        /**
                         * Incident title.
                         * @member {string} title
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.title = "";
    
                        /**
                         * Incident escalationLevel.
                         * @member {google.cloud.irm.v1alpha2.Incident.EscalationLevel} escalationLevel
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.escalationLevel = 0;
    
                        /**
                         * Incident etag.
                         * @member {string} etag
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.etag = "";
    
                        /**
                         * Incident severity.
                         * @member {google.cloud.irm.v1alpha2.Incident.Severity} severity
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.severity = 0;
    
                        /**
                         * Incident stage.
                         * @member {google.cloud.irm.v1alpha2.Incident.Stage} stage
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.stage = 0;
    
                        /**
                         * Incident duplicateIncident.
                         * @member {string} duplicateIncident
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.duplicateIncident = "";
    
                        /**
                         * Incident startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.startTime = null;
    
                        /**
                         * Incident synopsis.
                         * @member {google.cloud.irm.v1alpha2.ISynopsis|null|undefined} synopsis
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.synopsis = null;
    
                        /**
                         * Incident communicationVenue.
                         * @member {google.cloud.irm.v1alpha2.Incident.ICommunicationVenue|null|undefined} communicationVenue
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         */
                        Incident.prototype.communicationVenue = null;
    
                        /**
                         * Creates a new Incident instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncident=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Incident} Incident instance
                         */
                        Incident.create = function create(properties) {
                            return new Incident(properties);
                        };
    
                        /**
                         * Encodes the specified Incident message. Does not implicitly {@link google.cloud.irm.v1alpha2.Incident.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncident} message Incident message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Incident.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.title != null && message.hasOwnProperty("title"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                            if (message.escalationLevel != null && message.hasOwnProperty("escalationLevel"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.escalationLevel);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.etag);
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.severity);
                            if (message.stage != null && message.hasOwnProperty("stage"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.stage);
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.synopsis != null && message.hasOwnProperty("synopsis"))
                                $root.google.cloud.irm.v1alpha2.Synopsis.encode(message.synopsis, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.duplicateIncident != null && message.hasOwnProperty("duplicateIncident"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.duplicateIncident);
                            if (message.communicationVenue != null && message.hasOwnProperty("communicationVenue"))
                                $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue.encode(message.communicationVenue, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Incident message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Incident.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncident} message Incident message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Incident.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Incident message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Incident} Incident
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Incident.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Incident();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.title = reader.string();
                                    break;
                                case 3:
                                    message.escalationLevel = reader.int32();
                                    break;
                                case 4:
                                    message.etag = reader.string();
                                    break;
                                case 5:
                                    message.severity = reader.int32();
                                    break;
                                case 6:
                                    message.stage = reader.int32();
                                    break;
                                case 9:
                                    message.duplicateIncident = reader.string();
                                    break;
                                case 7:
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.synopsis = $root.google.cloud.irm.v1alpha2.Synopsis.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.communicationVenue = $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Incident message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Incident} Incident
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Incident.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Incident message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Incident.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.escalationLevel != null && message.hasOwnProperty("escalationLevel"))
                                switch (message.escalationLevel) {
                                default:
                                    return "escalationLevel: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                switch (message.severity) {
                                default:
                                    return "severity: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.stage != null && message.hasOwnProperty("stage"))
                                switch (message.stage) {
                                default:
                                    return "stage: enum value expected";
                                case 0:
                                case 4:
                                case 1:
                                case 2:
                                case 3:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.duplicateIncident != null && message.hasOwnProperty("duplicateIncident"))
                                if (!$util.isString(message.duplicateIncident))
                                    return "duplicateIncident: string expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.synopsis != null && message.hasOwnProperty("synopsis")) {
                                var error = $root.google.cloud.irm.v1alpha2.Synopsis.verify(message.synopsis);
                                if (error)
                                    return "synopsis." + error;
                            }
                            if (message.communicationVenue != null && message.hasOwnProperty("communicationVenue")) {
                                var error = $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue.verify(message.communicationVenue);
                                if (error)
                                    return "communicationVenue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Incident message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Incident} Incident
                         */
                        Incident.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Incident)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Incident();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.title != null)
                                message.title = String(object.title);
                            switch (object.escalationLevel) {
                            case "ESCALATION_LEVEL_UNSPECIFIED":
                            case 0:
                                message.escalationLevel = 0;
                                break;
                            case "ESCALATION_LEVEL_ORGANIZATION":
                            case 1:
                                message.escalationLevel = 1;
                                break;
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            switch (object.severity) {
                            case "SEVERITY_UNSPECIFIED":
                            case 0:
                                message.severity = 0;
                                break;
                            case "SEVERITY_HUGE":
                            case 1:
                                message.severity = 1;
                                break;
                            case "SEVERITY_MAJOR":
                            case 2:
                                message.severity = 2;
                                break;
                            case "SEVERITY_MEDIUM":
                            case 3:
                                message.severity = 3;
                                break;
                            case "SEVERITY_MINOR":
                            case 4:
                                message.severity = 4;
                                break;
                            case "SEVERITY_NEGLIGIBLE":
                            case 5:
                                message.severity = 5;
                                break;
                            }
                            switch (object.stage) {
                            case "STAGE_UNSPECIFIED":
                            case 0:
                                message.stage = 0;
                                break;
                            case "STAGE_DETECTED":
                            case 4:
                                message.stage = 4;
                                break;
                            case "STAGE_TRIAGED":
                            case 1:
                                message.stage = 1;
                                break;
                            case "STAGE_MITIGATED":
                            case 2:
                                message.stage = 2;
                                break;
                            case "STAGE_RESOLVED":
                            case 3:
                                message.stage = 3;
                                break;
                            case "STAGE_DOCUMENTED":
                            case 5:
                                message.stage = 5;
                                break;
                            case "STAGE_DUPLICATE":
                            case 6:
                                message.stage = 6;
                                break;
                            }
                            if (object.duplicateIncident != null)
                                message.duplicateIncident = String(object.duplicateIncident);
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Incident.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.synopsis != null) {
                                if (typeof object.synopsis !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Incident.synopsis: object expected");
                                message.synopsis = $root.google.cloud.irm.v1alpha2.Synopsis.fromObject(object.synopsis);
                            }
                            if (object.communicationVenue != null) {
                                if (typeof object.communicationVenue !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Incident.communicationVenue: object expected");
                                message.communicationVenue = $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue.fromObject(object.communicationVenue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Incident message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Incident} message Incident
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Incident.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.title = "";
                                object.escalationLevel = options.enums === String ? "ESCALATION_LEVEL_UNSPECIFIED" : 0;
                                object.etag = "";
                                object.severity = options.enums === String ? "SEVERITY_UNSPECIFIED" : 0;
                                object.stage = options.enums === String ? "STAGE_UNSPECIFIED" : 0;
                                object.startTime = null;
                                object.synopsis = null;
                                object.duplicateIncident = "";
                                object.communicationVenue = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.escalationLevel != null && message.hasOwnProperty("escalationLevel"))
                                object.escalationLevel = options.enums === String ? $root.google.cloud.irm.v1alpha2.Incident.EscalationLevel[message.escalationLevel] : message.escalationLevel;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                object.severity = options.enums === String ? $root.google.cloud.irm.v1alpha2.Incident.Severity[message.severity] : message.severity;
                            if (message.stage != null && message.hasOwnProperty("stage"))
                                object.stage = options.enums === String ? $root.google.cloud.irm.v1alpha2.Incident.Stage[message.stage] : message.stage;
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.synopsis != null && message.hasOwnProperty("synopsis"))
                                object.synopsis = $root.google.cloud.irm.v1alpha2.Synopsis.toObject(message.synopsis, options);
                            if (message.duplicateIncident != null && message.hasOwnProperty("duplicateIncident"))
                                object.duplicateIncident = message.duplicateIncident;
                            if (message.communicationVenue != null && message.hasOwnProperty("communicationVenue"))
                                object.communicationVenue = $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue.toObject(message.communicationVenue, options);
                            return object;
                        };
    
                        /**
                         * Converts this Incident to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Incident
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Incident.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        Incident.CommunicationVenue = (function() {
    
                            /**
                             * Properties of a CommunicationVenue.
                             * @memberof google.cloud.irm.v1alpha2.Incident
                             * @interface ICommunicationVenue
                             * @property {string|null} [uri] CommunicationVenue uri
                             * @property {string|null} [displayName] CommunicationVenue displayName
                             * @property {google.cloud.irm.v1alpha2.Incident.CommunicationVenue.ChannelType|null} [channelType] CommunicationVenue channelType
                             */
    
                            /**
                             * Constructs a new CommunicationVenue.
                             * @memberof google.cloud.irm.v1alpha2.Incident
                             * @classdesc Represents a CommunicationVenue.
                             * @implements ICommunicationVenue
                             * @constructor
                             * @param {google.cloud.irm.v1alpha2.Incident.ICommunicationVenue=} [properties] Properties to set
                             */
                            function CommunicationVenue(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CommunicationVenue uri.
                             * @member {string} uri
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @instance
                             */
                            CommunicationVenue.prototype.uri = "";
    
                            /**
                             * CommunicationVenue displayName.
                             * @member {string} displayName
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @instance
                             */
                            CommunicationVenue.prototype.displayName = "";
    
                            /**
                             * CommunicationVenue channelType.
                             * @member {google.cloud.irm.v1alpha2.Incident.CommunicationVenue.ChannelType} channelType
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @instance
                             */
                            CommunicationVenue.prototype.channelType = 0;
    
                            /**
                             * Creates a new CommunicationVenue instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Incident.ICommunicationVenue=} [properties] Properties to set
                             * @returns {google.cloud.irm.v1alpha2.Incident.CommunicationVenue} CommunicationVenue instance
                             */
                            CommunicationVenue.create = function create(properties) {
                                return new CommunicationVenue(properties);
                            };
    
                            /**
                             * Encodes the specified CommunicationVenue message. Does not implicitly {@link google.cloud.irm.v1alpha2.Incident.CommunicationVenue.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Incident.ICommunicationVenue} message CommunicationVenue message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CommunicationVenue.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                                if (message.channelType != null && message.hasOwnProperty("channelType"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.channelType);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CommunicationVenue message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Incident.CommunicationVenue.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Incident.ICommunicationVenue} message CommunicationVenue message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CommunicationVenue.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CommunicationVenue message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.irm.v1alpha2.Incident.CommunicationVenue} CommunicationVenue
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CommunicationVenue.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.uri = reader.string();
                                        break;
                                    case 2:
                                        message.displayName = reader.string();
                                        break;
                                    case 3:
                                        message.channelType = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CommunicationVenue message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.irm.v1alpha2.Incident.CommunicationVenue} CommunicationVenue
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CommunicationVenue.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CommunicationVenue message.
                             * @function verify
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CommunicationVenue.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    if (!$util.isString(message.uri))
                                        return "uri: string expected";
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    if (!$util.isString(message.displayName))
                                        return "displayName: string expected";
                                if (message.channelType != null && message.hasOwnProperty("channelType"))
                                    switch (message.channelType) {
                                    default:
                                        return "channelType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 5:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a CommunicationVenue message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.irm.v1alpha2.Incident.CommunicationVenue} CommunicationVenue
                             */
                            CommunicationVenue.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue)
                                    return object;
                                var message = new $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue();
                                if (object.uri != null)
                                    message.uri = String(object.uri);
                                if (object.displayName != null)
                                    message.displayName = String(object.displayName);
                                switch (object.channelType) {
                                case "CHANNEL_TYPE_UNSPECIFIED":
                                case 0:
                                    message.channelType = 0;
                                    break;
                                case "CHANNEL_TYPE_URI":
                                case 1:
                                    message.channelType = 1;
                                    break;
                                case "CHANNEL_TYPE_SLACK":
                                case 5:
                                    message.channelType = 5;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CommunicationVenue message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @static
                             * @param {google.cloud.irm.v1alpha2.Incident.CommunicationVenue} message CommunicationVenue
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CommunicationVenue.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.uri = "";
                                    object.displayName = "";
                                    object.channelType = options.enums === String ? "CHANNEL_TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    object.uri = message.uri;
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    object.displayName = message.displayName;
                                if (message.channelType != null && message.hasOwnProperty("channelType"))
                                    object.channelType = options.enums === String ? $root.google.cloud.irm.v1alpha2.Incident.CommunicationVenue.ChannelType[message.channelType] : message.channelType;
                                return object;
                            };
    
                            /**
                             * Converts this CommunicationVenue to JSON.
                             * @function toJSON
                             * @memberof google.cloud.irm.v1alpha2.Incident.CommunicationVenue
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CommunicationVenue.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * ChannelType enum.
                             * @name google.cloud.irm.v1alpha2.Incident.CommunicationVenue.ChannelType
                             * @enum {string}
                             * @property {number} CHANNEL_TYPE_UNSPECIFIED=0 CHANNEL_TYPE_UNSPECIFIED value
                             * @property {number} CHANNEL_TYPE_URI=1 CHANNEL_TYPE_URI value
                             * @property {number} CHANNEL_TYPE_SLACK=5 CHANNEL_TYPE_SLACK value
                             */
                            CommunicationVenue.ChannelType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "CHANNEL_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "CHANNEL_TYPE_URI"] = 1;
                                values[valuesById[5] = "CHANNEL_TYPE_SLACK"] = 5;
                                return values;
                            })();
    
                            return CommunicationVenue;
                        })();
    
                        /**
                         * EscalationLevel enum.
                         * @name google.cloud.irm.v1alpha2.Incident.EscalationLevel
                         * @enum {string}
                         * @property {number} ESCALATION_LEVEL_UNSPECIFIED=0 ESCALATION_LEVEL_UNSPECIFIED value
                         * @property {number} ESCALATION_LEVEL_ORGANIZATION=1 ESCALATION_LEVEL_ORGANIZATION value
                         */
                        Incident.EscalationLevel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ESCALATION_LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ESCALATION_LEVEL_ORGANIZATION"] = 1;
                            return values;
                        })();
    
                        /**
                         * Severity enum.
                         * @name google.cloud.irm.v1alpha2.Incident.Severity
                         * @enum {string}
                         * @property {number} SEVERITY_UNSPECIFIED=0 SEVERITY_UNSPECIFIED value
                         * @property {number} SEVERITY_HUGE=1 SEVERITY_HUGE value
                         * @property {number} SEVERITY_MAJOR=2 SEVERITY_MAJOR value
                         * @property {number} SEVERITY_MEDIUM=3 SEVERITY_MEDIUM value
                         * @property {number} SEVERITY_MINOR=4 SEVERITY_MINOR value
                         * @property {number} SEVERITY_NEGLIGIBLE=5 SEVERITY_NEGLIGIBLE value
                         */
                        Incident.Severity = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SEVERITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SEVERITY_HUGE"] = 1;
                            values[valuesById[2] = "SEVERITY_MAJOR"] = 2;
                            values[valuesById[3] = "SEVERITY_MEDIUM"] = 3;
                            values[valuesById[4] = "SEVERITY_MINOR"] = 4;
                            values[valuesById[5] = "SEVERITY_NEGLIGIBLE"] = 5;
                            return values;
                        })();
    
                        /**
                         * Stage enum.
                         * @name google.cloud.irm.v1alpha2.Incident.Stage
                         * @enum {string}
                         * @property {number} STAGE_UNSPECIFIED=0 STAGE_UNSPECIFIED value
                         * @property {number} STAGE_DETECTED=4 STAGE_DETECTED value
                         * @property {number} STAGE_TRIAGED=1 STAGE_TRIAGED value
                         * @property {number} STAGE_MITIGATED=2 STAGE_MITIGATED value
                         * @property {number} STAGE_RESOLVED=3 STAGE_RESOLVED value
                         * @property {number} STAGE_DOCUMENTED=5 STAGE_DOCUMENTED value
                         * @property {number} STAGE_DUPLICATE=6 STAGE_DUPLICATE value
                         */
                        Incident.Stage = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STAGE_UNSPECIFIED"] = 0;
                            values[valuesById[4] = "STAGE_DETECTED"] = 4;
                            values[valuesById[1] = "STAGE_TRIAGED"] = 1;
                            values[valuesById[2] = "STAGE_MITIGATED"] = 2;
                            values[valuesById[3] = "STAGE_RESOLVED"] = 3;
                            values[valuesById[5] = "STAGE_DOCUMENTED"] = 5;
                            values[valuesById[6] = "STAGE_DUPLICATE"] = 6;
                            return values;
                        })();
    
                        return Incident;
                    })();
    
                    v1alpha2.IncidentRole = (function() {
    
                        /**
                         * Properties of an IncidentRole.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IIncidentRole
                         * @property {google.cloud.irm.v1alpha2.IncidentRole.Type|null} [type] IncidentRole type
                         * @property {string|null} [title] IncidentRole title
                         * @property {string|null} [description] IncidentRole description
                         */
    
                        /**
                         * Constructs a new IncidentRole.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an IncidentRole.
                         * @implements IIncidentRole
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IIncidentRole=} [properties] Properties to set
                         */
                        function IncidentRole(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IncidentRole type.
                         * @member {google.cloud.irm.v1alpha2.IncidentRole.Type} type
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @instance
                         */
                        IncidentRole.prototype.type = 0;
    
                        /**
                         * IncidentRole title.
                         * @member {string} title
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @instance
                         */
                        IncidentRole.prototype.title = "";
    
                        /**
                         * IncidentRole description.
                         * @member {string} description
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @instance
                         */
                        IncidentRole.prototype.description = "";
    
                        /**
                         * Creates a new IncidentRole instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncidentRole=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.IncidentRole} IncidentRole instance
                         */
                        IncidentRole.create = function create(properties) {
                            return new IncidentRole(properties);
                        };
    
                        /**
                         * Encodes the specified IncidentRole message. Does not implicitly {@link google.cloud.irm.v1alpha2.IncidentRole.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncidentRole} message IncidentRole message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IncidentRole.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.title != null && message.hasOwnProperty("title"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                            if (message.description != null && message.hasOwnProperty("description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IncidentRole message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.IncidentRole.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncidentRole} message IncidentRole message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IncidentRole.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IncidentRole message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.IncidentRole} IncidentRole
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IncidentRole.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.IncidentRole();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = reader.int32();
                                    break;
                                case 2:
                                    message.title = reader.string();
                                    break;
                                case 3:
                                    message.description = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IncidentRole message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.IncidentRole} IncidentRole
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IncidentRole.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IncidentRole message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IncidentRole.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an IncidentRole message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.IncidentRole} IncidentRole
                         */
                        IncidentRole.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.IncidentRole)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.IncidentRole();
                            switch (object.type) {
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_INCIDENT_COMMANDER":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_COMMUNICATIONS_LEAD":
                            case 2:
                                message.type = 2;
                                break;
                            case "TYPE_OPERATIONS_LEAD":
                            case 3:
                                message.type = 3;
                                break;
                            case "TYPE_EXTERNAL_CUSTOMER_COMMUNICATIONS_LEAD":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_PRIMARY_ONCALL":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_SECONDARY_ONCALL":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_OTHER":
                            case 7:
                                message.type = 7;
                                break;
                            }
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.description != null)
                                message.description = String(object.description);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IncidentRole message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IncidentRole} message IncidentRole
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IncidentRole.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.title = "";
                                object.description = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.irm.v1alpha2.IncidentRole.Type[message.type] : message.type;
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            return object;
                        };
    
                        /**
                         * Converts this IncidentRole to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.IncidentRole
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IncidentRole.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.irm.v1alpha2.IncidentRole.Type
                         * @enum {string}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} TYPE_INCIDENT_COMMANDER=1 TYPE_INCIDENT_COMMANDER value
                         * @property {number} TYPE_COMMUNICATIONS_LEAD=2 TYPE_COMMUNICATIONS_LEAD value
                         * @property {number} TYPE_OPERATIONS_LEAD=3 TYPE_OPERATIONS_LEAD value
                         * @property {number} TYPE_EXTERNAL_CUSTOMER_COMMUNICATIONS_LEAD=4 TYPE_EXTERNAL_CUSTOMER_COMMUNICATIONS_LEAD value
                         * @property {number} TYPE_PRIMARY_ONCALL=5 TYPE_PRIMARY_ONCALL value
                         * @property {number} TYPE_SECONDARY_ONCALL=6 TYPE_SECONDARY_ONCALL value
                         * @property {number} TYPE_OTHER=7 TYPE_OTHER value
                         */
                        IncidentRole.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TYPE_INCIDENT_COMMANDER"] = 1;
                            values[valuesById[2] = "TYPE_COMMUNICATIONS_LEAD"] = 2;
                            values[valuesById[3] = "TYPE_OPERATIONS_LEAD"] = 3;
                            values[valuesById[4] = "TYPE_EXTERNAL_CUSTOMER_COMMUNICATIONS_LEAD"] = 4;
                            values[valuesById[5] = "TYPE_PRIMARY_ONCALL"] = 5;
                            values[valuesById[6] = "TYPE_SECONDARY_ONCALL"] = 6;
                            values[valuesById[7] = "TYPE_OTHER"] = 7;
                            return values;
                        })();
    
                        return IncidentRole;
                    })();
    
                    v1alpha2.IncidentRoleAssignment = (function() {
    
                        /**
                         * Properties of an IncidentRoleAssignment.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IIncidentRoleAssignment
                         * @property {string|null} [name] IncidentRoleAssignment name
                         * @property {string|null} [etag] IncidentRoleAssignment etag
                         * @property {google.cloud.irm.v1alpha2.IIncidentRole|null} [role] IncidentRoleAssignment role
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [assignee] IncidentRoleAssignment assignee
                         * @property {google.cloud.irm.v1alpha2.IUser|null} [proposedAssignee] IncidentRoleAssignment proposedAssignee
                         */
    
                        /**
                         * Constructs a new IncidentRoleAssignment.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an IncidentRoleAssignment.
                         * @implements IIncidentRoleAssignment
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IIncidentRoleAssignment=} [properties] Properties to set
                         */
                        function IncidentRoleAssignment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IncidentRoleAssignment name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @instance
                         */
                        IncidentRoleAssignment.prototype.name = "";
    
                        /**
                         * IncidentRoleAssignment etag.
                         * @member {string} etag
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @instance
                         */
                        IncidentRoleAssignment.prototype.etag = "";
    
                        /**
                         * IncidentRoleAssignment role.
                         * @member {google.cloud.irm.v1alpha2.IIncidentRole|null|undefined} role
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @instance
                         */
                        IncidentRoleAssignment.prototype.role = null;
    
                        /**
                         * IncidentRoleAssignment assignee.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} assignee
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @instance
                         */
                        IncidentRoleAssignment.prototype.assignee = null;
    
                        /**
                         * IncidentRoleAssignment proposedAssignee.
                         * @member {google.cloud.irm.v1alpha2.IUser|null|undefined} proposedAssignee
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @instance
                         */
                        IncidentRoleAssignment.prototype.proposedAssignee = null;
    
                        /**
                         * Creates a new IncidentRoleAssignment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncidentRoleAssignment=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.IncidentRoleAssignment} IncidentRoleAssignment instance
                         */
                        IncidentRoleAssignment.create = function create(properties) {
                            return new IncidentRoleAssignment(properties);
                        };
    
                        /**
                         * Encodes the specified IncidentRoleAssignment message. Does not implicitly {@link google.cloud.irm.v1alpha2.IncidentRoleAssignment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncidentRoleAssignment} message IncidentRoleAssignment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IncidentRoleAssignment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.etag);
                            if (message.role != null && message.hasOwnProperty("role"))
                                $root.google.cloud.irm.v1alpha2.IncidentRole.encode(message.role, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.assignee != null && message.hasOwnProperty("assignee"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.assignee, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.proposedAssignee != null && message.hasOwnProperty("proposedAssignee"))
                                $root.google.cloud.irm.v1alpha2.User.encode(message.proposedAssignee, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IncidentRoleAssignment message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.IncidentRoleAssignment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IIncidentRoleAssignment} message IncidentRoleAssignment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IncidentRoleAssignment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IncidentRoleAssignment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.IncidentRoleAssignment} IncidentRoleAssignment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IncidentRoleAssignment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.etag = reader.string();
                                    break;
                                case 3:
                                    message.role = $root.google.cloud.irm.v1alpha2.IncidentRole.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.assignee = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.proposedAssignee = $root.google.cloud.irm.v1alpha2.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IncidentRoleAssignment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.IncidentRoleAssignment} IncidentRoleAssignment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IncidentRoleAssignment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IncidentRoleAssignment message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IncidentRoleAssignment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.role != null && message.hasOwnProperty("role")) {
                                var error = $root.google.cloud.irm.v1alpha2.IncidentRole.verify(message.role);
                                if (error)
                                    return "role." + error;
                            }
                            if (message.assignee != null && message.hasOwnProperty("assignee")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.assignee);
                                if (error)
                                    return "assignee." + error;
                            }
                            if (message.proposedAssignee != null && message.hasOwnProperty("proposedAssignee")) {
                                var error = $root.google.cloud.irm.v1alpha2.User.verify(message.proposedAssignee);
                                if (error)
                                    return "proposedAssignee." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an IncidentRoleAssignment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.IncidentRoleAssignment} IncidentRoleAssignment
                         */
                        IncidentRoleAssignment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.IncidentRoleAssignment();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.role != null) {
                                if (typeof object.role !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.IncidentRoleAssignment.role: object expected");
                                message.role = $root.google.cloud.irm.v1alpha2.IncidentRole.fromObject(object.role);
                            }
                            if (object.assignee != null) {
                                if (typeof object.assignee !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.IncidentRoleAssignment.assignee: object expected");
                                message.assignee = $root.google.cloud.irm.v1alpha2.User.fromObject(object.assignee);
                            }
                            if (object.proposedAssignee != null) {
                                if (typeof object.proposedAssignee !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.IncidentRoleAssignment.proposedAssignee: object expected");
                                message.proposedAssignee = $root.google.cloud.irm.v1alpha2.User.fromObject(object.proposedAssignee);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IncidentRoleAssignment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IncidentRoleAssignment} message IncidentRoleAssignment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IncidentRoleAssignment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.etag = "";
                                object.role = null;
                                object.assignee = null;
                                object.proposedAssignee = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.role != null && message.hasOwnProperty("role"))
                                object.role = $root.google.cloud.irm.v1alpha2.IncidentRole.toObject(message.role, options);
                            if (message.assignee != null && message.hasOwnProperty("assignee"))
                                object.assignee = $root.google.cloud.irm.v1alpha2.User.toObject(message.assignee, options);
                            if (message.proposedAssignee != null && message.hasOwnProperty("proposedAssignee"))
                                object.proposedAssignee = $root.google.cloud.irm.v1alpha2.User.toObject(message.proposedAssignee, options);
                            return object;
                        };
    
                        /**
                         * Converts this IncidentRoleAssignment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.IncidentRoleAssignment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IncidentRoleAssignment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return IncidentRoleAssignment;
                    })();
    
                    v1alpha2.Artifact = (function() {
    
                        /**
                         * Properties of an Artifact.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface IArtifact
                         * @property {string|null} [name] Artifact name
                         * @property {string|null} [displayName] Artifact displayName
                         * @property {string|null} [etag] Artifact etag
                         * @property {string|null} [url] Artifact url
                         * @property {google.cloud.irm.v1alpha2.Artifact.Type|null} [type] Artifact type
                         */
    
                        /**
                         * Constructs a new Artifact.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents an Artifact.
                         * @implements IArtifact
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.IArtifact=} [properties] Properties to set
                         */
                        function Artifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Artifact name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @instance
                         */
                        Artifact.prototype.name = "";
    
                        /**
                         * Artifact displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @instance
                         */
                        Artifact.prototype.displayName = "";
    
                        /**
                         * Artifact etag.
                         * @member {string} etag
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @instance
                         */
                        Artifact.prototype.etag = "";
    
                        /**
                         * Artifact url.
                         * @member {string} url
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @instance
                         */
                        Artifact.prototype.url = "";
    
                        /**
                         * Artifact type.
                         * @member {google.cloud.irm.v1alpha2.Artifact.Type} type
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @instance
                         */
                        Artifact.prototype.type = 0;
    
                        /**
                         * Creates a new Artifact instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IArtifact=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Artifact} Artifact instance
                         */
                        Artifact.create = function create(properties) {
                            return new Artifact(properties);
                        };
    
                        /**
                         * Encodes the specified Artifact message. Does not implicitly {@link google.cloud.irm.v1alpha2.Artifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IArtifact} message Artifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Artifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            if (message.url != null && message.hasOwnProperty("url"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.url);
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Artifact message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Artifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {google.cloud.irm.v1alpha2.IArtifact} message Artifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Artifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Artifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Artifact} Artifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Artifact.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Artifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.displayName = reader.string();
                                    break;
                                case 3:
                                    message.etag = reader.string();
                                    break;
                                case 4:
                                    message.url = reader.string();
                                    break;
                                case 5:
                                    message.type = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Artifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Artifact} Artifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Artifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Artifact message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Artifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an Artifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Artifact} Artifact
                         */
                        Artifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Artifact)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Artifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.type) {
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_URL":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_JIRA_ISSUE":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Artifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Artifact} message Artifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Artifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.etag = "";
                                object.url = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.irm.v1alpha2.Artifact.Type[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this Artifact to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Artifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Artifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.irm.v1alpha2.Artifact.Type
                         * @enum {string}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} TYPE_URL=1 TYPE_URL value
                         * @property {number} TYPE_JIRA_ISSUE=4 TYPE_JIRA_ISSUE value
                         */
                        Artifact.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TYPE_URL"] = 1;
                            values[valuesById[4] = "TYPE_JIRA_ISSUE"] = 4;
                            return values;
                        })();
    
                        return Artifact;
                    })();
    
                    v1alpha2.CommunicationChannel = (function() {
    
                        /**
                         * Properties of a CommunicationChannel.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ICommunicationChannel
                         * @property {google.cloud.irm.v1alpha2.CommunicationChannel.IEmail|null} [email] CommunicationChannel email
                         * @property {google.cloud.irm.v1alpha2.CommunicationChannel.INotificationChannel|null} [notificationChannel] CommunicationChannel notificationChannel
                         */
    
                        /**
                         * Constructs a new CommunicationChannel.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a CommunicationChannel.
                         * @implements ICommunicationChannel
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ICommunicationChannel=} [properties] Properties to set
                         */
                        function CommunicationChannel(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommunicationChannel email.
                         * @member {google.cloud.irm.v1alpha2.CommunicationChannel.IEmail|null|undefined} email
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @instance
                         */
                        CommunicationChannel.prototype.email = null;
    
                        /**
                         * CommunicationChannel notificationChannel.
                         * @member {google.cloud.irm.v1alpha2.CommunicationChannel.INotificationChannel|null|undefined} notificationChannel
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @instance
                         */
                        CommunicationChannel.prototype.notificationChannel = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CommunicationChannel endpoint.
                         * @member {"email"|"notificationChannel"|undefined} endpoint
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @instance
                         */
                        Object.defineProperty(CommunicationChannel.prototype, "endpoint", {
                            get: $util.oneOfGetter($oneOfFields = ["email", "notificationChannel"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CommunicationChannel instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICommunicationChannel=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.CommunicationChannel} CommunicationChannel instance
                         */
                        CommunicationChannel.create = function create(properties) {
                            return new CommunicationChannel(properties);
                        };
    
                        /**
                         * Encodes the specified CommunicationChannel message. Does not implicitly {@link google.cloud.irm.v1alpha2.CommunicationChannel.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICommunicationChannel} message CommunicationChannel message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommunicationChannel.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.email != null && message.hasOwnProperty("email"))
                                $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email.encode(message.email, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel"))
                                $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.encode(message.notificationChannel, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommunicationChannel message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CommunicationChannel.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ICommunicationChannel} message CommunicationChannel message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommunicationChannel.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommunicationChannel message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.CommunicationChannel} CommunicationChannel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommunicationChannel.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CommunicationChannel();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.email = $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.notificationChannel = $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommunicationChannel message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.CommunicationChannel} CommunicationChannel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommunicationChannel.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommunicationChannel message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommunicationChannel.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.email != null && message.hasOwnProperty("email")) {
                                properties.endpoint = 1;
                                {
                                    var error = $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email.verify(message.email);
                                    if (error)
                                        return "email." + error;
                                }
                            }
                            if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel")) {
                                if (properties.endpoint === 1)
                                    return "endpoint: multiple values";
                                properties.endpoint = 1;
                                {
                                    var error = $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.verify(message.notificationChannel);
                                    if (error)
                                        return "notificationChannel." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommunicationChannel message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.CommunicationChannel} CommunicationChannel
                         */
                        CommunicationChannel.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.CommunicationChannel)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.CommunicationChannel();
                            if (object.email != null) {
                                if (typeof object.email !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CommunicationChannel.email: object expected");
                                message.email = $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email.fromObject(object.email);
                            }
                            if (object.notificationChannel != null) {
                                if (typeof object.notificationChannel !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.CommunicationChannel.notificationChannel: object expected");
                                message.notificationChannel = $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.fromObject(object.notificationChannel);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommunicationChannel message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @static
                         * @param {google.cloud.irm.v1alpha2.CommunicationChannel} message CommunicationChannel
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommunicationChannel.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.email != null && message.hasOwnProperty("email")) {
                                object.email = $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email.toObject(message.email, options);
                                if (options.oneofs)
                                    object.endpoint = "email";
                            }
                            if (message.notificationChannel != null && message.hasOwnProperty("notificationChannel")) {
                                object.notificationChannel = $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.toObject(message.notificationChannel, options);
                                if (options.oneofs)
                                    object.endpoint = "notificationChannel";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CommunicationChannel to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommunicationChannel.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        CommunicationChannel.Email = (function() {
    
                            /**
                             * Properties of an Email.
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                             * @interface IEmail
                             * @property {string|null} [address] Email address
                             */
    
                            /**
                             * Constructs a new Email.
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                             * @classdesc Represents an Email.
                             * @implements IEmail
                             * @constructor
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.IEmail=} [properties] Properties to set
                             */
                            function Email(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Email address.
                             * @member {string} address
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @instance
                             */
                            Email.prototype.address = "";
    
                            /**
                             * Creates a new Email instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.IEmail=} [properties] Properties to set
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.Email} Email instance
                             */
                            Email.create = function create(properties) {
                                return new Email(properties);
                            };
    
                            /**
                             * Encodes the specified Email message. Does not implicitly {@link google.cloud.irm.v1alpha2.CommunicationChannel.Email.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.IEmail} message Email message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Email.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.address != null && message.hasOwnProperty("address"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Email message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CommunicationChannel.Email.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.IEmail} message Email message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Email.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an Email message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.Email} Email
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Email.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.address = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an Email message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.Email} Email
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Email.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an Email message.
                             * @function verify
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Email.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.address != null && message.hasOwnProperty("address"))
                                    if (!$util.isString(message.address))
                                        return "address: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an Email message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.Email} Email
                             */
                            Email.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email)
                                    return object;
                                var message = new $root.google.cloud.irm.v1alpha2.CommunicationChannel.Email();
                                if (object.address != null)
                                    message.address = String(object.address);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an Email message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.Email} message Email
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Email.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.address = "";
                                if (message.address != null && message.hasOwnProperty("address"))
                                    object.address = message.address;
                                return object;
                            };
    
                            /**
                             * Converts this Email to JSON.
                             * @function toJSON
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.Email
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Email.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return Email;
                        })();
    
                        CommunicationChannel.NotificationChannel = (function() {
    
                            /**
                             * Properties of a NotificationChannel.
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                             * @interface INotificationChannel
                             * @property {string|null} [name] NotificationChannel name
                             */
    
                            /**
                             * Constructs a new NotificationChannel.
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel
                             * @classdesc Represents a NotificationChannel.
                             * @implements INotificationChannel
                             * @constructor
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.INotificationChannel=} [properties] Properties to set
                             */
                            function NotificationChannel(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * NotificationChannel name.
                             * @member {string} name
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @instance
                             */
                            NotificationChannel.prototype.name = "";
    
                            /**
                             * Creates a new NotificationChannel instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.INotificationChannel=} [properties] Properties to set
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel} NotificationChannel instance
                             */
                            NotificationChannel.create = function create(properties) {
                                return new NotificationChannel(properties);
                            };
    
                            /**
                             * Encodes the specified NotificationChannel message. Does not implicitly {@link google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.INotificationChannel} message NotificationChannel message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NotificationChannel.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && message.hasOwnProperty("name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified NotificationChannel message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.INotificationChannel} message NotificationChannel message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NotificationChannel.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a NotificationChannel message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel} NotificationChannel
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NotificationChannel.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.name = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a NotificationChannel message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel} NotificationChannel
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NotificationChannel.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a NotificationChannel message.
                             * @function verify
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            NotificationChannel.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a NotificationChannel message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel} NotificationChannel
                             */
                            NotificationChannel.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel)
                                    return object;
                                var message = new $root.google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a NotificationChannel message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @static
                             * @param {google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel} message NotificationChannel
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            NotificationChannel.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this NotificationChannel to JSON.
                             * @function toJSON
                             * @memberof google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            NotificationChannel.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return NotificationChannel;
                        })();
    
                        return CommunicationChannel;
                    })();
    
                    v1alpha2.Subscription = (function() {
    
                        /**
                         * Properties of a Subscription.
                         * @memberof google.cloud.irm.v1alpha2
                         * @interface ISubscription
                         * @property {string|null} [name] Subscription name
                         * @property {string|null} [etag] Subscription etag
                         * @property {google.cloud.irm.v1alpha2.ICommunicationChannel|null} [subscriptionChannel] Subscription subscriptionChannel
                         * @property {Array.<google.cloud.irm.v1alpha2.Subscription.EventType>|null} [eventTypes] Subscription eventTypes
                         */
    
                        /**
                         * Constructs a new Subscription.
                         * @memberof google.cloud.irm.v1alpha2
                         * @classdesc Represents a Subscription.
                         * @implements ISubscription
                         * @constructor
                         * @param {google.cloud.irm.v1alpha2.ISubscription=} [properties] Properties to set
                         */
                        function Subscription(properties) {
                            this.eventTypes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Subscription name.
                         * @member {string} name
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @instance
                         */
                        Subscription.prototype.name = "";
    
                        /**
                         * Subscription etag.
                         * @member {string} etag
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @instance
                         */
                        Subscription.prototype.etag = "";
    
                        /**
                         * Subscription subscriptionChannel.
                         * @member {google.cloud.irm.v1alpha2.ICommunicationChannel|null|undefined} subscriptionChannel
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @instance
                         */
                        Subscription.prototype.subscriptionChannel = null;
    
                        /**
                         * Subscription eventTypes.
                         * @member {Array.<google.cloud.irm.v1alpha2.Subscription.EventType>} eventTypes
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @instance
                         */
                        Subscription.prototype.eventTypes = $util.emptyArray;
    
                        /**
                         * Creates a new Subscription instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISubscription=} [properties] Properties to set
                         * @returns {google.cloud.irm.v1alpha2.Subscription} Subscription instance
                         */
                        Subscription.create = function create(properties) {
                            return new Subscription(properties);
                        };
    
                        /**
                         * Encodes the specified Subscription message. Does not implicitly {@link google.cloud.irm.v1alpha2.Subscription.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISubscription} message Subscription message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Subscription.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.etag);
                            if (message.subscriptionChannel != null && message.hasOwnProperty("subscriptionChannel"))
                                $root.google.cloud.irm.v1alpha2.CommunicationChannel.encode(message.subscriptionChannel, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.eventTypes != null && message.eventTypes.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.eventTypes.length; ++i)
                                    writer.int32(message.eventTypes[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Subscription message, length delimited. Does not implicitly {@link google.cloud.irm.v1alpha2.Subscription.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {google.cloud.irm.v1alpha2.ISubscription} message Subscription message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Subscription.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Subscription message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.irm.v1alpha2.Subscription} Subscription
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Subscription.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.irm.v1alpha2.Subscription();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.etag = reader.string();
                                    break;
                                case 3:
                                    message.subscriptionChannel = $root.google.cloud.irm.v1alpha2.CommunicationChannel.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    if (!(message.eventTypes && message.eventTypes.length))
                                        message.eventTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.eventTypes.push(reader.int32());
                                    } else
                                        message.eventTypes.push(reader.int32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Subscription message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.irm.v1alpha2.Subscription} Subscription
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Subscription.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Subscription message.
                         * @function verify
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Subscription.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.subscriptionChannel != null && message.hasOwnProperty("subscriptionChannel")) {
                                var error = $root.google.cloud.irm.v1alpha2.CommunicationChannel.verify(message.subscriptionChannel);
                                if (error)
                                    return "subscriptionChannel." + error;
                            }
                            if (message.eventTypes != null && message.hasOwnProperty("eventTypes")) {
                                if (!Array.isArray(message.eventTypes))
                                    return "eventTypes: array expected";
                                for (var i = 0; i < message.eventTypes.length; ++i)
                                    switch (message.eventTypes[i]) {
                                    default:
                                        return "eventTypes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Subscription message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.irm.v1alpha2.Subscription} Subscription
                         */
                        Subscription.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.irm.v1alpha2.Subscription)
                                return object;
                            var message = new $root.google.cloud.irm.v1alpha2.Subscription();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.subscriptionChannel != null) {
                                if (typeof object.subscriptionChannel !== "object")
                                    throw TypeError(".google.cloud.irm.v1alpha2.Subscription.subscriptionChannel: object expected");
                                message.subscriptionChannel = $root.google.cloud.irm.v1alpha2.CommunicationChannel.fromObject(object.subscriptionChannel);
                            }
                            if (object.eventTypes) {
                                if (!Array.isArray(object.eventTypes))
                                    throw TypeError(".google.cloud.irm.v1alpha2.Subscription.eventTypes: array expected");
                                message.eventTypes = [];
                                for (var i = 0; i < object.eventTypes.length; ++i)
                                    switch (object.eventTypes[i]) {
                                    default:
                                    case "EVENT_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.eventTypes[i] = 0;
                                        break;
                                    case "EVENT_TYPE_TITLE_CHANGE":
                                    case 1:
                                        message.eventTypes[i] = 1;
                                        break;
                                    case "EVENT_TYPE_SYNOPSIS_CHANGE":
                                    case 2:
                                        message.eventTypes[i] = 2;
                                        break;
                                    case "EVENT_TYPE_STAGE_CHANGE":
                                    case 3:
                                        message.eventTypes[i] = 3;
                                        break;
                                    case "EVENT_TYPE_SEVERITY_CHANGE":
                                    case 4:
                                        message.eventTypes[i] = 4;
                                        break;
                                    case "EVENT_TYPE_ANNOTATION_ADD":
                                    case 5:
                                        message.eventTypes[i] = 5;
                                        break;
                                    case "EVENT_TYPE_ANNOTATION_CHANGE":
                                    case 6:
                                        message.eventTypes[i] = 6;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Subscription message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @static
                         * @param {google.cloud.irm.v1alpha2.Subscription} message Subscription
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Subscription.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.eventTypes = [];
                            if (options.defaults) {
                                object.name = "";
                                object.etag = "";
                                object.subscriptionChannel = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.subscriptionChannel != null && message.hasOwnProperty("subscriptionChannel"))
                                object.subscriptionChannel = $root.google.cloud.irm.v1alpha2.CommunicationChannel.toObject(message.subscriptionChannel, options);
                            if (message.eventTypes && message.eventTypes.length) {
                                object.eventTypes = [];
                                for (var j = 0; j < message.eventTypes.length; ++j)
                                    object.eventTypes[j] = options.enums === String ? $root.google.cloud.irm.v1alpha2.Subscription.EventType[message.eventTypes[j]] : message.eventTypes[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Subscription to JSON.
                         * @function toJSON
                         * @memberof google.cloud.irm.v1alpha2.Subscription
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Subscription.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * EventType enum.
                         * @name google.cloud.irm.v1alpha2.Subscription.EventType
                         * @enum {string}
                         * @property {number} EVENT_TYPE_UNSPECIFIED=0 EVENT_TYPE_UNSPECIFIED value
                         * @property {number} EVENT_TYPE_TITLE_CHANGE=1 EVENT_TYPE_TITLE_CHANGE value
                         * @property {number} EVENT_TYPE_SYNOPSIS_CHANGE=2 EVENT_TYPE_SYNOPSIS_CHANGE value
                         * @property {number} EVENT_TYPE_STAGE_CHANGE=3 EVENT_TYPE_STAGE_CHANGE value
                         * @property {number} EVENT_TYPE_SEVERITY_CHANGE=4 EVENT_TYPE_SEVERITY_CHANGE value
                         * @property {number} EVENT_TYPE_ANNOTATION_ADD=5 EVENT_TYPE_ANNOTATION_ADD value
                         * @property {number} EVENT_TYPE_ANNOTATION_CHANGE=6 EVENT_TYPE_ANNOTATION_CHANGE value
                         */
                        Subscription.EventType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EVENT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "EVENT_TYPE_TITLE_CHANGE"] = 1;
                            values[valuesById[2] = "EVENT_TYPE_SYNOPSIS_CHANGE"] = 2;
                            values[valuesById[3] = "EVENT_TYPE_STAGE_CHANGE"] = 3;
                            values[valuesById[4] = "EVENT_TYPE_SEVERITY_CHANGE"] = 4;
                            values[valuesById[5] = "EVENT_TYPE_ANNOTATION_ADD"] = 5;
                            values[valuesById[6] = "EVENT_TYPE_ANNOTATION_CHANGE"] = 6;
                            return values;
                        })();
    
                        return Subscription;
                    })();
    
                    return v1alpha2;
                })();
    
                return irm;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.rules && message.rules.length))
                                message.rules = [];
                            message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.fullyDecodeReservedExpansion = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = "";
    
                /**
                 * HttpRule put.
                 * @member {string} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = "";
    
                /**
                 * HttpRule post.
                 * @member {string} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = "";
    
                /**
                 * HttpRule delete.
                 * @member {string} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = "";
    
                /**
                 * HttpRule patch.
                 * @member {string} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = "";
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && message.hasOwnProperty("get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && message.hasOwnProperty("put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && message.hasOwnProperty("post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && message.hasOwnProperty("delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && message.hasOwnProperty("patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && message.hasOwnProperty("body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && message.hasOwnProperty("custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.selector = reader.string();
                            break;
                        case 2:
                            message.get = reader.string();
                            break;
                        case 3:
                            message.put = reader.string();
                            break;
                        case 4:
                            message.post = reader.string();
                            break;
                        case 5:
                            message["delete"] = reader.string();
                            break;
                        case 6:
                            message.patch = reader.string();
                            break;
                        case 8:
                            message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                            break;
                        case 7:
                            message.body = reader.string();
                            break;
                        case 12:
                            message.responseBody = reader.string();
                            break;
                        case 11:
                            if (!(message.additionalBindings && message.additionalBindings.length))
                                message.additionalBindings = [];
                            message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && message.hasOwnProperty("path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.kind = reader.string();
                            break;
                        case 2:
                            message.path = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CustomHttpPattern;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.publicDependency && message.publicDependency.length))
                                message.publicDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.publicDependency.push(reader.int32());
                            } else
                                message.publicDependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weakDependency && message.weakDependency.length))
                                message.weakDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weakDependency.push(reader.int32());
                            } else
                                message.weakDependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.messageType && message.messageType.length))
                                message.messageType = [];
                            message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nestedType && message.nestedType.length))
                                message.nestedType = [];
                            message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extensionRange && message.extensionRange.length))
                                message.extensionRange = [];
                            message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneofDecl && message.oneofDecl.length))
                                message.oneofDecl = [];
                            message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && message.hasOwnProperty("options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            case 3:
                                message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && message.hasOwnProperty("label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.typeName = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.defaultValue = reader.string();
                            break;
                        case 9:
                            message.oneofIndex = reader.int32();
                            break;
                        case 10:
                            message.jsonName = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {string}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {string}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        case 4:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.inputType = reader.string();
                            break;
                        case 3:
                            message.outputType = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.clientStreaming = reader.bool();
                            break;
                        case 6:
                            message.serverStreaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = false;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.javaPackage = reader.string();
                            break;
                        case 8:
                            message.javaOuterClassname = reader.string();
                            break;
                        case 10:
                            message.javaMultipleFiles = reader.bool();
                            break;
                        case 20:
                            message.javaGenerateEqualsAndHash = reader.bool();
                            break;
                        case 27:
                            message.javaStringCheckUtf8 = reader.bool();
                            break;
                        case 9:
                            message.optimizeFor = reader.int32();
                            break;
                        case 11:
                            message.goPackage = reader.string();
                            break;
                        case 16:
                            message.ccGenericServices = reader.bool();
                            break;
                        case 17:
                            message.javaGenericServices = reader.bool();
                            break;
                        case 18:
                            message.pyGenericServices = reader.bool();
                            break;
                        case 42:
                            message.phpGenericServices = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.ccEnableArenas = reader.bool();
                            break;
                        case 36:
                            message.objcClassPrefix = reader.string();
                            break;
                        case 37:
                            message.csharpNamespace = reader.string();
                            break;
                        case 39:
                            message.swiftPrefix = reader.string();
                            break;
                        case 40:
                            message.phpClassPrefix = reader.string();
                            break;
                        case 41:
                            message.phpNamespace = reader.string();
                            break;
                        case 44:
                            message.phpMetadataNamespace = reader.string();
                            break;
                        case 45:
                            message.rubyPackage = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = false;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {string}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.messageSetWireFormat = reader.bool();
                            break;
                        case 2:
                            message.noStandardDescriptorAccessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.mapEntry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {string}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {string}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allowAlias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1049:
                            message[".google.api.defaultHost"] = reader.string();
                            break;
                        case 1050:
                            message[".google.api.oauthScopes"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 34:
                            message.idempotencyLevel = reader.int32();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 72295728:
                            message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                            break;
                        case 1051:
                            if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                message[".google.api.methodSignature"] = [];
                            message[".google.api.methodSignature"].push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {string}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifierValue = reader.string();
                            break;
                        case 4:
                            message.positiveIntValue = reader.uint64();
                            break;
                        case 5:
                            message.negativeIntValue = reader.int64();
                            break;
                        case 6:
                            message.doubleValue = reader.double();
                            break;
                        case 7:
                            message.stringValue = reader.bytes();
                            break;
                        case 8:
                            message.aggregateValue = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.namePart = reader.string();
                                break;
                            case 2:
                                message.isExtension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leadingComments = reader.string();
                                break;
                            case 4:
                                message.trailingComments = reader.string();
                                break;
                            case 6:
                                if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                    message.leadingDetachedComments = [];
                                message.leadingDetachedComments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.sourceFile = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.seconds = reader.int64();
                            break;
                        case 2:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Timestamp;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.paths && message.paths.length))
                                message.paths = [];
                            message.paths.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
