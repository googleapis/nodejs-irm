// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Note: this file is purely for documentation. Any contents are not expected
// to be loaded as the JS file.

/**
 * A user of the IRM app.
 *
 * @property {string} userId
 *   Output only. User id that will allow to get additional information from
 *   People API. This field will be populated implicitly if the caller creates
 *   or edits a resource (for example, posts an annotation).
 *
 * @property {string} email
 *   Email address of the user. This must be associated with a Google account.
 *   This field will be set if the user is explicitly identified (verbatim) by
 *   email address in an API request (potentially sometime in the past). It
 *   will not be populated based on the credentials of a caller of the API.
 *
 * @typedef User
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.User definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const User = {
  // This is for documentation. Actual contents will be loaded by gRPC.
};

/**
 * A signal is a message calling attention to a (potential) incident. An example
 * is a page based on a Stackdriver Alerting policy.
 *
 * @property {string} name
 *   Resource name of the signal, for example,
 *   "projects/{project_id}/signals/{signal_id}".
 *
 * @property {string} etag
 *   Etag to validate the object is unchanged for a read-modify-write operation.
 *   An empty etag will overwrite other changes.
 *
 * @property {string} incident
 *   Resource name of the incident this signal is currently assigned to.
 *   May be empty if signal is unassigned.
 *
 * @property {Object} createTime
 *   Output only. Time this signal was created.
 *
 *   This object should have the same structure as [Timestamp]{@link google.protobuf.Timestamp}
 *
 * @property {Object} closeTime
 *   Output only. Time this signal was closed. This field is not populated
 *   while the signal is still firing.
 *
 *   This object should have the same structure as [Timestamp]{@link google.protobuf.Timestamp}
 *
 * @property {Object} detectTime
 *   The time this Signal was first detected. This is identical to create_time
 *   for Signals created by Stackdriver Alerting.
 *
 *   This object should have the same structure as [Timestamp]{@link google.protobuf.Timestamp}
 *
 * @property {Object} creator
 *   Output only. The user that created this signal for manually created
 *   signals. Empty if this signal was generated by a system (for example,
 *   Stackdriver Alerting).
 *
 *   This object should have the same structure as [User]{@link google.cloud.irm.v1alpha2.User}
 *
 * @property {string} title
 *   One-line summary of the signal.
 *   Immutable.
 *
 * @property {string} contentType
 *   Content type string. 'text/plain' is currently the only supported content
 *   type for Signals created via the API. Signals created by Stackdriver
 *   Alerting support 'text/html' as well. Immutable for Signals created by
 *   Stackdriver Alerting.
 *
 * @property {string} content
 *   Full message of the signal.
 *   Immutable for Signals created by Stackdriver Alerting.
 *
 * @property {number} signalState
 *   The state of this signal.
 *   For Signals created by Stackdriver Alerting this field is output only.
 *
 *   The number should be among the values of [State]{@link google.cloud.irm.v1alpha2.State}
 *
 * @property {Object[]} signalArtifacts
 *   A set of artifacts to additional resources for this Signal. For example, a
 *   link to Stackdriver logging for the Signal.
 *   Immutable for Signals created by Stackdriver Alerting.
 *
 *   This object should have the same structure as [SignalArtifact]{@link google.cloud.irm.v1alpha2.SignalArtifact}
 *
 * @typedef Signal
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Signal definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Signal = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * An artifact associated with the Signal.
   *
   * @property {string} userType
   *   A custom user type
   *
   * @property {string} uri
   *   The URI for the artifact.
   *
   * @typedef SignalArtifact
   * @memberof google.cloud.irm.v1alpha2
   * @see [google.cloud.irm.v1alpha2.Signal.SignalArtifact definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
   */
  SignalArtifact: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  },

  /**
   * Describes whether the alerting condition is still firing.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  State: {

    /**
     * Unspecified
     */
    STATE_UNSPECIFIED: 0,

    /**
     * Firing
     */
    STATE_OPEN: 1,

    /**
     * Non-firing
     */
    STATE_CLOSED: 2
  }
};

/**
 * A text annotation by a user.
 *
 * @property {string} name
 *   Resource name of the annotation, for example,
 *   "projects/{project_id}/incidents/{incident_id}/annotations/{annotation_id}".
 *
 * @property {Object} author
 *   Output only. Author of the annotation.
 *
 *   This object should have the same structure as [User]{@link google.cloud.irm.v1alpha2.User}
 *
 * @property {Object} createTime
 *   Output only. Time the annotation was created.
 *
 *   This object should have the same structure as [Timestamp]{@link google.protobuf.Timestamp}
 *
 * @property {string} content
 *   Content of the annotation. Immutable.
 *
 * @property {string} contentType
 *   Content type of the annotation, for example, 'text/plain'
 *   or 'text/markdown'. Immutable.
 *
 * @typedef Annotation
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Annotation definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Annotation = {
  // This is for documentation. Actual contents will be loaded by gRPC.
};

/**
 * A tag by a user.
 *
 * @property {string} name
 *   Resource name of a tag, for example,
 *   "projects/{project_id}/incidents/{incident_id}/tags/{tag_id}"
 *
 * @property {string} displayName
 *   Display name of the resource (for example, "cause:rollout"). Immutable.
 *
 * @typedef Tag
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Tag definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Tag = {
  // This is for documentation. Actual contents will be loaded by gRPC.
};

/**
 * Synopsis is a summary of an incident and it contains a textual content,
 * an author and a last updated timestamp.
 *
 * @property {string} contentType
 *   Content type string, for example, 'text/plain' or 'text/markdown'.
 *
 * @property {string} content
 *   Textual content of the synopsis. It can be plain text or markdown as
 *   indicated by the content_type.
 *
 * @property {Object} updateTime
 *   Last updated timestamp.
 *
 *   This object should have the same structure as [Timestamp]{@link google.protobuf.Timestamp}
 *
 * @property {Object} author
 *   Author of the synopsis.
 *
 *   This object should have the same structure as [User]{@link google.cloud.irm.v1alpha2.User}
 *
 * @typedef Synopsis
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Synopsis definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Synopsis = {
  // This is for documentation. Actual contents will be loaded by gRPC.
};

/**
 * Representation of an incident.
 *
 * @property {string} name
 *   Output only. Resource name of the incident, for example,
 *   "projects/{project_id}/incidents/{incident_id}".
 *
 * @property {string} title
 *   One-line summary of the incident.
 *
 * @property {number} escalationLevel
 *   Escalation level of the incident.
 *
 *   The number should be among the values of [EscalationLevel]{@link google.cloud.irm.v1alpha2.EscalationLevel}
 *
 * @property {string} etag
 *   Etag to validate the object is unchanged for a read-modify-write operation.
 *   An empty etag will overwrite other changes.
 *
 * @property {number} severity
 *   Severity of the incident.
 *
 *   The number should be among the values of [Severity]{@link google.cloud.irm.v1alpha2.Severity}
 *
 * @property {number} stage
 *   Stage of the incident.
 *
 *   The number should be among the values of [Stage]{@link google.cloud.irm.v1alpha2.Stage}
 *
 * @property {string} duplicateIncident
 *   Resource name of the incident this incident is a duplicate of. Empty if
 *   this incident is not a duplicate.
 *   An incident can only be a duplicate of an incident that is not marked as a
 *   duplicate already. Setting this to a non-empty value must also set the
 *   stage to `STAGE_DUPLICATE`. Unsetting this value value must also update
 *   `stage` to a value other than `STAGE_DUPLICATE`.
 *
 * @property {Object} startTime
 *   Output only. Time this incident started. Used to measure the 'elapsed
 *   time'. Start time of an incident is the earliest creation time of any of
 *   its Signals or the create time of the incident if no Signals are assigned.
 *
 *   This object should have the same structure as [Timestamp]{@link google.protobuf.Timestamp}
 *
 * @property {Object} synopsis
 *   Output only. Synopsis of this incident.
 *
 *   This object should have the same structure as [Synopsis]{@link google.cloud.irm.v1alpha2.Synopsis}
 *
 * @property {Object} communicationVenue
 *   Location of communications for this incident. This is informational
 *   only; IRM does not use this to send messages.
 *
 *   This object should have the same structure as [CommunicationVenue]{@link google.cloud.irm.v1alpha2.CommunicationVenue}
 *
 * @typedef Incident
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Incident definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Incident = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * CommunicationVenue is a record of where conversations about an incident
   * are happening.
   *
   * @property {string} uri
   *   A URI to the web interface of the channel.
   *
   * @property {string} displayName
   *   A name representing the channel in IRM UI.
   *
   * @property {number} channelType
   *   The type of channel/venue for incident communications.
   *
   *   The number should be among the values of [ChannelType]{@link google.cloud.irm.v1alpha2.ChannelType}
   *
   * @typedef CommunicationVenue
   * @memberof google.cloud.irm.v1alpha2
   * @see [google.cloud.irm.v1alpha2.Incident.CommunicationVenue definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
   */
  CommunicationVenue: {
    // This is for documentation. Actual contents will be loaded by gRPC.

    /**
     * The type of channel/venue for incident communications.
     *
     * @enum {number}
     * @memberof google.cloud.irm.v1alpha2
     */
    ChannelType: {

      /**
       * An unspecified communication channel.
       */
      CHANNEL_TYPE_UNSPECIFIED: 0,

      /**
       * A communication channel that is represented by a generic URI.
       */
      CHANNEL_TYPE_URI: 1,

      /**
       * A communication channel that represents a Slack channel.
       */
      CHANNEL_TYPE_SLACK: 5
    }
  },

  /**
   * Specifies the escalation level of this incident, within the IRM protocol
   * for handling incidents.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  EscalationLevel: {

    /**
     * The incident has not been escalated. This is the value used by all new
     * and legacy incidents.
     */
    ESCALATION_LEVEL_UNSPECIFIED: 0,

    /**
     * The incident has been escalated to the organizational level.
     */
    ESCALATION_LEVEL_ORGANIZATION: 1
  },

  /**
   * Severity of an incident.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  Severity: {

    /**
     * Severity is not specified.
     */
    SEVERITY_UNSPECIFIED: 0,

    /**
     * Huge incident.
     */
    SEVERITY_HUGE: 1,

    /**
     * Major incident.
     */
    SEVERITY_MAJOR: 2,

    /**
     * Medium incident.
     */
    SEVERITY_MEDIUM: 3,

    /**
     * Minor incident.
     */
    SEVERITY_MINOR: 4,

    /**
     * Negligible incident.
     */
    SEVERITY_NEGLIGIBLE: 5
  },

  /**
   * Stage of an incident.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  Stage: {

    /**
     * This is the default value if no stage has been specified.
     * Note: The caller of the API should set the stage to DETECTED.
     */
    STAGE_UNSPECIFIED: 0,

    /**
     * The incident has been detected. This is the initial stage of a new
     * incident.
     * Note: The caller still has to set the stage manually.
     */
    STAGE_DETECTED: 4,

    /**
     * This incident has been formally characterized.
     */
    STAGE_TRIAGED: 1,

    /**
     * This incident has been mitigated, i.e. does not affect the service level
     * anymore.
     */
    STAGE_MITIGATED: 2,

    /**
     * This incident has been fully resolved, i.e. there are no immediate
     * follow-up tasks.
     */
    STAGE_RESOLVED: 3,

    /**
     * Postmortem for the incident was written.
     */
    STAGE_DOCUMENTED: 5,

    /**
     * Stage for an incident with `duplicate_incident`. This incident is not
     * authoritative anymore and the `duplicate_incident` should be used to
     * determine the stage.
     */
    STAGE_DUPLICATE: 6
  }
};

/**
 * Describes a role that can be assigned to an incident.
 *
 * @property {number} type
 *   The type of role. The role type is immutable in role assignments. Each role
 *   type can only be used once per incident, except for TYPE_OTHER.
 *
 *   The number should be among the values of [Type]{@link google.cloud.irm.v1alpha2.Type}
 *
 * @property {string} title
 *   Output only unless TYPE_OTHER is used. Title of the role. For TYPE_OTHER,
 *   must be unique within an incident.
 *
 * @property {string} description
 *   Output only unless TYPE_OTHER is used. Description of the role.
 *
 * @typedef IncidentRole
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.IncidentRole definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const IncidentRole = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * List of possible roles.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  Type: {

    /**
     * The role is unspecified.
     */
    TYPE_UNSPECIFIED: 0,

    /**
     * Incident Commander: Manages response plan, near-term and long-term
     * objectives, establishes priorities, and delegates tasks as needed.
     */
    TYPE_INCIDENT_COMMANDER: 1,

    /**
     * Communications Lead: Keeps everybody outside and within the response team
     * informed.
     */
    TYPE_COMMUNICATIONS_LEAD: 2,

    /**
     * Operations Lead: Figures out what to do, and gets it done.
     */
    TYPE_OPERATIONS_LEAD: 3,

    /**
     * External Customer Communications Lead: Responsible for communicating
     * incident details to customers/public.
     */
    TYPE_EXTERNAL_CUSTOMER_COMMUNICATIONS_LEAD: 4,

    /**
     * Primary Oncall: Responds to the initial page and handles all
     * responsibilities for pre-escalated incidents.
     */
    TYPE_PRIMARY_ONCALL: 5,

    /**
     * Secondary Oncall: Helps the primary oncall if necessary; mostly useful
     * for pre-escalated incidents.
     */
    TYPE_SECONDARY_ONCALL: 6,

    /**
     * User-specified roles. One example is a Planning Lead, who keeps track of
     * the incident. Another is an assistant Incident Commander.
     */
    TYPE_OTHER: 7
  }
};

/**
 * Stores the assignee of a role as well as the proposed next assignee.
 *
 * @property {string} name
 *   Output only. Resource name such as
 *   "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
 *
 * @property {string} etag
 *   Output only. Etag for this version of the resource. Must be specified in
 *   update requests and match the current version in storage. Must not be
 *   modified by the client.
 *
 * @property {Object} role
 *   The role that is or will be assigned.
 *
 *   This object should have the same structure as [IncidentRole]{@link google.cloud.irm.v1alpha2.IncidentRole}
 *
 * @property {Object} assignee
 *   The user this role is assigned to. This field can only be directly set
 *   during creation request. Subsequent updates are done via the
 *   IncidentRoleHandover methods.
 *
 *   This object should have the same structure as [User]{@link google.cloud.irm.v1alpha2.User}
 *
 * @property {Object} proposedAssignee
 *   The recipient of a requested role handoff. This field can only be directly
 *   set during creation request. Subsequent updates are done via the
 *   IncidentRoleHandover methods.
 *
 *   `assignee` is always the current role-holder, and `proposed_assignee` is
 *   used to track unfinished assignments and handoffs. Let's say Bob assigns
 *   Alice to a role. Then the fields are:
 *     `assignee`: nil, `proposed_assignee`: Alice
 *   If Alice accepts, then the fields are:
 *     `assignee`: Alice, `proposed_assignee`: nil
 *   If she cancels, then the RoleAssignment is deleted.
 *   Let's say Alice has the role. Then the fields are:
 *     `assignee`: Alice, `proposed_assignee`: nil
 *   If Alice becomes incapacitated and Bob requests Carol to take over, then
 *   the fields are:
 *     `assignee`: Alice, `proposed_assignee`: Carol
 *   After Carol accepts the handover, the fields are:
 *     `assignee`: Carol, `proposed_assignee`: nil
 *   Or if Carol refuses the handover, the fields are:
 *     `assignee`: Alice, `proposed_assignee`: nil
 *
 *   This object should have the same structure as [User]{@link google.cloud.irm.v1alpha2.User}
 *
 * @typedef IncidentRoleAssignment
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.IncidentRoleAssignment definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const IncidentRoleAssignment = {
  // This is for documentation. Actual contents will be loaded by gRPC.
};

/**
 * External artifact associated to an incident.
 *
 * @property {string} name
 *   Output only. Resource name such as
 *   "projects/{project_id}/incidents/{incident_id}/artifacts/{artifact_id}".
 *
 * @property {string} displayName
 *   User provided name of an artifact.
 *
 * @property {string} etag
 *   Output only. Etag for this version of the resource. Must be specified in
 *   update requests and match the current version in storage. Must not be
 *   modified by the client.
 *
 * @property {string} url
 *   URL to access the artifact.
 *
 * @property {number} type
 *   Type of this artifact.
 *
 *   The number should be among the values of [Type]{@link google.cloud.irm.v1alpha2.Type}
 *
 * @typedef Artifact
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Artifact definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Artifact = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * Possible types of an artifact.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  Type: {

    /**
     * External type is unspecified.
     */
    TYPE_UNSPECIFIED: 0,

    /**
     * URL.
     */
    TYPE_URL: 1,

    /**
     * A JIRA issue.
     */
    TYPE_JIRA_ISSUE: 4
  }
};

/**
 * Communication Channels are mechanisms used to receive notifications
 * about changes to incidents.
 *
 * @property {Object} email
 *   Messages will be delivered via email.
 *
 *   This object should have the same structure as [Email]{@link google.cloud.irm.v1alpha2.Email}
 *
 * @property {Object} notificationChannel
 *   Messages will be delivered via a Stackdriver notification channel.
 *
 *   This object should have the same structure as [NotificationChannel]{@link google.cloud.irm.v1alpha2.NotificationChannel}
 *
 * @typedef CommunicationChannel
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.CommunicationChannel definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const CommunicationChannel = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * A communication channel that delivers messages to an email address.
   *
   * @property {string} address
   *   The email address, for example, "user@example.com".
   *
   * @typedef Email
   * @memberof google.cloud.irm.v1alpha2
   * @see [google.cloud.irm.v1alpha2.CommunicationChannel.Email definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
   */
  Email: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  },

  /**
   * A communication channel that delivers messages to a Stackdriver
   * notification channel.
   *
   * @property {string} name
   *   Stackdriver notification channel name.
   *
   * @typedef NotificationChannel
   * @memberof google.cloud.irm.v1alpha2
   * @see [google.cloud.irm.v1alpha2.CommunicationChannel.NotificationChannel definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
   */
  NotificationChannel: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  }
};

/**
 * A subscription allows users to get notifications about changes to
 * an incident.
 *
 * @property {string} name
 *   Output only. Resource name such as
 *   "projects/{project_id}/incidents/{incident_id}/subscriptions/{subscription_id}".
 *
 * @property {string} etag
 *   Output only. Etag for this version of the resource. Must be specified in
 *   update requests and match the current version in storage. Must not be
 *   modified by the client.
 *
 * @property {Object} subscriptionChannel
 *   A communications channel to send subscription messages to.
 *
 *   This object should have the same structure as [CommunicationChannel]{@link google.cloud.irm.v1alpha2.CommunicationChannel}
 *
 * @property {number[]} eventTypes
 *   Types of events this subscription receives notifications for.
 *
 *   The number should be among the values of [EventType]{@link google.cloud.irm.v1alpha2.EventType}
 *
 * @typedef Subscription
 * @memberof google.cloud.irm.v1alpha2
 * @see [google.cloud.irm.v1alpha2.Subscription definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/irm/v1alpha2/incidents.proto}
 */
const Subscription = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * Types of changes that users can subscribe to in an incident.
   *
   * @enum {number}
   * @memberof google.cloud.irm.v1alpha2
   */
  EventType: {

    /**
     * An event_type that's not specified is an error.
     */
    EVENT_TYPE_UNSPECIFIED: 0,

    /**
     * The incident's title has changed.
     */
    EVENT_TYPE_TITLE_CHANGE: 1,

    /**
     * The incident's synopsis has changed.
     */
    EVENT_TYPE_SYNOPSIS_CHANGE: 2,

    /**
     * The incident's stage has changed.
     */
    EVENT_TYPE_STAGE_CHANGE: 3,

    /**
     * The incident's severity has changed.
     */
    EVENT_TYPE_SEVERITY_CHANGE: 4,

    /**
     * A new annotation has been added to the incident.
     */
    EVENT_TYPE_ANNOTATION_ADD: 5,

    /**
     * An annotation has been modified.
     */
    EVENT_TYPE_ANNOTATION_CHANGE: 6
  }
};